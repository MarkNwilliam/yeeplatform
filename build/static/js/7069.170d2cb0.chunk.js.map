{"version":3,"file":"static/js/7069.170d2cb0.chunk.js","mappings":"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","sources":["components/DNft.js","../node_modules/@mui/icons-material/Image.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Box,\r\n  Chip\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ImageIcon from \"@mui/icons-material/Image\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst FileInput = styled(\"input\")({\r\n  display: \"none\",\r\n});\r\n\r\nconst Form = styled(\"form\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  marginTop: theme.spacing(1),\r\n}));\r\n\r\nconst SubmitButton = styled(Button)(({ theme }) => ({\r\n  margin: theme.spacing(3, 0, 2),\r\n}));\r\n\r\nfunction DNft() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const categories = [\r\n    \"Fiction\",\r\n    \"Nonfiction\",\r\n    \"Science Fiction\",\r\n    \"Romance\",\r\n    \"Mystery/Thriller\",\r\n    \"Fantasy\",\r\n    \"Biography\",\r\n    \"History\",\r\n    \"Business/Economics\",\r\n    \"Self-help\",\r\n    \"Health/Fitness\",\r\n    \"Cooking/Food\",\r\n    \"Travel\",\r\n    \"Technology\",\r\n  ];\r\n\r\n  const targetAudiences = [\"Children\", \"Young Adult\", \"Adult\", \"Senior\"];\r\n\r\n  return (\r\n    <>\r\n       <Typography variant=\"h4\" gutterBottom>\r\n        Create NFT\r\n      </Typography>\r\n      <Typography color=\"error\" variant=\"subtitle1\">\r\n        Note: This page is still in the test phase.\r\n      </Typography>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Number of Shares\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              {...register(\"shares\", { required: \"Please enter the number of shares\" })}\r\n              error={!!errors.shares}\r\n              helperText={errors.shares?.message}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Share Price (in ETH)\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              {...register(\"sharePrice\", { required: \"Please enter the share price in ETH\" })}\r\n              error={!!errors.sharePrice}\r\n              helperText={errors.sharePrice?.message}\r\n            />\r\n          </Grid>\r\n     \r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Book Title\"\r\n              variant=\"outlined\"\r\n              {...register(\"title\", { required: \"Please enter the book title\" })}\r\n              error={!!errors.title}\r\n              helperText={errors.title?.message}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Book Subtitle\"\r\n              variant=\"outlined\"\r\n              {...register(\"subtitle\")}\r\n              error={!!errors.subtitle}\r\n              helperText={errors.subtitle?.message}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              label=\"Book Description\"\r\n              variant=\"outlined\"\r\n              {...register(\"description\", { required: \"Please enter the book description\" })}\r\n              error={!!errors.description}\r\n              helperText={errors.description?.message}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              multiple\r\n              options={categories}\r\n              getOptionLabel={(option) => option}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    label={option}\r\n                    key={index}\r\n                    {...getTagProps({ index })}\r\n                    disabled={true}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Categories\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  helperText={errors.categories?.message}\r\n                  error={!!errors.categories}\r\n                />\r\n              )}\r\n              control={control}\r\n              name=\"categories\"\r\n              rules={{ required: \"Please select at least one category\" }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              multiple\r\n              options={targetAudiences}\r\n              getOptionLabel={(option) => option}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    label={option}\r\n                    key={index}\r\n                    {...getTagProps({ index })}\r\n                    disabled={true}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Target Audiences\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  helperText={errors.targetAudiences?.message}\r\n                  error={!!errors.targetAudiences}\r\n                />\r\n              )}\r\n              control={control}\r\n              name=\"targetAudiences\"\r\n              rules={{ required: \"Please select at least one target audience\" }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Publication Date (if published)\"\r\n              type=\"date\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              {...register(\"publicationDate\")}\r\n              error={!!errors.publicationDate}\r\n          helperText={errors.publicationDate?.message}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"ISBN (if applicable)\"\r\n          variant=\"outlined\"\r\n          {...register(\"isbn\")}\r\n          error={!!errors.isbn}\r\n          helperText={errors.isbn?.message}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Upload Cover Image (JPG, PNG)\r\n            </Typography>\r\n            <FileInput\r\n              accept=\"image/jpeg, image/png\"\r\n              id=\"cover-image\"\r\n              type=\"file\"\r\n              {...register(\"coverImage\", {\r\n                required: \"Please upload a cover image in JPG or PNG format\",\r\n              })}\r\n            />\r\n            <label htmlFor=\"cover-image\">\r\n              <Button\r\n                component=\"span\"\r\n                variant=\"outlined\"\r\n                startIcon={<ImageIcon />}\r\n              >\r\n                Upload Cover Image\r\n              </Button>\r\n            </label>\r\n            {errors.coverImage && (\r\n              <Box mt={1}>\r\n                <Typography variant=\"caption\" color=\"error\">\r\n                  {errors.coverImage.message}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Upload Back Image (JPG, PNG)\r\n            </Typography>\r\n            <FileInput\r\n              accept=\"image/jpeg, image/png\"\r\n              id=\"back-image\"\r\n              type=\"file\"\r\n              {...register(\"backImage\", {\r\n                required: \"Please upload a back image in JPG or PNG format\",\r\n              })}\r\n            />\r\n            <label htmlFor=\"back-image\">\r\n              <Button\r\n                component=\"span\"\r\n                variant=\"outlined\"\r\n                startIcon={<ImageIcon />}\r\n              >\r\n                Upload Back Image\r\n              </Button>\r\n            </label>\r\n            {errors.backImage && (\r\n              <Box mt={1}>\r\n                <Typography variant=\"caption\" color=\"error\">\r\n                  {errors.backImage.message}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Upload Ebook (PDF format)\r\n        </Typography>\r\n        <FileInput\r\n          accept=\".pdf\"\r\n          id=\"ebook-pdf\"\r\n          type=\"file\"\r\n          {...register(\"ebookPdf\", {\r\n            required: \"Please upload the ebook in PDF format\",\r\n          })}\r\n        />\r\n        <label htmlFor=\"ebook-pdf\">\r\n          <Button component=\"span\" variant=\"outlined\" startIcon={<ImageIcon />}>\r\n            Upload Ebook PDF\r\n          </Button>\r\n        </label>\r\n        {errors.ebookPdf && (\r\n          <Box mt={1}>\r\n            <Typography variant=\"caption\" color=\"error\">\r\n              {errors.ebookPdf.message}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <SubmitButton type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n          Submit\r\n        </SubmitButton>\r\n      </Grid>\r\n    </Grid>\r\n  </Form>\r\n</>\r\n);\r\n}\r\n\r\nexport default DNft;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2M8.5 13.5l2.5 3.01L14.5 12l4.5 6H5z\"\n}), 'Image');"],"names":["FileInput","styled","display","Form","_ref","theme","width","marginTop","spacing","SubmitButton","Button","_ref2","margin","_errors$shares","_errors$sharePrice","_errors$title","_errors$subtitle","_errors$description","_errors$publicationDa","_errors$isbn","register","handleSubmit","control","formState","errors","useForm","_jsxs","_Fragment","children","_jsx","Typography","variant","gutterBottom","color","onSubmit","data","console","log","Grid","container","item","xs","TextField","fullWidth","label","type","required","error","shares","helperText","message","sharePrice","title","subtitle","multiline","rows","description","Autocomplete","multiple","options","getOptionLabel","option","renderTags","value","getTagProps","map","index","Chip","disabled","renderInput","params","_errors$categories","categories","name","rules","_errors$targetAudienc","targetAudiences","InputLabelProps","shrink","publicationDate","isbn","accept","id","htmlFor","component","startIcon","ImageIcon","coverImage","Box","mt","backImage","ebookPdf","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}