{"version":3,"file":"static/js/6576.fd4636a8.chunk.js","mappings":"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","sources":["components/MyAudios.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material';\r\n\r\nimport { auth } from '../firebase';\r\nimport Swal from 'sweetalert2'; \r\n\r\n\r\n\r\nconst MyAudios = () => {\r\n  const [audiobooks, setAudiobooks] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [editedText, setEditedText] = useState('');\r\n  const [selectedDocId, setSelectedDocId] = useState('');\r\n\r\n  const fetchAudiobooks = async () => {\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/getauthoraudios?userId=${auth.currentUser.uid}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setAudiobooks(data);\r\n      } else {\r\n        throw new Error(`Error fetching audiobooks: ${response.statusText}`);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching audiobooks:\", err);\r\n    } finally{\r\n      Swal.close();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAudiobooks();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleClickOpen = (description, docId) => {\r\n    setEditedText(description);\r\n    setSelectedDocId(docId);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      Swal.showLoading();\r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/updateABD`, { \r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n              bookId: selectedDocId,\r\n              description: editedText\r\n          })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const updatedAudiobook = await response.json();\r\n        setAudiobooks(prevBooks => prevBooks.map(ab => ab._id === selectedDocId ? updatedAudiobook : ab));\r\n        setOpen(false);\r\n        fetchAudiobooks();\r\n      } else {\r\n        throw new Error(`Failed to update the description: ${response.statusText}`);\r\n      }\r\n    } catch(err) {\r\n      Swal.fire('Oops...', 'Something went wrong while updating the description!', 'error');\r\n    } finally {\r\n      Swal.close();\r\n        handleClose();\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (docId) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"This will permanently delete the audiobook.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          Swal.showLoading();\r\n          const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/deleteAudiobook/${docId}`, { method: 'DELETE' });\r\n          if (response.ok) {\r\n            setAudiobooks(prevBooks => prevBooks.filter(book => book._id !== docId));\r\n            Swal.fire('Deleted!', 'The audiobook has been deleted.', 'success');\r\n            fetchAudiobooks(); \r\n          } else {\r\n            throw new Error(`Failed to delete the book: ${response.statusText}`);\r\n          }\r\n        } catch(err) {\r\n          Swal.fire('Oops...', 'Something went wrong while deleting the book!', 'error');\r\n        } finally {\r\n          Swal.close();\r\n          \r\n          handleClose();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" component=\"h2\">\r\n        My Audio books\r\n      </Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Title</TableCell>\r\n              <TableCell>Published On</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Duration</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {audiobooks.map((audiobook) => (\r\n              <TableRow key={audiobook._id}>\r\n                <TableCell>{audiobook.title}</TableCell>\r\n                <TableCell>{audiobook.publishedDate}</TableCell>\r\n                <TableCell>{audiobook.description}</TableCell>\r\n                <TableCell>{audiobook.duration}</TableCell>\r\n                <TableCell>\r\n                  <Button onClick={() => handleClickOpen(audiobook.description, audiobook._id)}>Edit</Button>\r\n                  <Button onClick={() => handleDelete(audiobook._id)}>Delete</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        {audiobooks.length === 0 && (\r\n          <Typography variant=\"h6\" style={{ textAlign: 'center', padding: '20px', color: 'grey' }}>\r\n            No data available.\r\n          </Typography>\r\n        )}\r\n\r\n      </TableContainer>\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Edit Audiobook Description</DialogTitle>\r\n<DialogContent>\r\n<DialogContentText>\r\nPlease edit the description of the selected audiobook.\r\n</DialogContentText>\r\n<TextField\r\nautoFocus\r\nmargin=\"dense\"\r\nid=\"description\"\r\nlabel=\"Description\"\r\ntype=\"text\"\r\nfullWidth\r\nvalue={editedText}\r\nonChange={(e) => setEditedText(e.target.value)}\r\n/>\r\n</DialogContent>\r\n<DialogActions>\r\n<Button onClick={handleClose}>Cancel</Button>\r\n<Button onClick={handleSave}>Save</Button>\r\n</DialogActions>\r\n</Dialog>\r\n</div>\r\n);\r\n};\r\n\r\nexport default MyAudios;\r\n"],"names":["MyAudios","audiobooks","setAudiobooks","useState","open","setOpen","editedText","setEditedText","selectedDocId","setSelectedDocId","fetchAudiobooks","async","Swal","response","fetch","concat","auth","currentUser","uid","ok","Error","statusText","data","json","err","console","error","useEffect","handleClose","_jsxs","children","_jsx","Typography","variant","component","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","audiobook","title","publishedDate","description","duration","Button","onClick","handleClickOpen","docId","_id","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","method","prevBooks","filter","book","handleDelete","length","style","textAlign","padding","color","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","id","label","type","fullWidth","value","onChange","e","target","DialogActions","headers","body","JSON","stringify","bookId","updatedAudiobook","ab"],"sourceRoot":""}