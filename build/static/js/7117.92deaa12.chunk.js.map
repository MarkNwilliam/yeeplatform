{"version":3,"file":"static/js/7117.92deaa12.chunk.js","mappings":"2qzBASA,MAgHA,EAhHgBA,KACd,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IAAMC,KAAKC,MAAMC,aAAaC,QAAQ,iBAAkB,KAC9FC,EAASC,IAAcN,EAAAA,EAAAA,WAAS,GACjCO,GAAWC,EAAAA,EAAAA,MACXC,GAAuBC,EAAAA,EAAAA,SAAO,GA0EpC,OAxEAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAOC,EAAAA,GAAKC,YAElB,GAAIF,GAAQA,EAAKG,cAMf,OALAC,QAAQC,IAAI,4BACZlB,GAAc,GACdI,aAAae,QAAQ,cAAc,GACnCX,EAAS,UACTD,GAAW,GAIb,IAAIG,EAAqBU,QAEzB,IACE,GAAIrB,EAGF,OAFAkB,QAAQC,IAAI,yBACZX,GAAW,GAIbU,QAAQC,IAAI,wBACZ,MACMG,EADY,IAAIC,gBAAgBC,OAAOC,SAASC,QACzBC,IAAI,WAGjC,GAFAT,QAAQC,IAAI,WAAYG,GAEpBA,EAAY,CACdX,EAAqBU,SAAU,EAC/B,MAAMN,GAAOa,EAAAA,EAAAA,OACbC,EAAAA,EAAAA,IAAgBd,EAAMO,GACnBQ,MAAK,KACJZ,QAAQC,IAAI,6CACLY,EAAAA,EAAAA,IAAgBhB,EAAMO,MAE9BQ,MAAK,KACJZ,QAAQC,IAAI,iCACZlB,GAAc,GACdI,aAAae,QAAQ,cAAc,GAGnCY,MAAM,kEAAmE,CACvEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMhC,KAAKiC,UAAU,CAAEC,WAAYvB,EAAKwB,IAAKrB,eAAe,MAE7Da,MAAKS,GAAYA,EAASC,SAC1BV,MAAKW,IACJvB,QAAQC,IAAI,gDAAiDsB,EAAK,IAEnEC,OAAMC,IACLzB,QAAQ0B,MAAM,uDAAwDD,EAAI,GAC1E,IAEHD,OAAOE,IACN1B,QAAQC,IAAI,kBAAmByB,GAC/B3C,GAAc,GACdI,aAAae,QAAQ,cAAc,EAAM,IAE1CyB,SAAQ,KACPrC,GAAW,EAAM,GAEvB,MACEU,QAAQC,IAAI,8CACZX,GAAW,EAEf,CAAE,MAAOoC,GACP1B,QAAQC,IAAI,kCAAmCyB,EACjD,IACC,CAACnC,KAKFqC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yEAAwEC,SAAA,EACrFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BC,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAAMzC,EAAS,SACxBsC,UAAU,gCAA+BC,SAC1C,YAGDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,SACpCzC,GACC0C,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBAEHC,EAAAA,EAAAA,KAACE,IAAM,CACLC,cAAepD,EAAaoD,EAAgBC,EAC5CN,UAAU,wBAKlBE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wDAAuDC,SACjEhD,EAAa,4DAA0C,uDAG1DiD,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAAMzC,EAAS,SACxBsC,UAAU,6FAA4FC,SACvG,iBAGG,C","sources":["pages/Welcome.js"],"sourcesContent":["// Welcome.js\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport Lottie from 'lottie-react';\r\nimport animationData from '../animations/congs.json';\r\nimport notVerifiedAnimation from '../animations/problem.json';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuth, applyActionCode, checkActionCode } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\n\r\nconst Welcome = () => {\r\n  const [isVerified, setIsVerified] = useState(() => JSON.parse(localStorage.getItem('isVerified')) || false);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const hasCheckedActionCode = useRef(false); // add a ref here\r\n\r\n  useEffect(() => {\r\n    const user = auth.currentUser;\r\n\r\n    if (user && user.emailVerified) {\r\n      console.log('User is already verified');\r\n      setIsVerified(true);\r\n      localStorage.setItem('isVerified', true);\r\n      navigate('/');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (hasCheckedActionCode.current) return; // check the ref here\r\n\r\n    try {\r\n      if (isVerified) {\r\n        console.log('Already verified');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      console.log('useEffect is running');\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const actionCode = urlParams.get('oobCode');\r\n      console.log('oobCode:', actionCode);\r\n\r\n      if (actionCode) {\r\n        hasCheckedActionCode.current = true; // set the ref here\r\n        const auth = getAuth();\r\n        checkActionCode(auth, actionCode)\r\n          .then(() => {\r\n            console.log('Action code is valid, applying it now...');\r\n            return applyActionCode(auth, actionCode);\r\n          })\r\n          .then(() => {\r\n            console.log('Email verification successful');\r\n            setIsVerified(true);\r\n            localStorage.setItem('isVerified', true);\r\n\r\n            // Make API call to update email verification in MongoDB\r\n            fetch('https://yeeplatformbackend.azurewebsites.net/updateVerification', {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({ firebaseId: user.uid, emailVerified: true })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              console.log(\"Email verification status updated in MongoDB:\", data);\r\n            })\r\n            .catch(err => {\r\n              console.error(\"Error updating email verification status in MongoDB:\", err);\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log('Error occurred:', error);\r\n            setIsVerified(false);\r\n            localStorage.setItem('isVerified', false);\r\n          })\r\n          .finally(() => {\r\n            setLoading(false);\r\n          });\r\n      } else {\r\n        console.log('No oobCode found, setting loading to false');\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.log('An error occurred in useEffect:', error);\r\n    }\r\n  }, [navigate]); // remove isVerified from dependencies\r\n\r\n  \r\n  \r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n      <div className=\"w-full max-w-lg mx-auto mb-4\">\r\n        <button \r\n          onClick={() => navigate('/home')}\r\n          className=\"text-yellow-500 text-3xl mb-4\"\r\n        >\r\n          ‚Üê\r\n        </button>\r\n        <div className=\"aspect-w-16 aspect-h-9\">\r\n          {loading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            <Lottie \r\n              animationData={isVerified ? animationData : notVerifiedAnimation} \r\n              className=\"w-full h-full\" \r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <p className=\"text-2xl md:text-3xl text-gray-800 mb-4 font-semibold\">\r\n        {isVerified ? \"üéâ Thank you for finishing signup! üéâ\" : \"‚ö†Ô∏è Email not yet verified! ‚ö†Ô∏è\"}\r\n      </p>\r\n\r\n      <button \r\n        onClick={() => navigate('/home')}\r\n        className=\"mt-4 px-4 py-2 bg-yellow-400 text-white rounded w-full max-w-xs mx-auto text-lg md:text-xl\"\r\n      >\r\n        Go to Home\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n\r\n"],"names":["Welcome","isVerified","setIsVerified","useState","JSON","parse","localStorage","getItem","loading","setLoading","navigate","useNavigate","hasCheckedActionCode","useRef","useEffect","user","auth","currentUser","emailVerified","console","log","setItem","current","actionCode","URLSearchParams","window","location","search","get","getAuth","checkActionCode","then","applyActionCode","fetch","method","headers","body","stringify","firebaseId","uid","response","json","data","catch","err","error","finally","_jsxs","className","children","_jsx","onClick","Lottie","animationData","notVerifiedAnimation"],"sourceRoot":""}