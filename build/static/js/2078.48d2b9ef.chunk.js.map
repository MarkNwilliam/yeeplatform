{"version":3,"file":"static/js/2078.48d2b9ef.chunk.js","mappings":"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","sources":["contexts/ProtectedRoute.js","../node_modules/decode-uri-component/index.js","../node_modules/split-on-first/index.js","../node_modules/filter-obj/index.js","../node_modules/query-string/base.js","../node_modules/query-string/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate,useLocation } from 'react-router-dom';\r\nimport { useAuth } from \"./AuthContext\";\r\nimport queryString from 'query-string';\r\n\r\nconst ProtectedRouteWrapper = ({ children }) => {\r\n  const { user, isAuthor: contextIsAuthor, loading } = useAuth();\r\n  const location = useLocation();\r\n\r\n  console.log(\"ProtectedRoute: User from context:\", user);\r\n  console.log(\"ProtectedRoute: isAuthor from context:\", contextIsAuthor);\r\n\r\n  if (loading) {\r\n    console.log(\"ProtectedRoute: Still loading\");\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user) {\r\n    console.log(\"ProtectedRoute: No user found, navigating to Signin\");\r\n    const query = queryString.stringify({ from: location.pathname }); // Append current page to query parameter\r\n    console.log(\"Query parameter:\", query);\r\n    console.log(\"Location object:\", location);\r\n    return <Navigate to={`/signin?${query}`} replace />;\r\n  } \r\n\r\n\r\n\r\n  console.log(\"ProtectedRoute: Rendering protected content\");\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRouteWrapper;\r\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tresult[key] = Boolean(value) && typeof value === 'object' && !Array.isArray(value) ? keysSorter(value) : value;\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n"],"names":["_ref","children","user","isAuthor","contextIsAuthor","loading","useAuth","location","useLocation","console","log","_jsx","query","queryString","stringify","from","pathname","Navigate","to","concat","replace","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","length","left","slice","right","Array","prototype","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","entries","Object","keys","key","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","isNullOrUndefined","value","undefined","strictUriEncode","encodeURIComponent","x","charCodeAt","toString","toUpperCase","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","decodeComponent","keysSorter","sort","a","b","Number","map","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","arrayFormat","arrayFormatSeparator","formatter","accumulator","includes","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","filter","parseUrl","url","_url_$split$","_url_","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","getHash","urlObjectForFragmentEncode","URL","pick","exclude"],"sourceRoot":""}