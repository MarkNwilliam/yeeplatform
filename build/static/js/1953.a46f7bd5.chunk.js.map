{"version":3,"file":"static/js/1953.a46f7bd5.chunk.js","mappings":"2PAcA,MAWMA,GAAMC,EAAAA,EAAAA,IAXW,CACrBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMjB,IAAIC,GAEJC,EAAAA,EAAAA,MAAcC,MAAMD,IACdA,IACFD,GAAYG,EAAAA,EAAAA,IAAaZ,GAGzB,IAOG,MAAMa,GAAOC,EAAAA,EAAAA,IAAQd,GAIfe,EAAmBA,CAACC,EAAWC,KACtCR,GACFS,EAAAA,EAAAA,IAAST,EAAWO,EAAWC,GAE/BE,QAAQC,KAAK,6CACf,C,8HC8BF,QAzEA,WACE,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAC7BC,GAAWC,EAAAA,EAAAA,MAsCjB,OArCiBC,EAAAA,EAAAA,OAIjBC,EAAAA,EAAAA,YAAU,MACRZ,EAAAA,EAAAA,IAAiB,YAAa,CAAEa,UAAW,mBAAoB,GAC9D,KAgCDC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yEAAwEC,UACrFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDC,SAAC,qBAClEC,EAAAA,EAAAA,MAAA,QAAMC,SAjCgBC,UAG1B,GAFAC,EAAEC,iBAEGf,EASL,UACQgB,EAAAA,EAAAA,IAAuBxB,EAAAA,GAAMQ,GACnCiB,IAAAA,KAAU,CACRC,KAAM,UACNC,MAAO,UACPC,KAAM,wDAERjB,EAAS,IACX,CAAE,MAAOkB,GACPJ,IAAAA,KAAU,CACRC,KAAM,QACNC,MAAO,QACPC,KAAMC,EAAMC,SAEhB,MAtBEL,IAAAA,KAAU,CACRC,KAAM,QACNC,MAAO,QACPC,KAAM,mCAmBV,EAOyCG,aAAa,MAAKb,SAAA,EACrDF,EAAAA,EAAAA,KAAA,SACEgB,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,YAAY,gBACZC,UAAQ,EACRnB,UAAU,8FACVoB,SAAWf,GAAMb,EAASa,EAAEgB,OAAOC,UAErCvB,EAAAA,EAAAA,KAAA,UACEgB,KAAK,SACLf,UAAU,yIAAwIC,SACnJ,yBAIHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,UACnCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,+BAA+BuB,QAASA,IAAM7B,EAAS,WAAWO,SAAC,4BAQ/F,C","sources":["firebase.js","pages/ForgotPassword.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics,  isSupported, logEvent } from \"firebase/analytics\";\r\nimport {\r\n  getAuth,\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  sendEmailVerification,\r\n  signOut,\r\n} from \"firebase/auth\";\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBXS56tIro9cd-Sd4ySn5AwLw3T6cnMHr0\",\r\n  authDomain: \"yeeplatform.firebaseapp.com\",\r\n  projectId: \"yeeplatform\",\r\n  storageBucket: \"yeeplatform.appspot.com\",\r\n  messagingSenderId: \"272587831821\",\r\n  appId: \"1:272587831821:web:b612b427ff43968f33f344\",\r\n  measurementId: \"G-YZV03469PP\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nlet analytics;\r\n\r\nisSupported().then((isSupported) => {\r\n  if (isSupported) {\r\n    analytics = getAnalytics(app);\r\n    //console.log(\"Firebase Analytics is supported and loaded successfully!\");\r\n  } else {\r\n    //console.log(\"Firebase Analytics is not supported in this environment\");\r\n  }\r\n});\r\n\r\n// Add console.log statement to check Firebase connection\r\n// console.log(\"Firebase connected successfully\");\r\n\r\nexport const auth = getAuth(app);\r\n\r\n\r\n// Export a function to log events after Firebase Analytics is initialized\r\nexport const logFirebaseEvent = (eventName, eventParams) => {\r\n  if (analytics) {\r\n    logEvent(analytics, eventName, eventParams);\r\n  } else {\r\n    console.warn(\"Firebase Analytics is not initialized yet.\");\r\n  }\r\n};\r\nexport {\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  sendEmailVerification,\r\n  signOut,\r\n  logEvent,\r\n  analytics,\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { sendPasswordResetEmail } from \"firebase/auth\";\r\nimport { auth } from \"../firebase\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { logFirebaseEvent } from '../firebase.js';\r\n\nfunction ForgotPassword() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    logFirebaseEvent('page_view', { page_path: '/forgotpassword' });\r\n  }, []);\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!email) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Error\",\r\n        text: \"Please enter your email address\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await sendPasswordResetEmail(auth, email);\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: \"Success\",\r\n        text: \"Password reset email sent. Please check your inbox.\",\r\n      });\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Error\",\r\n        text: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-yellow-200 p-4 sm:p-0\">\r\n      <div className=\"w-full max-w-md bg-white rounded-lg shadow-md p-6\">\r\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">Forgot Password</h1>\r\n        <form onSubmit={handleResetPassword} autoComplete=\"off\">\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email Address\"\r\n            required\r\n            className=\"mb-4 w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-gray-700 focus:outline-none\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full py-2 px-4 bg-gray-700 text-white font-medium rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-gray-800\"\r\n          >\r\n            Send Reset Email\r\n          </button>\r\n        </form>\r\n        <div className=\"mt-4 text-center\">\r\n          <span className=\"text-gray-700 block\">\r\n            <span className=\"text-blue-500 cursor-pointer\" onClick={() => navigate(\"/signin\")}>\r\n              Back to Sign In\r\n            </span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","isSupported","then","getAnalytics","auth","getAuth","logFirebaseEvent","eventName","eventParams","logEvent","console","warn","email","setEmail","useState","navigate","useNavigate","useLocation","useEffect","page_path","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","sendPasswordResetEmail","Swal","icon","title","text","error","message","autoComplete","type","id","name","placeholder","required","onChange","target","value","onClick"],"sourceRoot":""}