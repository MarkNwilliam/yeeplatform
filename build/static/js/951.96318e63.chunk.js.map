{"version":3,"file":"static/js/951.96318e63.chunk.js","mappings":"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","sources":["pages/Welcome.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport Lottie from 'lottie-react';\r\nimport animationData from '../animations/congs.json';\r\nimport notVerifiedAnimation from '../animations/problem.json';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { getAuth, applyActionCode, checkActionCode, verifyPasswordResetCode,confirmPasswordReset } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\nimport { debounce } from 'lodash';\r\nimport { updatePassword } from 'firebase/auth';\r\nimport Swal from 'sweetalert2';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport { EyeIcon, EyeSlashIcon } from '@heroicons/react/24/solid';\r\n\r\n\r\nconst Welcome = () => {\r\n  const [isVerified, setIsVerified] = useState(() => JSON.parse(localStorage.getItem('isVerified')) || false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const navigate = useNavigate();\r\n  const hasCheckedActionCode = useRef(false);\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const debounceDelay = 1000;\r\n\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const actionCode = urlParams.get('oobCode');\r\n  const action_mode = urlParams.get('mode');\r\n  const auth = getAuth();\r\n  //console.log('oobCode:', actionCode);\r\n  //console.log('mode:', action_mode);\r\n\r\n  useEffect(() => {\r\n    const user = auth.currentUser;\r\n\r\n    //console.log('action_mode:', action_mode);\r\n  //console.log('actionCode:', actionCode);\r\n\r\n    if (user && user.emailVerified && action_mode === 'verifyEmail') {\r\n      //console.log('User is already verified');\r\n      setIsVerified(true);\r\n      localStorage.setItem('isVerified', true);\r\n      navigate('/');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (hasCheckedActionCode.current) return;\r\n\r\n    try {\r\n      if (isVerified && action_mode === 'verifyEmail') {\r\n        //console.log('Already verified');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      if (actionCode && action_mode === 'verifyEmail') {\r\n        hasCheckedActionCode.current = true;\r\n        const auth = getAuth();\r\n        checkActionCode(auth, actionCode)\r\n          .then(() => {\r\n            //console.log('Action code is valid, applying it now...');\r\n            return applyActionCode(auth, actionCode);\r\n          })\r\n          .then(() => {\r\n            //console.log('Email verification successful');\r\n            setIsVerified(true);\r\n            localStorage.setItem('isVerified', true);\r\n      \r\n            fetch('https://yeeplatformbackend.azurewebsites.net/updateVerification', {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({ firebaseId: user.uid, emailVerified: true })\r\n            })\r\n              .then(response => response.json())\r\n              .then(data => {\r\n                //console.log(\"Email verification status updated in MongoDB:\", data);\r\n              })\r\n              .catch(err => {\r\n                console.error(\"Error updating email verification status in MongoDB:\", err);\r\n              });\r\n          })\r\n          .catch(async (error) => {\r\n            //console.log('Error occurred:', error);\r\n            setError(true);\r\n            setErrorMessage('An error occurred while verifying the code. Please try again.');\r\n            setIsVerified(false);\r\n            localStorage.setItem('isVerified', false);\r\n      \r\n            //console.log('Showing Swal error dialog');\r\n            await Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: 'An error occurred while verifying the code. Please try again.'\r\n            });\r\n      \r\n            //console.log('Navigating to home page after delay');\r\n            setTimeout(() => {\r\n              navigate('/home');\r\n            }, 3000); // navigate to home page after 3 seconds\r\n          })\r\n          .finally(() => {\r\n            setLoading(false);\r\n          });\r\n      \r\n      } else if (actionCode && action_mode === 'resetPassword') {\r\n        hasCheckedActionCode.current = true;\r\n       \r\n        //console.log('Action code is valid, applying it now for password ...');\r\n        verifyPasswordResetCode(auth, actionCode)\r\n          .then((email) => {\r\n            //console.log('Action code is valid, user email:', email);\r\n          })\r\n          .catch(async (error) => {\r\n            //console.log('Error occurred:', error);\r\n            setError(true);\r\n            setErrorMessage('An error occurred while resetting the password. Please try again.');\r\n          \r\n            //console.log('Showing Swal error dialog');\r\n            await Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: 'An error occurred while updating the password. Please try again.'\r\n            });\r\n          \r\n            //console.log('Navigating to home page after delay');\r\n            setTimeout(() => {\r\n              navigate('/home');\r\n            }, 3000); // navigate to home page after 3 seconds\r\n          })\r\n          .finally(() => {\r\n            setLoading(false);\r\n          });\r\n      } else {\r\n        //console.log('No oobCode found, setting loading to false');\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      //console.log('An error occurred in useEffect:', error);\r\n      setError(true);\r\n      setErrorMessage('An unexpected error occurred. Please try again later.');\r\n      setLoading(false);\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleUserPasswordChange = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    //console.log('handlePasswordChange called');\r\n  \r\n    if (!password || !confirmPassword) {\r\n      //console.log('Error: Missing password or confirmPassword');\r\n      setError(true);\r\n      setErrorMessage('Please fill in all fields');\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      //console.log('Error: Passwords do not match');\r\n      setError(true);\r\n      setErrorMessage('Passwords do not match');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      //console.log('Showing Swal loading dialog');\r\n      const swalLoading = Swal.fire({\r\n        title: 'Updating Password',\r\n        text: 'Please wait...',\r\n        allowOutsideClick: false,\r\n        didOpen: () => {\r\n          Swal.showLoading();\r\n        }\r\n      });\r\n  \r\n      //console.log('Calling confirmPasswordReset');\r\n      await confirmPasswordReset( auth, actionCode, password);\r\n  \r\n      //console.log('Closing Swal loading dialog');\r\n      await swalLoading.close();\r\n  \r\n      //console.log('Showing Swal success dialog');\r\n      await Swal.fire({\r\n        icon: 'success',\r\n        title: 'Password Updated',\r\n        text: 'Your password has been updated successfully.'\r\n      });\r\n  \r\n      //console.log('Navigating to home page after delay');\r\n      setTimeout(() => {\r\n        navigate('/home');\r\n      }, 3000); // navigate to home page after 3 seconds\r\n    } catch (error) {\r\n      console.error('Error updating password:', error);\r\n      setError(true);\r\n      setErrorMessage('An error occurred while resetting the password. Please try again.');\r\n  \r\n      //console.log('Showing Swal error dialog');\r\n      await Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'An error occurred while updating the password. Please try again.'\r\n      });\r\n  \r\n      //console.log('Navigating to home page after delay');\r\n      setTimeout(() => {\r\n        navigate('/home');\r\n      }, 3000); // navigate to home page after 3 seconds\r\n    }\r\n  };\r\n\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const toggleConfirmPasswordVisibility = () => {\r\n    setShowConfirmPassword(!showConfirmPassword);\r\n  };\r\n  //const debouncedHandleSignUp = debounce(handlePasswordChange, debounceDelay);\r\n  const renderUI = () => {\r\n    //console.log('renderUI called');\r\n    //console.log('loading:', loading);\r\n    //console.log('error:', error);\r\n    //console.log('mode:', action_mode);\r\n\r\n    if (loading) {\r\n      return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n          <LinearProgress className=\"text-yellow-500 animate-pulse\" color=\"secondary\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (action_mode === 'resetPassword') {\r\n      //console.log('Rendering resetPassword UI');\r\n      return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n          <div className=\"w-full max-w-lg mx-auto mb-4\">\r\n            <h2>Reset Password</h2>\r\n            <form onSubmit={handleUserPasswordChange} className=\"space-y-4\" autoComplete=\"off\">\r\n\r\n            <div className=\"flex w-full\">\r\n              <input\r\n                type={showPassword ? 'text' : 'password'}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                minLength=\"6\"\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n               <button onClick={togglePasswordVisibility} className=\"bg-gray-200 rounded-r-lg p-2 hover:bg-gray-300\">\r\n        {showPassword ? <EyeIcon className=\"h-5 w-5 text-gray-500\" /> : <EyeSlashIcon className=\"h-5 w-5 text-gray-500\" />}\r\n      </button>\r\n              </div>\r\n\r\n<div className=\"flex w-full\">\r\n              <input\r\n                type={showConfirmPassword ? 'text' : 'password'}\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                placeholder=\"Confirm Password\"\r\n                minLength=\"6\"\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n                 <button onClick={toggleConfirmPasswordVisibility} className=\"bg-gray-200 rounded-r-lg p-2 hover:bg-gray-300\">\r\n        {showConfirmPassword ? <EyeIcon className=\"h-5 w-5 text-gray-500\" /> : <EyeSlashIcon className=\"h-5 w-5 text-gray-500\" />}\r\n      </button>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full py-2 px-4 bg-yellow-500 text-white font-medium rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-yellow-700\"\r\n              >\r\n                Change password\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n          <div className=\"w-full max-w-lg mx-auto mb-4\">\r\n            <button \r\n              onClick={() => navigate('/home')}\r\n              className=\"text-yellow-500 text-3xl mb-4\"\r\n            >\r\n              ←\r\n            </button>\r\n            <div className=\"aspect-w-16 aspect-h-9\">\r\n              <Lottie \r\n                animationData={notVerifiedAnimation}\r\n                className=\"w-full h-full\" \r\n              />\r\n            </div>\r\n            <p className=\"text-2xl md:text-3xl text-gray-800 mb-4 font-semibold\">\r\n              {errorMessage}\r\n            </p>\r\n          </div>\r\n          <button \r\n            onClick={() => navigate('/home')}\r\n            className=\"mt-4 px-4 py-2 bg-yellow-400 text-white rounded w-full max-w-xs mx-auto text-lg md:text-xl\"\r\n          >\r\n            Go to Home\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (action_mode === 'verifyEmail') {\r\n      return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n          <div className=\"w-full max-w-lg mx-auto mb-4\">\r\n            <button \r\n              onClick={() => navigate('/home')}\r\n              className=\"text-yellow-500 text-3xl mb-4\"\r\n            >\r\n              ←\r\n            </button>\r\n            <div className=\"aspect-w-16 aspect-h-9\">\r\n              <Lottie \r\n                animationData={isVerified ? animationData : notVerifiedAnimation}\r\n                className=\"w-full h-full\" \r\n              />\r\n            </div>\r\n            <p className=\"text-2xl md:text-3xl text-gray-800 mb-4 font-semibold\">\r\n              {isVerified ? \"🎉 Thank you for finishing signup! 🎉\" : \"⚠️ Email not yet verified! ⚠️\"}\r\n            </p>\r\n          </div>\r\n          <button \r\n            onClick={() => navigate('/home')}\r\n            className=\"mt-4 px-4 py-2 bg-yellow-400 text-white rounded w-full max-w-xs mx-auto text-lg md:text-xl\"\r\n          >\r\n            Go to Home\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n \r\nelse {\r\n  return(\r\n  <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n         <h1>UI is not showing</h1>\r\n        </div>\r\n  )\r\n}\r\n  \r\n  };\r\n\r\n  return (\r\n    <div>\r\n     \r\n      {renderUI()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n"],"names":["Welcome","isVerified","setIsVerified","useState","JSON","parse","localStorage","getItem","loading","setLoading","error","setError","errorMessage","setErrorMessage","navigate","useNavigate","hasCheckedActionCode","useRef","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","urlParams","URLSearchParams","window","location","search","actionCode","get","action_mode","auth","getAuth","useEffect","user","currentUser","emailVerified","setItem","current","checkActionCode","then","applyActionCode","fetch","method","headers","body","stringify","firebaseId","uid","response","json","data","catch","err","console","async","Swal","icon","title","text","setTimeout","finally","verifyPasswordResetCode","email","handleUserPasswordChange","e","preventDefault","swalLoading","allowOutsideClick","didOpen","confirmPasswordReset","close","togglePasswordVisibility","toggleConfirmPasswordVisibility","_jsx","children","className","LinearProgress","color","_jsxs","onSubmit","autoComplete","type","id","name","placeholder","minLength","required","onChange","target","value","onClick","EyeIcon","EyeSlashIcon","Lottie","animationData","notVerifiedAnimation"],"sourceRoot":""}