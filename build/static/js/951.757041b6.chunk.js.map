{"version":3,"file":"static/js/951.757041b6.chunk.js","mappings":"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","sources":["pages/Welcome.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport Lottie from 'lottie-react';\r\nimport animationData from '../animations/congs.json';\r\nimport notVerifiedAnimation from '../animations/problem.json';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { getAuth, applyActionCode, checkActionCode } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\nimport { debounce } from 'lodash';\r\nimport { updatePassword } from 'firebase/auth';\r\nimport Swal from 'sweetalert2';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\n\r\nconst Welcome = () => {\r\n  const [isVerified, setIsVerified] = useState(() => JSON.parse(localStorage.getItem('isVerified')) || false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false); // State variable for error\r\n  const [errorMessage, setErrorMessage] = useState(''); // State variable for error message\r\n  const navigate = useNavigate();\r\n  const hasCheckedActionCode = useRef(false); // add a ref here\r\n  const { mode } = useParams(); // Get the mode parameter from the URL\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const debounceDelay = 1000; // 1 second\r\n\r\n \r\n  useEffect(() => {\r\n    const user = auth.currentUser;\r\n\r\n    if (user && user.emailVerified) {\r\n      console.log('User is already verified');\r\n      setIsVerified(true);\r\n      localStorage.setItem('isVerified', true);\r\n      navigate('/');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (hasCheckedActionCode.current) return; // check the ref here\r\n\r\n    try {\r\n      if (isVerified) {\r\n        console.log('Already verified');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      console.log('useEffect is running');\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const actionCode = urlParams.get('oobCode');\r\n      console.log('oobCode:', actionCode);\r\n\r\n      if (actionCode) {\r\n        hasCheckedActionCode.current = true; // set the ref here\r\n        const auth = getAuth();\r\n        checkActionCode(auth, actionCode)\r\n          .then(() => {\r\n            console.log('Action code is valid, applying it now...');\r\n            return applyActionCode(auth, actionCode);\r\n          })\r\n          .then(() => {\r\n            console.log('Email verification successful');\r\n            setIsVerified(true);\r\n            localStorage.setItem('isVerified', true);\r\n\r\n            // Make API call to update email verification in MongoDB\r\n            fetch('https://yeeplatformbackend.azurewebsites.net/updateVerification', {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({ firebaseId: user.uid, emailVerified: true })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              console.log(\"Email verification status updated in MongoDB:\", data);\r\n            })\r\n            .catch(err => {\r\n              console.error(\"Error updating email verification status in MongoDB:\", err);\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log('Error occurred:', error);\r\n            setError(true); // Set error state to true\r\n            setErrorMessage('An error occurred while verifying the code. Please try again.'); // Set error message\r\n            setIsVerified(false);\r\n            localStorage.setItem('isVerified', false);\r\n          })\r\n          .finally(() => {\r\n            setLoading(false);\r\n          });\r\n      } else {\r\n        console.log('No oobCode found, setting loading to false');\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.log('An error occurred in useEffect:', error);\r\n      setError(true);\r\n      setErrorMessage('An unexpected error occurred. Please try again later.');\r\n    }\r\n  }, [navigate]); // remove isVerified from dependencies\r\n\r\n\r\n\r\n \r\n\r\n  const handlePasswordChange = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    if (!password || !confirmPassword) {\r\n      setError(true);\r\n      setErrorMessage('Please fill in all fields');\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setError(true);\r\n      setErrorMessage('Passwords do not match');\r\n      return;\r\n    }\r\n  \r\n    const user = auth.currentUser;\r\n  \r\n    if (!user) {\r\n      setError(true);\r\n      setErrorMessage('User not found');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      // Show loading SweetAlert with progress bar\r\n      const swalLoading = Swal.fire({\r\n        title: 'Updating Password',\r\n        text: 'Please wait...',\r\n        allowOutsideClick: false,\r\n        didOpen: () => {\r\n          Swal.showLoading();\r\n        }\r\n      });\r\n  \r\n      // Change the user's password\r\n      await updatePassword(user, password);\r\n  \r\n      // Make API call to update password in the backend\r\n      const response = await fetch('https://yeeplatformbackend.azurewebsites.net/updatepassword', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ userId: user.uid, newPassword: password })\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Failed to update password in the backend');\r\n      }\r\n  \r\n      // Password update successful, close loading SweetAlert and show success message\r\n      await swalLoading.close();\r\n      await Swal.fire({\r\n        icon: 'success',\r\n        title: 'Password Updated',\r\n        text: 'Your password has been updated successfully.'\r\n      });\r\n  \r\n      // Optionally, you can redirect the user to a different page\r\n      // navigate('/success-page');\r\n    } catch (error) {\r\n      console.error('Error updating password:', error);\r\n      setError(true);\r\n      setErrorMessage('An error occurred while resetting the password. Please try again.');\r\n  \r\n      // Close loading SweetAlert and show error message\r\n      await Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'An error occurred while updating the password. Please try again.'\r\n      });\r\n    }\r\n  };\r\n  \r\n  const debouncedHandleSignUp = debounce(handlePasswordChange, debounceDelay);\r\n\r\n  // Render different UI based on the mode and error state\r\n  const renderUI = () => {\r\n    if (error) {\r\n      // Error UI\r\n      return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n        <div className=\"w-full max-w-lg mx-auto mb-4\">\r\n          <button \r\n            onClick={() => navigate('/home')}\r\n            className=\"text-yellow-500 text-3xl mb-4\"\r\n          >\r\n            ←\r\n          </button>\r\n          <div className=\"aspect-w-16 aspect-h-9\">\r\n            <Lottie \r\n              animationData={notVerifiedAnimation} // Display not verified animation for error\r\n              className=\"w-full h-full\" \r\n            />\r\n          </div>\r\n          <p className=\"text-2xl md:text-3xl text-gray-800 mb-4 font-semibold\">\r\n            {errorMessage}\r\n          </p>\r\n        </div>\r\n        <button \r\n          onClick={() => navigate('/home')}\r\n          className=\"mt-4 px-4 py-2 bg-yellow-400 text-white rounded w-full max-w-xs mx-auto text-lg md:text-xl\"\r\n        >\r\n          Go to Home\r\n        </button>\r\n      </div>\r\n    );\r\n    } else if (mode === 'resetPassword') {\r\n      // UI for resetting password\r\n      return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n        <div className=\"w-full max-w-lg mx-auto mb-4\">\r\n           <h2>Reset Password</h2>\r\n           <form onSubmit={debouncedHandleSignUp} className=\"space-y-4\" autoComplete=\"off\">\r\n          \r\n         \r\n          <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          minLength=\"6\"\r\n          required\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          id=\"confirmPassword\"\r\n          name=\"confirmPassword\"\r\n          placeholder=\"Confirm Password\"\r\n          minLength=\"6\"\r\n          required\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full py-2 px-4 bg-indigo-500 text-white font-medium rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-indigo-700\"\r\n        >\r\n          Sign Up\r\n        </button>\r\n          </form>\r\n        </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      // Default UI for email verification\r\n      return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n          <div className=\"w-full max-w-lg mx-auto mb-4\">\r\n            <button \r\n              onClick={() => navigate('/home')}\r\n              className=\"text-yellow-500 text-3xl mb-4\"\r\n            >\r\n              ←\r\n            </button>\r\n            <div className=\"aspect-w-16 aspect-h-9\">\r\n              {loading ? (\r\n                 <LinearProgress className=\"text-yellow-500 animate-pulse\" color=\"secondary\" />\r\n              ) : (\r\n                <Lottie \r\n                  animationData={isVerified ? animationData : notVerifiedAnimation} \r\n                  className=\"w-full h-full\" \r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <p className=\"text-2xl md:text-3xl text-gray-800 mb-4 font-semibold\">\r\n            {isVerified ? \"🎉 Thank you for finishing signup! 🎉\" : \"⚠️ Email not yet verified! ⚠️\"}\r\n          </p>\r\n\r\n          <button \r\n            onClick={() => navigate('/home')}\r\n            className=\"mt-4 px-4 py-2 bg-yellow-400 text-white rounded w-full max-w-xs mx-auto text-lg md:text-xl\"\r\n          >\r\n            Go to Home\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {renderUI()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n"],"names":["Welcome","isVerified","setIsVerified","useState","JSON","parse","localStorage","getItem","loading","setLoading","error","setError","errorMessage","setErrorMessage","navigate","useNavigate","hasCheckedActionCode","useRef","mode","useParams","password","setPassword","confirmPassword","setConfirmPassword","useEffect","user","auth","currentUser","emailVerified","console","log","setItem","current","actionCode","URLSearchParams","window","location","search","get","getAuth","checkActionCode","then","applyActionCode","fetch","method","headers","body","stringify","firebaseId","uid","response","json","data","catch","err","finally","debouncedHandleSignUp","debounce","async","e","preventDefault","swalLoading","Swal","title","text","allowOutsideClick","didOpen","updatePassword","userId","newPassword","ok","Error","close","icon","_jsx","children","_jsxs","className","onClick","Lottie","animationData","notVerifiedAnimation","onSubmit","autoComplete","type","id","name","placeholder","minLength","required","onChange","target","value","LinearProgress","color"],"sourceRoot":""}