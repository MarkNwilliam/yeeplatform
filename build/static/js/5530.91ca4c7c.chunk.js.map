{"version":3,"file":"static/js/5530.91ca4c7c.chunk.js","mappings":"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","sources":["pages/Signin.js"],"sourcesContent":["import React, { useState , useContext} from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport Swal from \"sweetalert2\";\r\nimport { FaGoogle, FaArrowLeft } from \"react-icons/fa\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\nfunction SignIn() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  \r\n  const { login, loginWithGoogle } = useContext(AuthContext);\r\n\r\n\r\n  const handleSignIn = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    if (!email || !password) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Error\",\r\n        text: \"Please fill in all fields\",\r\n      });\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      Swal.fire({\r\n        title: \"Signing in...\",\r\n        allowEscapeKey: false,\r\n        allowOutsideClick: false,\r\n        onBeforeOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n      });\r\n  \r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      Swal.close();\r\n      await login(email, password);\r\n      navigate(\"/home\");\r\n    } catch (error) {\r\n      console.error(\"Error signing in:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Error\",\r\n        text: error.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    const provider = new GoogleAuthProvider();\r\n  \r\n    try {\r\n      Swal.fire({\r\n        title: \"Signing in with Google...\",\r\n        allowEscapeKey: false,\r\n        allowOutsideClick: false,\r\n        onBeforeOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n      });\r\n  \r\n      const result = await signInWithPopup(auth, provider);\r\n      const { email, uid } = result.user;\r\n      Swal.close();\r\n    \r\n       await loginWithGoogle();\r\n      navigate(\"/home\");\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error signing in with Google:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Error\",\r\n        text: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-yellow-200 p-4 sm:p-0\">\r\n      <div className=\"w-full max-w-md bg-white rounded-lg shadow-md p-6\">\r\n        <div className=\"flex justify-between items-start mb-6\">\r\n          <FaArrowLeft className=\"text-gray-800 cursor-pointer\" onClick={() => navigate(-1)} />\r\n          <img src=\"/Y.webp\" alt=\"Platform logo\" loading=\"lazy\" className=\"mx-auto h-16 w-auto mb-2\" />\r\n        </div>\r\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">Sign In</h1>\r\n        <button\r\n          onClick={handleGoogleSignIn}\r\n          className=\"w-full py-2 px-4 mb-4 bg-gray-700 text-white font-medium rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-gray-800 flex items-center justify-center\"\r\n        >\r\n          <FaGoogle className=\"mr-2\" />\r\n          Continue with Google\r\n        </button>\r\n        <form onSubmit={handleSignIn} autoComplete=\"off\">\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email Address\"\r\n            required\r\n            className=\"mb-4 w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-gray-700 focus:outline-none\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            minLength=\"6\"\r\n            required\r\n            className=\"mb-4 w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-gray-700 focus:outline-none\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full py-2 px-4 bg-gray-700 text-white font-medium rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-gray-800\"\r\n          >\r\n            Sign In\r\n          </button>\r\n        </form>\r\n        <div className=\"mt-4 text-center\">\r\n          <span className=\"text-gray-700 block mb-2\">\r\n            Don&apos;t have an account?\r\n            <span className=\"text-blue-500 cursor-pointer\" onClick={() => navigate(\"/signup\")}>\r\n              {\" \"}Sign Up\r\n            </span>\r\n          </span>\r\n          <span className=\"text-gray-700 block\">\r\n            <span className=\"text-blue-500 cursor-pointer\" onClick={() => navigate(\"/forgot-password\")}>\r\n              Forgot Password?\r\n            </span>\r\n          </span>\r\n          <span className=\"text-gray-700 block mt-2\">\r\n            <span className=\"text-blue-500 cursor-pointer\" onClick={() => navigate(\"/\")}>\r\n              Back Home\r\n            </span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n\r\n\r\n\r\n\r\n"],"names":["email","setEmail","useState","password","setPassword","navigate","useNavigate","login","loginWithGoogle","useContext","AuthContext","_jsx","className","children","_jsxs","FaArrowLeft","onClick","src","alt","loading","async","provider","GoogleAuthProvider","Swal","title","allowEscapeKey","allowOutsideClick","onBeforeOpen","result","signInWithPopup","auth","uid","user","error","console","icon","text","message","FaGoogle","onSubmit","e","preventDefault","signInWithEmailAndPassword","autoComplete","type","id","name","placeholder","required","onChange","target","value","minLength"],"sourceRoot":""}