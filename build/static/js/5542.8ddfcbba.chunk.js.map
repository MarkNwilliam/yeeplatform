{"version":3,"file":"static/js/5542.8ddfcbba.chunk.js","mappings":"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","sources":["constants/countries.js","pages/Signup.js"],"sourcesContent":["export const countries = [\r\n    \"Algeria\", \"Angola\", \"Benin\", \"Botswana\", \"Burkina Faso\", \"Burundi\", \r\n    \"Cabo Verde\", \"Cameroon\", \"Central African Republic\", \"Chad\", \"Comoros\", \r\n    \"Democratic Republic of the Congo\", \"Republic of the Congo\", \"Cote d'Ivoire\", \r\n    \"Djibouti\", \"Egypt\", \"Equatorial Guinea\", \"Eritrea\", \"Eswatini\", \"Ethiopia\", \r\n    \"Gabon\", \"Gambia\", \"Ghana\", \"Guinea\", \"Guinea-Bissau\", \"Kenya\", \"Lesotho\", \r\n    \"Liberia\", \"Libya\", \"Madagascar\", \"Malawi\", \"Mali\", \"Mauritania\", \"Mauritius\", \r\n    \"Morocco\", \"Mozambique\", \"Namibia\", \"Niger\", \"Nigeria\", \"Rwanda\", \r\n    \"Sao Tome and Principe\", \"Senegal\", \"Seychelles\", \"Sierra Leone\", \"Somalia\", \r\n    \"South Africa\", \"South Sudan\", \"Sudan\", \"Tanzania\", \"Togo\", \"Tunisia\", \r\n    \"Uganda\", \"Zambia\", \"Zimbabwe\"\r\n  ];\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { auth } from '../firebase';\r\nimport Swal from 'sweetalert2';\r\nimport { GoogleAuthProvider, signInWithPopup, createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { IoArrowBack } from 'react-icons/io5';\r\nimport { countries } from '../constants/countries';\r\nimport { debounce } from 'lodash';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nfunction Signup() {\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [isConsentGiven, setIsConsentGiven] = useState(false);\r\n  const [country, setCountry] = useState(\"\");\r\n\r\n  const debounceDelay = 1000; // 1 second\r\n\r\n  const debouncedHandleSignUp = debounce(handleSignUp, debounceDelay);\r\n  \r\n\r\n  const sendUserDataToBackend = async (userData) => {\r\n    try {\r\n        const response = await fetch('https://yeeplatformbackend.azurewebsites.net/signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(userData),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        if (!response.ok) {\r\n            throw new Error(responseData.message);\r\n        }\r\n              // Handle successful signup if needed\r\n        // e.g., navigate to home or show a success message\r\n    } catch (error) {\r\n      console.error('Error sending user data to backend:', error);\r\n      Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.message,\r\n      });\r\n  }\r\n};\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !email || !password || !confirmPassword) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'Please fill in all fields',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!isConsentGiven) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'You must agree to receive emails to register.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'Passwords do not match',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      Swal.fire({\r\n        title: 'Signing up...',\r\n        allowEscapeKey: false,\r\n        allowOutsideClick: false,\r\n        willOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n      });\r\n\r\n      const { user } = await createUserWithEmailAndPassword(auth, email, password);\r\n\r\n      await sendEmailVerification(user)\r\n        .then(() => {\r\n          // Email verification sent!\r\n          // ...\r\n        });\r\n\r\n      Swal.fire({\r\n        icon: 'info',\r\n        title: 'Verify Your Email',\r\n        text: 'A verification email has been sent. Please check your inbox and verify your email address.',\r\n      });\r\n\r\n      const userData = {\r\n        username: name, // Assuming name is the desired username\r\n        email: email,\r\n        password: password,\r\n        dateJoined: Date.now(),\r\n        preferredReadingMode: 'LTR', // or ask the user during signup\r\n        firebaseId: user.uid,\r\n        authProvider: 'emailandpassword',\r\n        emailVerified: user.emailVerified,\r\n        settings: {\r\n          receiveEmailUpdates: true, // or based on user choice during signup\r\n          receiveNotifications: true, // or based on user choice during signup\r\n          darkMode: false // or based on user choice during signup\r\n        },\r\n        isAuthor: false // or ask the user during signup if they are an author\r\n      };\r\n      \r\n\r\n          // Save to localStorage (if needed)\r\n    localStorage.setItem('tempUserData', JSON.stringify(userData));\r\n\r\n    // Send the userData to the backend\r\n    await sendUserDataToBackend(userData);\r\n\r\n      navigate('/verify-email');\r\n\r\n    } catch (error) {\r\n      console.error('Error signing up:', error);\r\n      let errorMessage = error.message;\r\n      if (error.code === 'auth/email-already-in-use') {\r\n        errorMessage = 'This email address is already in use.';\r\n      }\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: errorMessage,\r\n      });\r\n    }\r\n  };\r\n\r\n  const signUpWithGoogle = async () => {\r\n    if (!navigator.onLine) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'No internet connection',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      Swal.fire({\r\n        title: 'Signing up with Google...',\r\n        allowEscapeKey: false,\r\n        allowOutsideClick: false,\r\n        willOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n      });\r\n\r\n    \r\n\r\n      \r\n      const provider = new GoogleAuthProvider();\r\n      const result = await signInWithPopup(auth, provider);\r\n      const user = result.user;\r\n\r\n      const userData = {\r\n        username: user.displayName, // or ask the user to set a unique username\r\n        email: user.email,\r\n        profileImage: user.photoURL,\r\n        dateJoined: Date.now(),\r\n        googleId: user.uid,\r\n        firebaseId: user.uid,\r\n        authProvider: 'google',\r\n        preferredReadingMode: 'LTR', // or ask the user during signup\r\n        emailVerified: user.emailVerified,\r\n        settings: {\r\n          receiveEmailUpdates: true, // or based on user choice during signup\r\n          receiveNotifications: true, // or based on user choice during signup\r\n          darkMode: false // or based on user choice during signup\r\n        },\r\n        isAuthor: false // or ask the user during signup if they are an author\r\n      };\r\n      \r\n      console.log(\"Sending this user data to the backend:\", userData);\r\n\r\n         // Save to localStorage (if needed)\r\n    localStorage.setItem('tempUserData', JSON.stringify(userData));\r\n\r\n      await sendUserDataToBackend(userData);\r\n\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Welcome to YeePlatform!',\r\n        text: '🎉',\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n      });\r\n\r\n      navigate(\"/home\");\r\n\r\n    } catch (error) {\r\n      console.error('Error signing in with Google:', error);\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-yellow-200 p-4 md:p-0\">\r\n      <Helmet>\r\n  <title>Sign Up - Yee FM</title>\r\n  <meta name=\"description\" content=\"Sign up for a new account on Yee FM.\" />\r\n  <link rel=\"icon\" href=\"https://assets-hfbubwfaacbch3e0.z02.azurefd.net/assets/images/Y.webp\" />\r\n  <meta property=\"og:image\" content=\"https://assets-hfbubwfaacbch3e0.z02.azurefd.net/assets/images/Y.webp\" />\r\n</Helmet>\r\n    <div className=\"max-w-md w-full space-y-8 bg-white p-6 rounded-lg shadow-md\">\r\n      <div className=\"text-center\">\r\n        <IoArrowBack\r\n          className=\"text-gray-700 text-2xl cursor-pointer mb-4\"\r\n          onClick={() => navigate(-1)}\r\n        />\r\n       <img src=\"https://assets-hfbubwfaacbch3e0.z02.azurefd.net/assets/images/Y.webp\" alt=\"Platform logo\" loading=\"lazy\" className=\"mx-auto h-16 w-auto mb-2\" />\r\n\r\n        <h2 className=\"text-2xl font-bold text-gray-800\">Sign Up</h2>\r\n        <p className=\"mt-2 text-gray-600\">\r\n          Already have an account?{' '}\r\n          <Link\r\n            to=\"/signin\"\r\n            className=\"text-indigo-500 hover:text-indigo-700 underline\"\r\n          >\r\n            Sign In\r\n          </Link>\r\n        </p>\r\n      </div>\r\n\r\n      <button\r\n        onClick={signUpWithGoogle}\r\n        className=\"w-full py-2 px-4 mb-6 bg-gray-700 text-white font-medium rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-gray-800 flex items-center justify-center\"\r\n      >\r\n        <FaGoogle className=\"mr-2\" />\r\n        Continue with Google\r\n      </button>\r\n\r\n      \r\n      <form onSubmit={debouncedHandleSignUp} className=\"space-y-4\" autoComplete=\"off\">\r\n\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          placeholder=\"Full Name\"\r\n          required\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"tel\"\r\n          id=\"phone\"\r\n          name=\"phone\"\r\n          placeholder=\"Phone Number\"\r\n          required\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\r\n          onChange={(e) => setPhone(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email Address\"\r\n          required\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n<select\r\n  id=\"country\"\r\n  name=\"country\"\r\n  value={country}  // Set the value to the state.\r\n  required\r\n  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\r\n  onChange={(e) => setCountry(e.target.value)}\r\n>\r\n\r\n<option value=\"\" disabled>Select your Country</option>\r\n  \r\n{Array.isArray(countries) && countries.map((country, index) => (\r\n  <option key={index} value={country}>{country}</option>\r\n))}\r\n\r\n \r\n</select>\r\n\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          minLength=\"6\"\r\n          required\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          id=\"confirmPassword\"\r\n          name=\"confirmPassword\"\r\n          placeholder=\"Confirm Password\"\r\n          minLength=\"6\"\r\n          required\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full py-2 px-4 bg-indigo-500 text-white font-medium rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-indigo-700\"\r\n        >\r\n          Sign Up\r\n        </button>\r\n        <div className=\"flex items-center\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"form-checkbox h-5 w-5 text-indigo-500\"\r\n            checked={isConsentGiven}\r\n            onChange={(e) => setIsConsentGiven(e.target.checked)}\r\n          />\r\n          <label className=\"ml-2 text-sm text-gray-600\">\r\n            I agree to receive marketing emails, newsletters, promotions, and updates.\r\n          </label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default Signup;"],"names":["countries","name","setName","useState","phone","setPhone","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","navigate","useNavigate","isConsentGiven","setIsConsentGiven","country","setCountry","debouncedHandleSignUp","debounce","handleSignUp","sendUserDataToBackend","async","response","fetch","method","headers","body","JSON","stringify","userData","responseData","json","ok","Error","message","error","console","Swal","icon","title","text","e","preventDefault","allowEscapeKey","allowOutsideClick","willOpen","user","createUserWithEmailAndPassword","auth","sendEmailVerification","then","username","dateJoined","Date","now","preferredReadingMode","firebaseId","uid","authProvider","emailVerified","settings","receiveEmailUpdates","receiveNotifications","darkMode","isAuthor","localStorage","setItem","errorMessage","code","_jsxs","className","children","Helmet","_jsx","content","rel","href","property","IoArrowBack","onClick","src","alt","loading","Link","to","navigator","onLine","provider","GoogleAuthProvider","signInWithPopup","displayName","profileImage","photoURL","googleId","log","timer","showConfirmButton","FaGoogle","onSubmit","autoComplete","type","id","placeholder","required","onChange","target","value","disabled","Array","isArray","map","index","minLength","checked"],"sourceRoot":""}