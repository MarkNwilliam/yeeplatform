{"version":3,"file":"static/js/2191.42b51576.chunk.js","mappings":"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","sources":["components/DAudio.js","functions/azureUpload.js","functions/imageUtils.js","subcomponents/SubmitButton.js","subcomponents/SuccessDialog.js","subcomponents/UploadButton.js"],"sourcesContent":["import React, { useState , useEffect} from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { auth } from \"../firebase\";\r\nimport axios from 'axios';\r\nimport {\r\n\r\n  TextField,\r\n  Typography,\r\n \r\n} from \"@mui/material\";\r\n\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport SuccessDialog from \"../subcomponents/SuccessDialog\";\r\nimport SubmitButton from \"../subcomponents/SubmitButton\";\r\nimport UploadButton from \"../subcomponents/UploadButton\";\r\nimport uploadToAzure from '../functions/azureUpload';\r\nimport { resizeImage } from '../functions/imageUtils';\r\n\r\nconst maxDescriptionLength = 500; // Maximum length for description\r\nconst maxAudiobookFileSizeMB = 300;\r\nconst minTitleLength = 3; // Minimum length for title\r\nconst maxTitleLength = 100; // Maximum length for title\r\nconst minGenresRequired = 1;\r\n\r\nfunction DAudio() {\r\n  const africanLanguages = [\r\n    { code: \"eng\", label: \"English\" },\r\n    { code: \"French\", label: \"French\" },\r\n    { code: \"swahili\", label: \"Swahili\" },\r\n    { code: \"amharic\", label: \"Amharic\" },\r\n    { code: \"yoruba\", label: \"Yoruba\" },\r\n    { code: \"oromo\", label: \"Oromo\" },\r\n    { code: \"igbo\", label: \"Igbo\" },\r\n    { code: \"zulu\", label: \"Zulu\" },\r\n    { code: \"shona\", label: \"Shona\" },\r\n    { code: \"xhosa\", label: \"Xhosa\" },\r\n    { code: \"hausa\", label: \"Hausa\" },\r\n    { code: \"fulani\", label: \"Fulani\" },\r\n  ];\r\n\r\n  const categories = [\r\n    \"Fiction\",\r\n    \"Nonfiction\",\r\n    \"Science Fiction\",\r\n    \"Romance\",\r\n    \"Mystery/Thriller\",\r\n    \"Fantasy\",\r\n    \"Biography\",\r\n    \"History\",\r\n    \"Business/Economics\",\r\n    \"Self-help\",\r\n    \"Health/Fitness\",\r\n    \"Cooking/Food\",\r\n    \"Travel\",\r\n    \"Technology\",\r\n  ];\r\n\r\n  const targetAudiences = [\"Children\", \"Young Adult\", \"Adult\", \"Senior\"];\r\n\r\n  const [audiobookFile, setAudiobookFile] = useState(null);\r\n  const [coverFile, setCoverFile] = useState(null);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [genres, setGenres] = useState([]);\r\n  const [language, setLanguage] = useState('');\r\n  const [isbn, setIsbn] = useState('');\r\n  const [publicationDate, setPublicationDate] = useState('');\r\n  const [successDialogOpen, setSuccessDialogOpen] = useState(false);\r\n  const [selectedCoverFileName, setSelectedCoverFileName] = useState(\"\");\r\n  const [selectedAudioFileName, setSelectedAudioFileName] = useState(\"\");\r\n  const [Duration, setDuration] = useState(\"\");\r\n  const [monetization, setMonetization] = useState('free');\r\n  const [imagePreviewUrl, setImagePreviewUrl] = useState(\"\");\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [isSuccessDialogOpen, setIsSuccessDialogOpen] = useState(false);\r\n  const LottieAnimation = React.lazy(() => import('lottie-react'));\r\n\r\n\r\n  const firebaseId = auth.currentUser.uid;\r\n\r\n  useEffect(() => {\r\n    const handlePageUnload = () => {\r\n      if (isSuccessDialogOpen) {\r\n        setIsSuccessDialogOpen(false);\r\n      }\r\n    };\r\n\r\n    // Register the event listener\r\n    window.addEventListener('beforeunload', handlePageUnload);\r\n\r\n    // Cleanup function to remove the event listener\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handlePageUnload);\r\n    };\r\n  }, [isSuccessDialogOpen]);\r\n\r\n\r\n  const resetForm = () => {\r\n    setAudiobookFile(null);\r\n    setCoverFile(null);\r\n    setTitle('');\r\n    setDescription('');\r\n    setGenres([]);\r\n    setLanguage('');\r\n    setIsbn('');\r\n    setDuration('')\r\n    setPublicationDate('');\r\n    setSelectedCoverFileName(\"\");\r\n    setSelectedAudioFileName(\"\");\r\n    setMonetization('free');\r\n    setImagePreviewUrl(\"\")\r\n  };\r\n\r\n\r\n  const getAudioDuration = (audioFile) => {\r\n    const objectURL = URL.createObjectURL(audioFile);\r\n    let audio = new Audio(objectURL);\r\n    \r\n    audio.onloadedmetadata = () => {\r\n      setDuration(Math.floor(audio.duration));\r\n      URL.revokeObjectURL(objectURL);\r\n    };\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const isMonetized = monetization === 'notfree';\r\n    if (description.length > maxDescriptionLength) {\r\n      Swal.fire('Error', `Description should not exceed ${maxDescriptionLength} characters.`, 'error');\r\n      return;\r\n    }\r\n\r\n    if (audiobookFile && audiobookFile.size > maxAudiobookFileSizeMB * 1024 * 1024) {\r\n      Swal.fire('Error', `Audiobook file size should not exceed ${maxAudiobookFileSizeMB} MB.`, 'error');\r\n      return;\r\n    }\r\n\r\n    if (title.length < minTitleLength || title.length > maxTitleLength) {\r\n      Swal.fire('Error', `Title should be between ${minTitleLength} and ${maxTitleLength} characters.`, 'error');\r\n      return;\r\n    }\r\n    if (!language) {\r\n      Swal.fire('Error', 'Please select a language.', 'error');\r\n      return;\r\n    }\r\n    const today = new Date();\r\n    const selectedDate = new Date(publicationDate);\r\n    \r\n    if (selectedDate > today) {\r\n      Swal.fire('Error', 'Publication date cannot be in the future.', 'error');\r\n      return;\r\n    }\r\n            \r\n    if (genres.length < minGenresRequired) {\r\n      Swal.fire('Error', `Please select at least ${minGenresRequired} genre(s).`, 'error');\r\n      return;\r\n    }\r\n    \r\n\r\n    // Initial Swal progress bar\r\n    Swal.fire({\r\n      title: 'Uploading...',\r\n      html: 'Progress ....',\r\n      allowEscapeKey: false,\r\n      allowOutsideClick: false,\r\n      showCancelButton: false,\r\n      showConfirmButton: false,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n      onOpen: () => {\r\n        // Progress bar container\r\n        const container = Swal.getHtmlContainer();\r\n        const progress = document.createElement('div');\r\n        progress.setAttribute('class', 'sweetalert2-progress-steps');\r\n        container.appendChild(progress);\r\n      }\r\n    });\r\n\r\n    const handleProgressUpdate = (progress) => {\r\n      const content = Swal.getContent();\r\n      if (content) {\r\n        const b = content.querySelector('b');\r\n        if (b) {\r\n          b.textContent = progress;\r\n        }\r\n      }\r\n    };\r\n\r\n    try {\r\n      let audioUrl, coverUrl;\r\n\r\n      let thumbnailUrl;\r\n\r\n      if (coverFile) {\r\n        const resizedImageBlob = await resizeImage(coverFile, 128); // Example size\r\n   \r\n        thumbnailUrl = await uploadToAzure(resizedImageBlob, true);\r\n        console.log(\"Here is my thumbnail url \"+thumbnailUrl)\r\n      }\r\n  \r\n      if (audiobookFile) {\r\n        audioUrl = await uploadToAzure(audiobookFile)\r\n      }\r\n  \r\n      if (coverFile) {\r\n        console.log(\"Uploading coverFile: \", coverFile);\r\n        coverUrl = await uploadToAzure(coverFile)        \r\n      \r\n        console.log(\"This is my coverurl \"+coverUrl)\r\n      }\r\n      if (description.length > maxDescriptionLength) {\r\n        Swal.fire('Error', `Description should not exceed ${maxDescriptionLength} characters.`, 'error');\r\n        return;\r\n      }\r\n      \r\n      if (!audioUrl || !coverUrl) {\r\n        throw new Error('Please select both audio and cover files.');\r\n      }\r\n\r\n    \r\n  const data = {\r\n      \r\n        title: title,\r\n        description: description,\r\n        genres: genres.join(\", \"),\r\n        categories: genres.join(\", \"),\r\n        language: language,\r\n        isbn: isbn,\r\n        ebookUrl: audioUrl,\r\n        coverUrl: coverUrl,\r\n        thumbnailUrl:  thumbnailUrl,\r\n        publicationDate: publicationDate,\r\n        author_platform_id: firebaseId,\r\n        Duration: Duration,\r\n        monetization: isMonetized,\r\n        audioUrl: audioUrl,\r\n      };\r\n\r\n      const response = await axios.post(`https://yeeplatformbackend.azurewebsites.net/audiobookupload/${firebaseId}`, data);\r\n\r\n      Swal.close();\r\n\r\n      if (response.status === 200) {\r\n    resetForm()\r\n       //Swal.fire('Success!', 'Ebook uploaded successfully!', 'success');\r\n       setIsSuccessDialogOpen(true);\r\n      } else {\r\n        throw new Error('Error while sending data to the server.');\r\n      }\r\n\r\n    } catch (error) {\r\n      Swal.fire('Error', 'Error uploading the audio. Please try again.', 'error');\r\n      console.error('Error uploading the audio:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleCloseSuccessDialog = () => {\r\n    console.log(\"Closing success dialog\");\r\n    setIsSuccessDialogOpen(false);\r\n  };\r\n  \r\n\r\n  const isFileSizeValid = (file) => {\r\n    const maxSizeInMB = 5; // 5MB limit\r\n    const sizeInMB = file.size / 1024 / 1024;\r\n    return sizeInMB <= maxSizeInMB;\r\n  };\r\n  \r\n  const isImageDimensionsValid = (file) => {\r\n    return new Promise((resolve) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        resolve(img.width === 512 && img.height === 800);\r\n      };\r\n      img.src = URL.createObjectURL(file);\r\n    });\r\n  };\r\n  \r\n\r\n  const handleCoverChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    console.log(\"Handle Cover Change Function Called\");\r\n    if (file) {\r\n      if (!isFileSizeValid(file)) {\r\n\r\n        try{\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'Image size should not exceed 5MB.',\r\n        }).then(() => {\r\n          // Close the SweetAlert2 and reset state\r\n          setCoverFile(null);\r\n          setSelectedCoverFileName(\"\");\r\n          setImagePreviewUrl(\"\");\r\n        });\r\n      }\r\n      catch(error){\r\n        console.log(error)\r\n      }\r\n        return;\r\n      }\r\n  \r\n      const dimensionsValid = await isImageDimensionsValid(file);\r\n      if (!dimensionsValid) {\r\n        try{\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'Image dimensions should be exactly 512x800 pixels.',\r\n          timer: 3000,\r\n        }).then(() => {\r\n          // Close the SweetAlert2 and reset state\r\n          setCoverFile(null);\r\n          setSelectedCoverFileName(\"\");\r\n          setImagePreviewUrl(\"\");\r\n        });\r\n      }\r\n      catch(error){\r\n        console.log(error)\r\n      }\r\n        return;\r\n      }\r\n  \r\n      setCoverFile(file);\r\n      setSelectedCoverFileName(file.name);\r\n      setImagePreviewUrl(URL.createObjectURL(file));\r\n\r\n      console.log(\"Function Execution Completed\");\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"p-8 bg-white shadow-md rounded-lg max-w-md mx-auto\">\r\n      <Typography variant=\"h4\" className=\"text-center mb-6\">Upload your Audiobook</Typography>\r\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">Title:</label>\r\n          <TextField fullWidth variant=\"outlined\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n  <label className=\"block text-gray-700 text-sm font-bold mb-2\">Description:</label>\r\n  <TextField\r\n    fullWidth\r\n    multiline\r\n    rows={4}\r\n    variant=\"outlined\"\r\n    value={description}\r\n    onChange={(e) => setDescription(e.target.value)}\r\n    required\r\n    helperText={`${description.length}/${maxDescriptionLength}`}\r\n  />\r\n</div>\r\n\r\n\r\n        <div className=\"mb-4\">\r\n <UploadButton\r\n  label=\"Upload Cover Image:\"\r\n  onChange={handleCoverChange}\r\n  fileName={selectedCoverFileName}\r\n  accept=\".jpg, .jpeg, .png\"\r\n  required={true}\r\n/>\r\n{imagePreviewUrl && (\r\n  <div className=\"image-preview\">\r\n    <img src={imagePreviewUrl} alt=\"Cover Preview\" style={{ maxWidth: '200px', maxHeight: '200px' }} />\r\n  </div>\r\n)}\r\n\r\n</div>\r\n\r\n\r\n        <div className=\"mb-4\">\r\n          <Autocomplete\r\n            multiple\r\n            options={categories}\r\n            value={genres}\r\n            onChange={(event, newValue) => setGenres(newValue)}\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" label=\"Genres\" />}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <Autocomplete\r\n            options={africanLanguages.map((option) => option.label)}\r\n            value={language}\r\n            onChange={(event, newValue) => setLanguage(newValue)}\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" label=\"Language\" />}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">ISBN:</label>\r\n          <TextField fullWidth variant=\"outlined\" value={isbn} onChange={(e) => setIsbn(e.target.value)}/>\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n  <label className=\"block text-gray-700 text-sm font-bold mb-2\">Monetization:</label>\r\n  <select\r\n    value={monetization}\r\n    onChange={(e) => setMonetization(e.target.value)}\r\n    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n  >\r\n    <option value=\"free\">Free</option>\r\n    <option value=\"notfree\">Not Free</option>\r\n  </select>\r\n</div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">Publication Date:</label>\r\n          <TextField type=\"date\" fullWidth variant=\"outlined\" value={publicationDate} onChange={(e) => setPublicationDate(e.target.value)} required />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n        <UploadButton\r\n  label=\"Upload Audio File:\"\r\n  onChange={(e) => {\r\n    setAudiobookFile(e.target.files[0]);\r\n    setSelectedAudioFileName(e.target.files[0]?.name || \"\");\r\n    getAudioDuration(e.target.files[0]);\r\n  }}\r\n  fileName={selectedAudioFileName}\r\n  accept=\".mp3, .wav\"\r\n  required={true}\r\n/>\r\n\r\n           <div className=\"text-sm text-gray-600\">\r\n    Maximum file size: {maxAudiobookFileSizeMB} MB\r\n  </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-center\">\r\n        <SubmitButton buttonText=\"Upload\" />\r\n        </div>\r\n      </form>\r\n      {isSuccessDialogOpen && (\r\n        <SuccessDialog isOpen={isSuccessDialogOpen}\r\n        onClose={handleCloseSuccessDialog}\r\n         points={100} \r\n         message=\"Well done! You're a real YeePlatform author.\" />\r\n)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DAudio;\r\n","// azureUpload.js\r\n\r\nasync function uploadToAzure(file, isThumbnail = false) {\r\n    const response = await fetch('https://yeeplatformbackend.azurewebsites.net/generateSasToken');\r\n    const data = await response.json();\r\n    const sasToken = data.sasToken;\r\n\r\n    // Create a unique file name for the thumbnail to avoid name clashes\r\n    let fileName = isThumbnail ? `thumbnail-${Date.now()}.jpg` : file.name;\r\n    const blobURL = `https://yeeplatform.blob.core.windows.net/yeeebooks/${fileName}?${sasToken}`;\r\n\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        body: file,\r\n        headers: {\r\n            'x-ms-blob-type': 'BlockBlob'\r\n        }\r\n    };\r\n\r\n    const uploadResponse = await fetch(blobURL, requestOptions);\r\n\r\n    if (uploadResponse.ok) {\r\n        const publicBlobURL = blobURL.split('?')[0]; \r\n        return publicBlobURL;\r\n    } else {\r\n        throw new Error('Error uploading to Azure Blob Storage');\r\n    }\r\n}\r\n\r\nexport default uploadToAzure;\r\n","// imageUtils.js\r\nimport Pica from 'pica';\r\n\r\nconst pica = Pica();\r\n\r\nexport const resizeImage = (file, desiredWidth) => {\r\n    \r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                const scaleFactor = desiredWidth / img.width;\r\n                const desiredHeight = img.height * scaleFactor;\r\n\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = desiredWidth;\r\n                canvas.height = desiredHeight;\r\n\r\n                pica.resize(img, canvas)\r\n                    .then(result => pica.toBlob(result, 'image/jpeg', 0.80))\r\n                    .then(blob => resolve(blob))\r\n                    .catch(error => reject(error));\r\n            };\r\n            img.src = e.target.result;\r\n        };\r\n        reader.onerror = reject;\r\n        reader.readAsDataURL(file);\r\n    });\r\n};\r\n\r\nexport const isImageDimensionsValid = async (file, width, height) => {\r\n    return new Promise((resolve) => {\r\n        const img = new Image();\r\n        img.onload = () => {\r\n            resolve(img.width === width && img.height === height);\r\n        };\r\n        img.src = URL.createObjectURL(file);\r\n    });\r\n};\r\n\r\nexport const isFileSizeWithinRange = (file, minSizeInMB, maxSizeInMB) => {\r\n    const sizeInMB = file.size / (1024 * 1024);\r\n    return sizeInMB >= minSizeInMB && sizeInMB <= maxSizeInMB;\r\n};\r\n","import React from 'react';\r\n\r\nfunction SubmitButton({ buttonText }) {\r\n  return (\r\n    <button \r\n      type=\"submit\" \r\n      className=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-lg transition duration-200 transform hover:scale-105 focus:outline-none focus:shadow-outline\"\r\n    >\r\n      {buttonText}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport congs1Animation from '../animations/congs.json';\r\n\r\n\r\nfunction SuccessDialog({ isOpen, onClose, points, message }) {\r\n  const LottieAnimation = React.lazy(() => import('lottie-react'));\r\n\r\n  return (\r\n    <Dialog open={isOpen} onClose={onClose}>\r\n      <DialogTitle className=\"text-center\">Success!</DialogTitle>\r\n      <DialogContent className=\"flex flex-col items-center justify-center space-y-4\">\r\n        <React.Suspense fallback={<div>Loading...</div>}>\r\n          <LottieAnimation \r\n            animationData={congs1Animation}\r\n            style={{ width: 'auto', maxWidth: '100%', height: 200 }} \r\n          />\r\n        </React.Suspense>\r\n\r\n        <p>{message}</p>\r\n        <div className=\"text-center animate-pulse\">\r\n        <p className=\"text-yellow-500 font-bold text-xl\">You&apos;ve got</p>\r\n          <span className=\"text-4xl text-yellow-500\">{points} Points!</span>\r\n        </div>\r\n        <p>Your content will be available in the marketplace soon.</p>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SuccessDialog;\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\n\r\nfunction UploadButton({ label, onChange, fileName, accept, required }) {\r\n  return (\r\n    <div>\r\n      {label && <label className=\"block text-gray-700 text-sm font-bold mb-2\">{label}</label>}\r\n      <label className={`w-full flex items-center px-4 py-2 rounded-lg shadow-lg tracking-wide uppercase border cursor-pointer hover:bg-yellow-500 hover:text-white ${fileName ? 'bg-yellow-500 text-white' : 'bg-white text-yellow-500 border-yellow-500'}`}>\r\n        <CloudUploadIcon className=\"mr-2\" />\r\n        {fileName || 'Choose File'}\r\n        <input\r\n          type=\"file\"\r\n          onChange={onChange}\r\n          className=\"hidden\"\r\n          accept={accept}\r\n          required={required}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadButton;\r\n"],"names":["maxDescriptionLength","audiobookFile","setAudiobookFile","useState","coverFile","setCoverFile","title","setTitle","description","setDescription","genres","setGenres","language","setLanguage","isbn","setIsbn","publicationDate","setPublicationDate","successDialogOpen","setSuccessDialogOpen","selectedCoverFileName","setSelectedCoverFileName","selectedAudioFileName","setSelectedAudioFileName","Duration","setDuration","monetization","setMonetization","imagePreviewUrl","setImagePreviewUrl","dialogOpen","setDialogOpen","isSuccessDialogOpen","setIsSuccessDialogOpen","firebaseId","auth","currentUser","uid","useEffect","handlePageUnload","window","addEventListener","removeEventListener","_jsxs","className","children","_jsx","Typography","variant","onSubmit","async","e","preventDefault","isMonetized","length","Swal","concat","size","maxAudiobookFileSizeMB","today","Date","html","allowEscapeKey","allowOutsideClick","showCancelButton","showConfirmButton","onBeforeOpen","onOpen","container","progress","document","createElement","setAttribute","appendChild","audioUrl","coverUrl","thumbnailUrl","resizedImageBlob","resizeImage","uploadToAzure","console","log","Error","data","join","categories","ebookUrl","author_platform_id","response","axios","post","status","error","encType","TextField","fullWidth","value","onChange","target","required","multiline","rows","helperText","UploadButton","label","file","files","isFileSizeValid","icon","text","then","dimensionsValid","Promise","resolve","img","Image","onload","width","height","src","URL","createObjectURL","isImageDimensionsValid","timer","name","fileName","accept","alt","style","maxWidth","maxHeight","Autocomplete","multiple","options","event","newValue","renderInput","params","code","map","option","type","_e$target$files$","audioFile","objectURL","audio","Audio","onloadedmetadata","Math","floor","duration","revokeObjectURL","getAudioDuration","SubmitButton","buttonText","SuccessDialog","isOpen","onClose","handleCloseSuccessDialog","points","message","isThumbnail","arguments","undefined","fetch","sasToken","json","now","blobURL","requestOptions","method","body","headers","ok","split","pica","Pica","desiredWidth","reject","reader","FileReader","scaleFactor","desiredHeight","canvas","resize","result","toBlob","blob","catch","onerror","readAsDataURL","isFileSizeWithinRange","minSizeInMB","maxSizeInMB","sizeInMB","_ref","LottieAnimation","React","Dialog","open","DialogTitle","DialogContent","fallback","animationData","congs1Animation","DialogActions","Button","onClick","color","CloudUploadIcon"],"sourceRoot":""}