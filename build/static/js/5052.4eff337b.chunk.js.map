{"version":3,"file":"static/js/5052.4eff337b.chunk.js","mappings":"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","sources":["components/ChatWidget.js","constants/colors.js","pages/EpubViewer.js"],"sourcesContent":["import React, { useEffect , useState} from 'react';\nimport { Widget, addResponseMessage, toggleMsgLoader } from '@ryaneewx/react-chat-widget';\nimport '@ryaneewx/react-chat-widget/lib/styles.css';\nimport '../css/chat.css';\n\nconst ChatWidget = ({ handleNewUserMessage }) => {\n\n\nconst [chatWindowOpen, setChatWindowOpen] = useState(true);\n\n\n  const handleToggle = (open) => {\n    setChatWindowOpen((prev) => !prev);\n  };\n\n\n  return (\n    <Widget\n      handleNewUserMessage={handleNewUserMessage}\n      title=\"Ebook Chatbot\"\n      subtitle=\"Ask me anything about this ebook\"\n      profileAvatar=\"https://assets-hfbubwfaacbch3e0.z02.azurefd.net/assets/images/Y.webp\"\n      emojis=\"true\"\n      handleToggle={handleToggle}\n    />\n  );\n};\n\nexport default ChatWidget;\n","export const YELLOW = '#ffde5a';","import React, { useState, useRef, useEffect } from 'react';\nimport { ReactReader,  ReactReaderStyle } from 'react-reader';\nimport { YELLOW } from '../constants/colors';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { analytics, logEvent } from '../firebase.js';\nimport { FaSun, FaMoon, FaPlay, FaArrowLeft } from 'react-icons/fa';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Alert from '@mui/material/Alert';\nimport ChatWidget from '../components/ChatWidget.js';\nimport { auth } from \"../firebase\";\nimport axios from 'axios';\nimport Draggable from 'react-draggable';\nimport Swal from 'sweetalert2';\nimport ReactPlayer from 'react-player';\nimport { addResponseMessage, toggleMsgLoader } from '@ryaneewx/react-chat-widget';\n\nfunction updateTheme(rendition, theme, font) {\n  const themes = rendition.themes\n  switch (theme) {\n    case 'dark': {\n      themes.override('color', '#fff')\n      themes.override('background-color', '#000') \n      themes.override('font-family', font)\n      break\n    }\n    case 'light': {\n      themes.override('color', '#000')\n      themes.override('background', '#fff')\n      themes.override('font-family', font)\n      break\n    }\n  }\n}\nconst EbookViewer = () => {\n  const [largeText, setLargeText] = useState('');\n  const [theme, setTheme] = useState('light');\n  const navigate = useNavigate();\n  const rendition = useRef(undefined);\n  const { id } = useParams();\n  const [ebookContent, setEbookContent] = useState(null);\n\n  const [font, setFont] = useState(localStorage.getItem('font') || 'Georgia, serif');\n  const [page, setPage] = useState('')\n  const [firstChapterLocation, setFirstChapterLocation] = useState(null);\n\n  const [searchQuery, setSearchQuery] = useState('');\nconst [searchResults, setSearchResults] = useState([]);\nconst [currentResultIndex, setCurrentResultIndex] = useState(0);\nconst [isSearching, setIsSearching] = useState(false);\nconst [searchError, setSearchError] = useState(null);\nconst [audioUrl, setAudioUrl] = useState(null);\nconst renditionRef = useRef(null);\nconst tocRef = useRef(null)\n\nconst [selections, setSelections] = useState([])\n\n  const fonts = [\n    'Georgia, serif', \n    'Arial, sans-serif', \n    'Courier New, monospace',\n    'Times New Roman, Times, serif',\n    'Verdana, Geneva, sans-serif',\n    'Tahoma, Geneva, sans-serif',\n    'Trebuchet MS, Helvetica, sans-serif',\n    'Lucida Sans Unicode, Lucida Grande, sans-serif',\n    'Lucida Sans Unicode',\n    'Lucida Grande, sans-serif',\n    'Palatino Linotype, Book Antiqua, Palatino, serif',\n    'Garamond, serif',\n    'Bookman Old Style, serif',\n    'Arial Black, Gadget, sans-serif',\n    'Comic Sans MS, cursive, sans-serif',\n    'Impact, Charcoal, sans-serif',\n    'Gill Sans, sans-serif',\n    'Franklin Gothic Medium, Arial, sans-serif',\n'Consolas, monaco, monospace',\n'Courier, monospace',\n'Lucida Console, Monaco, monospace',\n'Lucida Sans Typewriter, Lucida Console, monaco, Bitstream Vera Sans Mono, monospace',\n'American Typewriter, Georgia, serif',\n'Andale Mono, AndaleMono, monospace',\n'Futura, Century Gothic, AppleGothic, sans-serif',\n'Gill Sans, Calibri, Trebuchet MS, sans-serif',\n'Helvetica, Arial, sans-serif',\n'Impact, Haettenschweiler, Franklin Gothic Bold, Charcoal, Helvetica Inserat, sans-serif',\n'Lucida Grande, Lucida Sans, Lucida Sans Unicode, sans-serif',\n'Monaco, Consolas, Lucida Console, monospace',\n'Optima, Segoe, Candara, Calibri, Arial, sans-serif',\n'Palatino, Palatino Linotype, Palatino LT STD, Book Antiqua, Georgia, serif',\n'Tahoma, Verdana, Segoe, sans-serif',\n'TimesNewRoman, Times New Roman, Times, Baskerville, Georgia, serif',\n'Trebuchet MS, Lucida Grande, Lucida Sans Unicode, Lucida Sans, Tahoma, sans-serif',\n'Roboto, sans-serif',\n'Montserrat, sans-serif'\n  ];\n\n  const email = auth.currentUser?.email;\n\n  ////console.log('Current user email:', email);\n  function setDisplayedText(location) {\n    //const cfiRange = `${location.start.cfi},${location.end.cfi}`;\n    const splitCfi = location.start.cfi.split('/');\n    const baseCfi = splitCfi[0] + '/' + splitCfi[1] + '/' + splitCfi[2] + '/' + splitCfi[3];\n    const startCfi = location.start.cfi.replace(baseCfi, '');\n    const endCfi = location.end.cfi.replace(baseCfi, '');\n    const cfiRange = [baseCfi, startCfi, endCfi].join(',');\n    const text = renditionRef.current.getRange(cfiRange).toString();\n    //console.log('Visible Page CFI Range:', cfiRange);\n    //console.log('Visible Page Text:', text);\n    setLargeText(text);\n  }\n  function setRenderSelection(cfiRange, contents) {\n    ////console.log(cfiRange)\n    const text = renditionRef.current.getRange(cfiRange).toString();\n    //console.log('CFI Range:', cfiRange);\n    //console.log('Selected Text:', text);\n  \n    setSelections(\n      selections.concat({\n        text,\n        cfiRange\n      })\n    )\n  \n    renditionRef.current.annotations.add(\n      'highlight',\n      cfiRange,\n      {},\n      null,\n      'hl',\n      { fill: 'red', 'fill-opacity': '0.5', 'mix-blend-mode': 'multiply' }\n    )\n  \n    contents.window.getSelection().removeAllRanges()\n  }\n\n  useEffect(() => {\n    if (renditionRef.current) {\n      renditionRef.current.on('selected', setRenderSelection)\n      renditionRef.current.on('relocated', setDisplayedText)\n      \n      return () => {\n        renditionRef.current.off('selected', setRenderSelection)\n      }\n    }\n  }, [setSelections, selections])\n\n\n  useEffect(() => {\n    localStorage.setItem('font', font);\n    if (rendition.current) {\n      rendition.current.themes.override('font-family', font);\n    }\n  }, [font]);\n\n  useEffect(() => {\n    if (rendition.current) {\n      updateTheme(rendition.current, theme, font)\n    }\n  }, [font])\n\n\n  useEffect(() => {\n    const fetchEbookContent = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(\n          `https://yeeplatformbackend.azurewebsites.net/getEbook/${id}`\n        );\n        const data = await response.json();\n        setEbookContent(data);\n        //console.log(data)\n      } catch (error) {\n        console.error('Error fetching eBook content:', error.message);\n      } finally {\n        setIsLoading(false);\n        logEvent(analytics, ebookContent?.title + '_reader_page_visited');\n      }\n    };\n\n    fetchEbookContent();\n  }, [id]);\n\n\n  useEffect(() => {\n    if (rendition.current) {\n      updateTheme(rendition.current, theme)\n    }\n  }, [theme])\n\n  const [location, setLocation] = useState(null);\n\n  /*const handlePlayClick = () => {\n    const contents = rendition.current.getContents();\n    const text = contents.map(content => content.document.body.textContent).join('\\n');\n    //console.log(text);\n  };*/\n  const selectLanguage = async () => {\n    const { value: language } = await Swal.fire({\n      title: 'Select language',\n      html: `\n      <form id=\"languageForm\" style=\"display: flex; flex-direction: column; align-items: start;\">\n        <label><input type=\"radio\" name=\"language\" value=\"eng\"> English</label><br>\n        <label><input type=\"radio\" name=\"language\" value=\"swh\"> Swahili</label><br>\n        <label><input type=\"radio\" name=\"language\" value=\"spa\"> Spanish</label><br>\n        <label><input type=\"radio\" name=\"language\" value=\"arz\"> Arabic</label><br>\n        <label><input type=\"radio\" name=\"language\" value=\"fra\"> French</label><br>\n      </form>\n      `,\n      focusConfirm: false,\n      preConfirm: () => {\n        const radios = document.getElementById('languageForm').elements['language'];\n        let selectedLanguage;\n        for (let i = 0; i < radios.length; i++) {\n          if (radios[i].checked) {\n            selectedLanguage = radios[i].value;\n            break;\n          }\n        }\n        return selectedLanguage;\n      }\n    });\n  \n    return language;\n  };\n  \n\n  const handlePlayClick = async () => {\n    // Cancel the currently playing audio\n    setAudioUrl(null);\n  \n    // Ask for language selection\n    const { value: language } = await Swal.fire({\n      title: 'Select language',\n      html: `\n      <form id=\"languageForm\" style=\"display: flex; flex-direction: column; align-items: start;\">\n          <label><input type=\"radio\" name=\"language\" value=\"eng\"> English</label><br>\n          <label><input type=\"radio\" name=\"language\" value=\"swh\"> Swahili</label><br>\n          <label><input type=\"radio\" name=\"language\" value=\"spa\"> Spanish</label><br>\n          <label><input type=\"radio\" name=\"language\" value=\"arz\"> Arabic</label><br>\n          <label><input type=\"radio\" name=\"language\" value=\"fra\"> French</label><br>\n          \n        </form>\n      `,\n      focusConfirm: false,\n      preConfirm: () => {\n        const radios = document.getElementById('languageForm').elements['language'];\n        let selectedLanguage;\n        for (let i = 0; i < radios.length; i++) {\n          if (radios[i].checked) {\n            selectedLanguage = radios[i].value;\n            break;\n          }\n        }\n        return selectedLanguage;\n      }\n    });\n  \n    if (language) {\n      // Show loading Swal\n      Swal.fire({\n        title: 'Loading...',\n        allowOutsideClick: false,\n        onBeforeOpen: () => {\n          Swal.showLoading()\n        }\n      });\n  \n      const book_title = ebookContent.title; // Replace with actual book title\n      let processedBookTitle = book_title.replace(/\\s+/g, '_').replace(/[^a-zA-Z0-9_]/g, '');\n  \n      try {\n        // Make a POST request to the Flask API\n        const response = await axios.post('https://yeeplatform.com/server/synthesize', {\n          text: largeText,\n          book_title: processedBookTitle,\n          page_number: page,\n          language: language\n        }, {\n          timeout: 6000000\n        });\n  \n      \n        const audioUrl = response.data.audio_url; \n  \n        // Play the audio\n        setAudioUrl(\"https://yeeplatform.com/server/\"+audioUrl);\n  \n        // Close loading Swal\n        Swal.close();\n      } catch (error) {\n        // Close loading Swal and show error Swal\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!',\n          footer: '<a href>Why do I have this issue?</a>'\n        });\n        console.error('Error playing audio:', error);\n      }\n    }\n  };\n\n\n  const backButtonStyle = {\n    backgroundColor: YELLOW,\n    color: 'black',\n    borderRadius: '50%',\n    padding: '10px',\n    fontSize: '20px',\n    position: 'absolute',\n    top: '10px',\n    left: '10px',\n  };\n\n  const buttonStyle = {\n    backgroundColor: YELLOW,\n    color: 'black',\n    borderRadius: '50%',\n    padding: '10px',\n    fontSize: '20px',\n    margin: '10px',\n  };\n\n\n  const handleSearch = async () => {\n    if (rendition.current && searchQuery) {\n      setIsSearching(true);\n      setSearchError(null);\n      try {\n        const results = await doSearch(searchQuery);\n        setSearchResults(results);\n      } catch (error) {\n        setSearchError(error.message);\n      } finally {\n        setIsSearching(false);\n      }\n    }\n  };\n\n  // After your search function\nfunction doSearch(q) {\n  return Promise.all(\n    rendition.current.book.spine.spineItems.map(item => \n      item.load(rendition.current.book.load.bind(rendition.current.book))\n        .then(item.find.bind(item, q))\n        .finally(item.unload.bind(item))\n    )\n  ).then(results => {\n    // Clear any existing highlights\n    rendition.current.annotations.remove();\n\n    results.forEach(result => {\n      // Log the chapter\n      //console.log(result.cfi);\n    \n      // Highlight the search result\n      rendition.current.annotations.highlight(result.cfi, {}, (e) => {\n        //console.log(\"highlight clicked\", e.target);\n      });\n    });\n\n    return Promise.resolve([].concat.apply([], results));\n  });\n}\n\nconst handleNext = () => {\n  const nextIndex = (currentResultIndex + 1) % searchResults.length;\n  const nextResult = searchResults[nextIndex];\n  rendition.current.display(nextResult.cfi);\n  rendition.current.annotations.highlight(nextResult.cfi, {}, (e) => {\n    //console.log(\"highlight clicked\", e.target);\n  });\n  setCurrentResultIndex(nextIndex);\n};\n\nconst handlePrevious = () => {\n  const prevIndex = (currentResultIndex - 1 + searchResults.length) % searchResults.length;\n  const prevResult = searchResults[prevIndex];\n  rendition.current.display(prevResult.cfi);\n  rendition.current.annotations.highlight(prevResult.cfi, {}, (e) => {\n    //console.log(\"highlight clicked\", e.target);\n  });\n  setCurrentResultIndex(prevIndex);\n};\n\n\n  const handleInputChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n\n  const handleNewUserMessage = (newMessage) => {\n    //console.log(`New message incoming! ${newMessage}`);\n    \n    // Show the loading indicator\n    toggleMsgLoader();\n\n    fetch('https://yeeplatform.com/server/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ebook_id: ebookContent._id,\n        query: newMessage,\n        user_id: email || 'guest',\n        title: ebookContent.title ||  'test',\n        Description: ebookContent.Description || 'test'\n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      //console.log('Response from backend:', data);\n      addResponseMessage(data.response);\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      addResponseMessage('Sorry, something went wrong.');\n    })\n    .finally(() => {\n      // Hide the loading indicator\n      toggleMsgLoader();\n    });\n  };\n\n\n  const locationChanged = location => {\n    if (renditionRef.current && tocRef.current) {\n      const { displayed, href } = renditionRef.current.location.start\n      const chapter = tocRef.current.find(item => item.href === href)\n      setPage(\n        `Page ${displayed.page} of ${displayed.total} in chapter ${\n          chapter ? chapter.label : 'n/a'\n        }`\n      )\n      //console.log(page)\n    }\n  }\n\n  useEffect(() => {\n    locationChanged(location);\n  }, [location]);\n\n  return (\n    <div style={{ height: '100vh' }}>\n      <button style={backButtonStyle} onClick={() => navigate(`/ebooks/${id}`)}>\n        <FaArrowLeft /> {/*Back*/}\n      </button>\n         <button style={buttonStyle} onClick={() => setTheme('light')}>\n      <FaSun /> {/*Light Theme*/}\n    </button>\n    <button style={buttonStyle} onClick={() => setTheme('dark')}>\n      <FaMoon /> {/*Dark Theme*/}\n    </button>\n    <button style={buttonStyle} onClick={handlePlayClick}>\n      <FaPlay /> {/*Play*/}\n    </button>\n\n\n    <select value={font} onChange={(e) => setFont(e.target.value)}>\n        {fonts.map((fontOption) => (\n          <option key={fontOption} value={fontOption}>\n            {fontOption}\n          </option>\n        ))}\n      </select>\n\n      <TextField \n  id=\"outlined-basic\" \n  label=\"Search\" \n  variant=\"outlined\" \n  type=\"text\" \n  value={searchQuery} \n  onChange={handleInputChange} \n  style={{ marginTop: '1%', marginRight:  '1%' }} // added top margin and padding\n/>\n\n<Button \n  onClick={handleSearch} \n  variant=\"outlined\"\n  style={{ marginTop: '20px', padding: '10px' }} // added top margin and padding\n>\n  Search\n</Button>\n\n<div>\n  {isSearching ? (\n    <p>Searching...</p>\n  ) : searchError ? (\n    <Alert severity=\"error\">Text not found please search for something else.</Alert>\n  ) : searchResults.length > 0 ? (\n    <>\n      <Button style={{ marginRight:  '1%' }} onClick={handlePrevious} variant=\"outlined\">Previous</Button>\n      <Button style={{ marginRight:  '1%' }} onClick={handleNext} variant=\"outlined\">Next</Button>\n    </>\n  ) : (\n    <p>No results found</p>\n  )}\n</div>\n{audioUrl && (\n  <Draggable>\n    <div style={{\n      position: 'absolute',\n      bottom: '10px',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      zIndex: 1000,\n      backgroundColor: 'transparent',\n      padding: '10px',\n      borderRadius: '10px',\n      boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)'\n    }}>\n      <ReactPlayer url={audioUrl} controls playing />\n      <button onClick={() => setAudioUrl(null)} style={{\n        marginTop: '10px',\n        backgroundColor: '#f44336',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px',\n        padding: '5px 10px',\n        cursor: 'pointer'\n      }}>Cancel</button>\n    </div>\n  </Draggable>\n)}\n\n      <ReactReader\n        title = {ebookContent?.title}\n        url={ebookContent?.ebookepubImagesUrl || ebookContent?.ebook_url || ebookContent?.ebookUrl}\n        showToc ={true}\n        location={firstChapterLocation || location}\n        locationChanged={(epubcfi) => setLocation(epubcfi)}\n        epubInitOptions={{\n          openAs: 'epub',\n        }}\n        readerStyles={theme === 'dark' ? darkReaderTheme : lightReaderTheme}\n        getRendition={(_rendition) => {\n          updateTheme(_rendition, theme, font)\n          rendition.current = _rendition\n          renditionRef.current = _rendition\n          renditionRef.current.themes.default({\n            '::selection': {\n              background: 'orange'\n            }\n          })\n          setSelections([])\n        }}\n        tocChanged={toc => (tocRef.current = toc)}\n      />\n\n<ChatWidget handleNewUserMessage={handleNewUserMessage} />\n      \n    </div>\n  )\n}\n\nconst lightReaderTheme = {\n  ...ReactReaderStyle,\n  readerArea: {\n    ...ReactReaderStyle.readerArea,\n    transition: undefined,\n  },\n  arrow: {\n    ...ReactReaderStyle.arrow,\n    color: YELLOW,\n  },\n  arrowHover: {\n    ...ReactReaderStyle.arrowHover,\n    color: YELLOW,\n  },\n  titleArea: {\n    ...ReactReaderStyle.titleArea,\n    color: 'black',\n  },\n  tocArea: {\n    ...ReactReaderStyle.tocArea,\n    color: YELLOW,\n  },\n  tocButtonExpanded: {\n    ...ReactReaderStyle.tocButtonExpanded,\n    color: YELLOW,\n  },\n  tocButtonBar: {\n    ...ReactReaderStyle.tocButtonBar,\n    background: 'black',\n  },\n  tocButton: {\n    ...ReactReaderStyle.tocButton,\n    color: YELLOW,\n  },\n};\n\nconst darkReaderTheme = {\n  ...ReactReaderStyle,\n  arrow: {\n    ...ReactReaderStyle.arrow,\n    color: 'white',\n  },\n  arrowHover: {\n    ...ReactReaderStyle.arrowHover,\n    color: 'yellow',\n  },\n  readerArea: {\n    ...ReactReaderStyle.readerArea,\n    backgroundColor: '#000',\n    transition: undefined,\n  },\n  titleArea: {\n    ...ReactReaderStyle.titleArea,\n    color: '#ccc',\n  },\n  tocArea: {\n    ...ReactReaderStyle.tocArea,\n    background: '#111',\n  },\n  tocButtonExpanded: {\n    ...ReactReaderStyle.tocButtonExpanded,\n    background: '#222',\n  },\n  tocButtonBar: {\n    ...ReactReaderStyle.tocButtonBar,\n    background: '#fff',\n  },\n  tocButton: {\n    ...ReactReaderStyle.tocButton,\n    color: 'white',\n  },\n};\n\n\nexport default EbookViewer;"],"names":["_ref","handleNewUserMessage","chatWindowOpen","setChatWindowOpen","useState","_jsx","Widget","title","subtitle","profileAvatar","emojis","handleToggle","open","prev","YELLOW","updateTheme","rendition","theme","font","themes","override","lightReaderTheme","ReactReaderStyle","readerArea","transition","undefined","arrow","color","arrowHover","titleArea","tocArea","tocButtonExpanded","tocButtonBar","background","tocButton","darkReaderTheme","backgroundColor","EbookViewer","_auth$currentUser","largeText","setLargeText","setTheme","navigate","useNavigate","useRef","id","useParams","ebookContent","setEbookContent","setFont","localStorage","getItem","page","setPage","firstChapterLocation","setFirstChapterLocation","searchQuery","setSearchQuery","searchResults","setSearchResults","currentResultIndex","setCurrentResultIndex","isSearching","setIsSearching","searchError","setSearchError","audioUrl","setAudioUrl","renditionRef","tocRef","selections","setSelections","email","auth","currentUser","setDisplayedText","location","splitCfi","start","cfi","split","baseCfi","cfiRange","replace","end","join","text","current","getRange","toString","setRenderSelection","contents","concat","annotations","add","fill","window","getSelection","removeAllRanges","useEffect","on","off","setItem","async","setIsLoading","response","fetch","data","json","error","console","message","logEvent","analytics","fetchEbookContent","setLocation","backButtonStyle","borderRadius","padding","fontSize","position","top","left","buttonStyle","margin","displayed","href","chapter","find","item","total","label","locationChanged","_jsxs","style","height","children","onClick","FaArrowLeft","FaSun","FaMoon","value","language","Swal","html","focusConfirm","preConfirm","radios","document","getElementById","elements","selectedLanguage","i","length","checked","allowOutsideClick","onBeforeOpen","processedBookTitle","axios","post","book_title","page_number","timeout","audio_url","icon","footer","FaPlay","onChange","e","target","map","fontOption","TextField","variant","type","marginTop","marginRight","Button","results","q","Promise","all","book","spine","spineItems","load","bind","then","finally","unload","remove","forEach","result","highlight","resolve","apply","Alert","severity","_Fragment","handlePrevious","prevIndex","prevResult","display","handleNext","nextIndex","nextResult","Draggable","bottom","transform","zIndex","boxShadow","ReactPlayer","url","controls","playing","border","cursor","ReactReader","ebookepubImagesUrl","ebook_url","ebookUrl","showToc","epubcfi","epubInitOptions","openAs","readerStyles","getRendition","_rendition","default","tocChanged","toc","ChatWidget","newMessage","toggleMsgLoader","method","headers","body","JSON","stringify","ebook_id","_id","query","user_id","Description","addResponseMessage","catch"],"sourceRoot":""}