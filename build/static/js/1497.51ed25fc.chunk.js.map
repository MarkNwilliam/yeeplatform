{"version":3,"file":"static/js/1497.51ed25fc.chunk.js","mappings":"yLAIe,SAASA,IACtB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IACxCG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,MACtCK,EAAYC,IAAiBN,EAAAA,EAAAA,UAAS,KACtCO,EAAWC,IAAgBR,EAAAA,EAAAA,WAAS,IAC3CS,EAAAA,EAAAA,YAAU,KAIRC,GAAW,GACV,CAACT,EAAaI,IAEjB,MAAMK,EAAYC,UAChBH,GAAa,GACb,IACE,MAAMI,EAAMP,EAAU,4DAAAQ,OAC0CR,EAAU,UAAAQ,OAASZ,EAAW,gFAAAY,OACvBZ,EAAW,aAE5Ea,QAAiBC,MAAMH,GAC7B,IAAKE,EAASE,GAAI,MAAM,IAAIC,MAAM,qCAADJ,OAAsCC,EAASI,SAEhF,MAAMC,QAAaL,EAASM,OAC5BC,QAAQC,IAAI,iBAAkBH,GAE9BpB,EAASoB,EAAKA,MACdf,EAAcmB,KAAKC,KAAKL,EAAKM,WAAa,IAC5C,CAAE,MAAOC,GACPL,QAAQK,MAAM,uBAAwBA,EACxC,CACAlB,GAAa,EAAM,EAGfmB,EAAmBA,CAACC,EAAOC,KAC/B3B,EAAe2B,EAAM,EAWvB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAE9CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8CAA6CC,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,wBACZN,MAAOxB,EACP+B,SAhB0BR,IAC1BtB,EAAcsB,EAAMS,OAAOR,MAAM,EAgBjCE,UAAU,2IACVO,MAAO,CAAEC,MAAO,OAAQC,SAAU,YAEpCP,EAAAA,EAAAA,KAAA,UACEQ,QAjBwBC,KACxBhC,GAAW,EAiBXqB,UAAU,gLACVO,MAAO,CAAEK,SAAU,SAAUX,SAC9B,eAOGC,EAAAA,EAAAA,KAACW,EAAAA,EAAgB,CAACzC,WAAYA,EAAYF,YAAaA,EAAamC,SAAUT,KAE9EM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yFAAwFC,SACpGzB,GACC0B,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gCAA+BC,SAAC,uBAE7ClC,EAAM+C,KAAI,CAACC,EAAMC,KACfd,EAAAA,EAAAA,KAACe,EAAAA,EAAW,CAEVC,MAAOH,EAAKG,MACZC,WAAYJ,EAAKK,cAAgBL,EAAKI,YAAcJ,EAAKM,WACzDC,SAAUP,EAAKZ,MAAQ,UACvBoB,OAAQR,EAAKS,IACbC,OAAQV,EAAKU,QALRT,QAWbd,EAAAA,EAAAA,KAACW,EAAAA,EAAgB,CACfzC,WAAYA,EACZF,YAAaA,EACbmC,SAAUT,MAIlB,C","sources":["components/Scontent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ContentCard from \"../subcomponents/ContentCard\";\r\nimport CustomPagination from \"../subcomponents/CustomPagination\";\r\nimport { Link } from 'react-router-dom';\r\nexport default function Scontent() {\r\n  const [items, setItems] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(100);\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); \r\n  const [isLoading, setIsLoading] = useState(true); \r\n  useEffect(() => {\r\n  \r\n    \r\n  \r\n    fetchData();\r\n  }, [currentPage, searchTerm]);\r\n  \r\n  const fetchData = async () => {\r\n    setIsLoading(true); // Set loading state to true when fetching starts\r\n    try {\r\n      const url = searchTerm \r\n        ? `https://yeeplatformbackend.azurewebsites.net/search?term=${searchTerm}&page=${currentPage}&limit=15`\r\n        : `https://yeeplatformbackend.azurewebsites.net/getallcontent?page=${currentPage}&limit=15`;\r\n  \r\n      const response = await fetch(url);\r\n      if (!response.ok) throw new Error(`Data fetching failed with status: ${response.status}`);\r\n  \r\n      const data = await response.json();\r\n      console.log(\"Response data:\", data);\r\n  \r\n      setItems(data.data); // Set items to the 'data' array within the response\r\n      setTotalPages(Math.ceil(data.totalItems / 15)); // Use 'totalItems' for pagination calculation\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n    setIsLoading(false); // Set loading state to false when fetching ends\r\n  };\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setCurrentPage(value);\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleSearchClick = () => {\r\n    fetchData(); // Trigger data fetching when search button is clicked\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center p-4\">\r\n     {/* Search bar with button */}\r\n     <div className=\"mb-4 flex flex-col sm:flex-row items-center\">\r\n  <input\r\n    type=\"text\"\r\n    placeholder=\"Search for content...\"\r\n    value={searchTerm}\r\n    onChange={handleSearchChange}\r\n    className=\"p-3 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-300 transition duration-200 mb-2 sm:mb-0\"\r\n    style={{ width: \"100%\", maxWidth: \"300px\" }}\r\n  />\r\n  <button \r\n    onClick={handleSearchClick}\r\n    className=\"ml-0 sm:ml-2 p-3 border border-gray-300 rounded-lg bg-yellow-500 text-white hover:bg-yellow-600 transition duration-200 focus:outline-none focus:ring-2 focus:ring-yellow-300\"\r\n    style={{ minWidth: \"100px\" }}\r\n  >\r\n    Search\r\n  </button>\r\n</div>\r\n\r\n\r\n      {/* Pagination at the top */}\r\n      <CustomPagination totalPages={totalPages} currentPage={currentPage} onChange={handlePageChange} />\r\n\r\n      <div className=\"p-4 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\">\r\n        {isLoading ? (\r\n          <p className=\"text-yellow-500 animate-pulse\">Loading content...</p> // Display loading message when there is no content\r\n        ) : (\r\n          items.map((item, index) => (\r\n            <ContentCard\r\n              key={index}\r\n              title={item.title}\r\n              coverImage={item.thumbnailUrl || item.coverImage || item.coverimage}\r\n              itemType={item.type || 'unknown'}\r\n              itemId={item._id}\r\n              rating={item.rating}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <CustomPagination\r\n        totalPages={totalPages}\r\n        currentPage={currentPage}\r\n        onChange={handlePageChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Scontent","items","setItems","useState","currentPage","setCurrentPage","totalPages","setTotalPages","searchTerm","setSearchTerm","isLoading","setIsLoading","useEffect","fetchData","async","url","concat","response","fetch","ok","Error","status","data","json","console","log","Math","ceil","totalItems","error","handlePageChange","event","value","_jsxs","className","children","_jsx","type","placeholder","onChange","target","style","width","maxWidth","onClick","handleSearchClick","minWidth","CustomPagination","map","item","index","ContentCard","title","coverImage","thumbnailUrl","coverimage","itemType","itemId","_id","rating"],"sourceRoot":""}