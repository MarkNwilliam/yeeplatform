{"version":3,"file":"static/js/1888.f391e299.chunk.js","mappings":"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","sources":["components/DUpload.js","functions/azureUpload.js","functions/imageUtils.js","subcomponents/SubmitButton.js","subcomponents/SuccessDialog.js","subcomponents/UploadButton.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { auth } from \"../firebase\";\r\nimport { Typography } from \"@mui/material\";\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport uploadToAzure from '../functions/azureUpload';\r\nimport SuccessDialog from '../subcomponents/SuccessDialog';\r\nimport UploadButton from '../subcomponents/UploadButton';\r\nimport SubmitButton from '../subcomponents/SubmitButton';\r\nimport { resizeImage } from '../functions/imageUtils';\r\n\r\nfunction DUpload({ user }) {\r\n  const [ebookFile, setEbookFile] = useState(null);\r\n  const [coverFile, setCoverFile] = useState(null);\r\n  const [ebookFileName, setEbookFileName] = useState(\"\");\r\nconst [coverFileName, setCoverFileName] = useState(\"\");\r\nconst [successMessage, setSuccessMessage] = useState(\"Well done! You're a real YeePlatform author.\");\r\n  const [pointsAwarded, setPointsAwarded] = useState(100);\r\n  const [previewFile, setPreviewFile] = useState(null);\r\n  const [previewFileName, setPreviewFileName] = useState(\"\");\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [genres, setGenres] = useState('');\r\n  const [isbn, setIsbn] = useState('');\r\n  const [publicationDate, setPublicationDate] = useState(''  );\r\n  const [subtitle, setSubtitle] = useState('');\r\n  const [monetization, setMonetization] = useState(false); \r\n  const [coverPreview, setCoverPreview] = useState('');\r\n  const [selectedCategories, setSelectedCategories] = useState([]);\r\n  const [isSuccessDialogOpen, setIsSuccessDialogOpen] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handlePageUnload = () => {\r\n      if (isSuccessDialogOpen) {\r\n        setIsSuccessDialogOpen(false);\r\n      }\r\n    };\r\n\r\n    // Register the event listener\r\n    window.addEventListener('beforeunload', handlePageUnload);\r\n\r\n    // Cleanup function to remove the event listener\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handlePageUnload);\r\n    };\r\n  }, [isSuccessDialogOpen]);\r\n\r\n  const maxDescriptionLength = 500; // Set maximum length for description\r\n  const maxCoverImageSizeMB = 5; // Maximum cover image size in MB\r\n  const maxTitleLength = 100;\r\nconst maxEbookFileSizeMB = 300; // Example limit for eBook file size in MB\r\nconst maxSubtitleLength = 200;\r\nconst maxPreviewFileSizeMB = 10;\r\n\r\n\r\nconst availableCategories = [\r\n  \"Fiction\", \"Nonfiction\", \"Science Fiction\", \"Romance\",\r\n  \"Mystery/Thriller\", \"Fantasy\", \"Biography\", \"History\",\r\n  \"Business/Economics\", \"Self-help\", \"Health/Fitness\",\r\n  \"Cooking/Food\", \"Travel\", \"Technology\"\r\n];\r\n\r\nconst firebaseId = auth.currentUser.uid;\r\n\r\nconst handleCategoryChange = (event, value) => {\r\n  if (Array.isArray(value)) {\r\n    if (value.length > 3) {\r\n      Swal.fire('Error', 'You can select up to 3 categories only.', 'error');\r\n      return;\r\n    }\r\n    setSelectedCategories(value);\r\n  } else {\r\n    console.error('Expected an array for selected categories, received:', value);\r\n  }\r\n};\r\n\r\nconst handleCoverChange = async (e) => {\r\n  const file = e.target.files[0];\r\n  if (file) {\r\n    if (!isFileSizeWithinRange(file, 0.001, maxCoverImageSizeMB)) {\r\n      Swal.fire('Error', `Cover image size should not exceed ${maxCoverImageSizeMB} MB.`, 'error');\r\n      return;\r\n    }\r\n\r\n    const isDimensionsValid = await isImageDimensionsValid(file, 512, 800);\r\n    if (!isDimensionsValid) {\r\n      Swal.fire('Error', 'Invalid image dimensions.', 'error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const resizedImageBlob = await resizeImage(file, 256);\r\n      const resizedFile = new File([resizedImageBlob], file.name, { type: 'image/jpeg' });\r\n      setCoverFile(resizedFile);\r\n      setCoverFileName(resizedFile.name);\r\n      setCoverPreview(URL.createObjectURL(resizedImageBlob));\r\n    } catch (error) {\r\n      console.error('Error resizing image:', error);\r\n      Swal.fire('Error', 'Failed to resize the image.', 'error');\r\n    }\r\n  }\r\n};\r\n\r\nconst handlePreviewChange = async (e) => {\r\n  const file = e.target.files[0];\r\n  if (file) {\r\n    if (!isFileSizeWithinRange(file, 0.1, maxPreviewFileSizeMB)) {\r\n      Swal.fire('Error', `Preview file size should not exceed ${maxPreviewFileSizeMB} MB.`, 'error');\r\n      return;\r\n    }\r\n\r\n    setPreviewFile(file);\r\n    setPreviewFileName(file.name);\r\n  }\r\n};\r\n\r\nconst handleEbookChange = (e) => {\r\n  const file = e.target.files[0];\r\n  if (file) {\r\n    if (!isFileSizeWithinRange(file, 0.1, maxEbookFileSizeMB)) {\r\n      Swal.fire('Error', `eBook file size should not exceed ${maxEbookFileSizeMB} MB.`, 'error');\r\n      return;\r\n    }\r\n\r\n    setEbookFile(file);\r\n    setEbookFileName(file.name);\r\n  }\r\n};\r\n\r\nconst resetForm = () => {\r\n  setEbookFile(null);\r\n  setCoverFile(null);\r\n  setEbookFileName(\"\");\r\n  setCoverFileName(\"\");\r\n  setTitle('');\r\n  setDescription('');\r\n  setSubtitle('');\r\n  setGenres('');\r\n  setIsbn('');\r\n  setPublicationDate('');\r\n  setCoverPreview('');\r\n  setDescription('');\r\n  setSelectedCategories([]);\r\n  setPreviewFile(null);\r\n  setPreviewFileName('');\r\n};\r\n\r\n  const checkFileExtension = (file, validExtensions) => {\r\n    const extension = file.name.split('.').pop();\r\n    return validExtensions.includes(extension);\r\n};\r\n\r\nconst isDescriptionValid = (desc) => {\r\n  const words = desc.split(/\\s+/);\r\n  return words.length <= 300;\r\n};\r\n\r\nconst isValidISBN = (isbn) => {\r\n  const regex = /^(97(8|9))?\\d{9}(\\d|X)$/;\r\n  return regex.test(isbn);\r\n};\r\n\r\nconst isFileSizeWithinRange = (file, minSizeInMB, maxSizeInMB) => {\r\n  const sizeInMB = file.size / (1024 * 1024);\r\n  return sizeInMB >= minSizeInMB && sizeInMB <= maxSizeInMB;\r\n};\r\n\r\nconst isImageDimensionsValid = async (file, width, height) => {\r\n  return new Promise((resolve) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n          resolve(img.width === width && img.height === height);\r\n      };\r\n      img.src = URL.createObjectURL(file);\r\n  });\r\n};\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check for title length\r\n  if (title.length > maxTitleLength) {\r\n    Swal.fire('Error', 'Title is too long.', 'error');\r\n    return;\r\n  }\r\n\r\n  // Check for description length\r\n  if (description.length > maxDescriptionLength) {\r\n    Swal.fire('Error', 'Description is too long.', 'error');\r\n    return;\r\n  }\r\n\r\n  if (subtitle.length > maxSubtitleLength) {\r\n    Swal.fire('Error', 'Subtitle is too long.', 'error');\r\n    return;\r\n  }\r\n\r\n  // Check for eBook file size\r\n  if (ebookFile && (ebookFile.size / 1024 / 1024) > maxEbookFileSizeMB) {\r\n    Swal.fire('Error', 'eBook file size is too large.', 'error');\r\n    return;\r\n  }\r\n\r\n    Swal.fire({\r\n      icon: 'info',\r\n      title: 'Uploading...',\r\n      text: 'Please wait while your file is being uploaded.',\r\n      showConfirmButton: false, // Hides the OK button\r\n      allowOutsideClick: false\r\n  });\r\n\r\n    if (!title.trim()) {\r\n      Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: 'The title cannot be empty. Please provide a title and try again.'\r\n      });\r\n      return;\r\n  }\r\n    \r\nif (!checkFileExtension(ebookFile, ['pdf', 'epub', 'mobi'])) {\r\n\r\n  Swal.fire({\r\n    icon: 'error',\r\n    title: 'Oops...',\r\n    text: 'Invalid eBook format. Please upload in .pdf, .epub, or .mobi format.'\r\n});\r\n  return;\r\n}\r\n\r\n \r\n\r\nconst isCoverDimensionsValid = await isImageDimensionsValid(coverFile, 600, 800);\r\n/*if (!isCoverDimensionsValid) {\r\n    Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Cover image dimensions should be 600x800 pixels. Please adjust the image size and try again.'\r\n    });\r\n    return;\r\n} */\r\n\r\nif (!isFileSizeWithinRange(ebookFile, 0.1, 200)) {\r\n  Swal.fire({\r\n      icon: 'error',\r\n      title: 'Oops...',\r\n      text: 'eBook size should be between 100KB and 200MB. Please adjust the file size and try again.'\r\n  });\r\n  return;\r\n}\r\n\r\nif (!isFileSizeWithinRange(coverFile, 0.001, 5)) {\r\n  Swal.fire({\r\n      icon: 'error',\r\n      title: 'Oops...',\r\n      text: 'Cover image size should be between 1KB and 5MB. Please adjust the file size and try again.'\r\n  });\r\n  return;\r\n}\r\n\r\nif (!checkFileExtension(coverFile, ['jpg', 'jpeg', 'png'])) {\r\n\r\n  \r\n  Swal.fire({\r\n    icon: 'error',\r\n    title: 'Oops...',\r\n    text: 'Invalid cover image format. Please upload in .jpg or .png format.'\r\n});\r\n  return;\r\n}\r\n\r\nif (!isDescriptionValid(description)) {\r\n  Swal.fire({\r\n      icon: 'error',\r\n      title: 'Oops...',\r\n      text: 'Description exceeds 300 words. Please shorten it and try again.'\r\n  });\r\n  return;\r\n}\r\n\r\nif (!isValidISBN(isbn) && isbn) {\r\n \r\n  Swal.fire({\r\n    icon: 'error',\r\n    title: 'Oops...',\r\n    text: 'Invalid ISBN format. Please check and try again.'\r\n});\r\n  return;\r\n}\r\n\r\n// Resize the image to thumbnail size\r\nconst thumbnailBlob = await resizeImage(coverFile, 256);\r\n\r\n// Upload files to Azure Blob Storage (optional, can be moved outside)\r\nconst coverUrl = await uploadToAzure(coverFile);\r\nconst thumbnailUrl = await uploadToAzure(thumbnailBlob, true);\r\nconst previewUrl = await uploadToAzure(previewFile);\r\n\r\n// Ensure valid URLs\r\nif (!coverUrl || !thumbnailUrl) {\r\n  throw new Error('Failed to get valid URLs for the files.');\r\n}\r\n\r\nlet ebookUrl;\r\n\r\nif (ebookFile.type === 'application/pdf') {\r\n  // Create a new FormData instance for the file\r\n  const fileData = new FormData();\r\n\r\n  // Append ebook file to the fileData instance\r\n  fileData.append('ebookFile', ebookFile);\r\n\r\n  try {\r\n    // Upload the ebook file to the server and get the ebookUrl\r\n    const uploadResponse = await axios.post(`https://yeeplatformbackend.azurewebsites.net/fileupload/${firebaseId}`, fileData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n    ebookUrl = uploadResponse.data.azureFileUrl;\r\n  } catch (error) {\r\n    // Handle upload errors\r\n    console.error('Error uploading the ebook:', error);\r\n    Swal.fire({\r\n      icon: 'error',\r\n      title: 'Oops...',\r\n      text: 'Error uploading the ebook. Please try again.',\r\n    });\r\n    return;\r\n  }\r\n} else if (ebookFile.type === 'application/epub+zip') {\r\n  // Upload EPUB file to Azure Blob Storage\r\n  const ebookBlob = await uploadToAzure(ebookFile);\r\n  ebookUrl = ebookBlob.url;\r\n} else {\r\n  Swal.fire({\r\n    icon: 'error',\r\n    title: 'Oops...',\r\n    text: 'Invalid eBook format. Please upload in .pdf or .epub format.',\r\n  });\r\n  return;\r\n}\r\n\r\n// Create a new FormData instance for the rest of the data\r\nconst formData = new FormData();\r\n\r\n// Append non-chunked data (cover, thumbnail, preview URLs, etc.)\r\nformData.append('coverUrl', coverUrl);\r\nformData.append('thumbnailUrl', thumbnailUrl);\r\nformData.append('title', title);\r\nformData.append('description', description);\r\nformData.append('categories', selectedCategories);\r\nformData.append('isbn', isbn);\r\nformData.append('previewUrl', previewUrl);\r\nformData.append('subtitle', subtitle);\r\nformData.append('monetization', monetization);\r\nformData.append('publicationDate', publicationDate);\r\nformData.append('author_platform_id', firebaseId);\r\nformData.append('ebookUrl', ebookUrl);\r\n\r\ntry {\r\n  // Submit the complete formData to backend (including remaining data)\r\n  const response = await axios.post(`https://yeeplatformbackend.azurewebsites.net/ebookupload/${firebaseId}`, formData);\r\n  console.log(response.data);\r\n  Swal.close();\r\n  resetForm();\r\n  setIsSuccessDialogOpen(true);\r\n} catch (error) {\r\n  // Handle upload errors\r\n  console.error('Error uploading the ebook:', error);\r\n  Swal.fire({\r\n    icon: 'error',\r\n    title: 'Oops...',\r\n    text: 'Error uploading the ebook. Please try again.',\r\n  });\r\n}\r\n\r\n\r\n  }\r\n\r\n\r\nconst handleMonetizationChange = (e) => {\r\n  setMonetization(e.target.value === 'notfree');\r\n};\r\n\r\n  return (\r\n    <div className=\"p-8 bg-white shadow-md rounded-lg max-w-md mx-auto\">\r\n      <Typography variant=\"h4\" className=\"text-center mb-6\">Upload your Ebook</Typography>\r\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n      <div className=\"mb-4\">\r\n  <label className=\"block text-gray-700 text-sm font-bold mb-2\">Title:</label>\r\n  <input\r\n    type=\"text\"\r\n    value={title}\r\n    onChange={(e) => {\r\n      if (e.target.value.length <= maxTitleLength) {\r\n        setTitle(e.target.value);\r\n      }\r\n    }}\r\n    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n    required\r\n  />\r\n  <div className=\"text-right text-sm\">\r\n    {title.length}/{maxTitleLength}\r\n  </div>\r\n</div>\r\n\r\n\r\n<div className=\"mb-4\">\r\n  <label className=\"block text-gray-700 text-sm font-bold mb-2\">Subtitle:</label>\r\n  <input\r\n    type=\"text\"\r\n    value={subtitle}\r\n    onChange={(e) => {\r\n      if (e.target.value.length <= maxSubtitleLength) {\r\n        setSubtitle(e.target.value);\r\n      }\r\n    }}\r\n    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n  />\r\n  <div className=\"text-right text-sm\">\r\n    {subtitle.length}/{maxSubtitleLength}\r\n  </div>\r\n</div>\r\n\r\n\r\n<div className=\"mb-4\">\r\n  <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n    Upload Cover Image (Max size: {maxCoverImageSizeMB}MB):\r\n  </label>\r\n  <UploadButton\r\n    onChange={handleCoverChange}\r\n    fileName={coverFileName}\r\n    accept=\".jpg, .jpeg, .png\"\r\n    required\r\n  />\r\n  {coverPreview && (\r\n    <Box\r\n      component=\"img\"\r\n      sx={{\r\n        height: 240, // Fixed height\r\n        width: 180,  // Width according to aspect ratio 3:4\r\n        maxHeight: { xs: 233, md: 167 },\r\n        maxWidth: { xs: 350, md: 250 },\r\n        objectFit: 'cover', // This will cover the area without stretching the image\r\n      }}\r\n      alt=\"Cover Preview\"\r\n      src={coverPreview}\r\n    />\r\n  )}\r\n</div>\r\n\r\n\r\n<div className = \"mb-4\">\r\n      <Autocomplete\r\n  multiple\r\n  id=\"categories-autocomplete\"\r\n  options={availableCategories}\r\n  value={selectedCategories}\r\n  onChange={handleCategoryChange}\r\n  renderInput={(params) => (\r\n    <TextField\r\n      {...params}\r\n      label=\"Categories\"\r\n      placeholder=\"Select categories\"\r\n    />\r\n  )}\r\n  renderTags={(value, getTagProps) =>\r\n    value.map((option, index) => (\r\n      <Chip \r\n        key={option}  // Use the option itself as a unique key\r\n        label={option} \r\n        {...getTagProps({ index })} \r\n      />\r\n    ))\r\n  }\r\n/>\r\n\r\n</div>\r\n\r\n\r\n<div className=\"mb-4\">\r\n      <label className=\"block text-gray-700 text-sm font-bold mb-2\">Description:</label>\r\n      <textarea\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n        maxLength={maxDescriptionLength}\r\n        required\r\n      ></textarea>\r\n      <p className=\"text-sm text-gray-600\">\r\n        {description.length} / {maxDescriptionLength} characters\r\n      </p>\r\n    </div>\r\n\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">ISBN(Optional):</label>\r\n          <input\r\n            type=\"text\"\r\n            value={isbn}\r\n            onChange={(e) => setIsbn(e.target.value)}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            \r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">Publication Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            value={publicationDate}\r\n            onChange={(e) => setPublicationDate(e.target.value)}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n\r\n        <div className=\"mb-4\">\r\n  <label className=\"block text-gray-700 text-sm font-bold mb-2\">Monetization:</label>\r\n  <select\r\n  value={monetization ? 'notfree' : 'free'}\r\n  onChange={handleMonetizationChange}\r\n  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n>\r\n  <option value=\"free\">Free</option>\r\n  <option value=\"notfree\">Not Free</option>\r\n</select>\r\n\r\n</div>\r\n\r\n{/* eBook Preview File Upload Field */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n            Upload eBook Previewn (Max size: {maxPreviewFileSizeMB}MB):\r\n          </label>\r\n          <UploadButton\r\n    onChange={handlePreviewChange}\r\n    fileName={previewFileName}\r\n    accept=\".pdf, .epub, .mobi\"\r\n    required\r\n  />\r\n        </div>\r\n\r\n\r\n    {/* eBook File Upload Field */}\r\n    <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">Upload eBook File (Max size: {maxEbookFileSizeMB}MB):</label>\r\n          <UploadButton\r\n            onChange={handleEbookChange}\r\n            fileName={ebookFileName}\r\n            accept=\".pdf, .epub, .mobi\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n\r\n        <div className=\"flex justify-center\">\r\n        <SubmitButton buttonText=\"Upload\" />\r\n</div>\r\n\r\n      </form>\r\n\r\n\r\n      {isSuccessDialogOpen && (\r\n   <SuccessDialog\r\n   isOpen={isSuccessDialogOpen}\r\n   onClose={() => setIsSuccessDialogOpen(false)}\r\n   points={pointsAwarded}\r\n   message={successMessage}\r\n />\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DUpload;\r\n","// azureUpload.js\r\n\r\nasync function uploadToAzure(file, isThumbnail = false) {\r\n    const response = await fetch('https://yeeplatformbackend.azurewebsites.net/generateSasToken');\r\n    const data = await response.json();\r\n    const sasToken = data.sasToken;\r\n\r\n    // Create a unique file name for the thumbnail to avoid name clashes\r\n    let fileName = isThumbnail ? `thumbnail-${Date.now()}.jpg` : file.name;\r\n    const blobURL = `https://yeeplatform.blob.core.windows.net/yeeebooks/${fileName}?${sasToken}`;\r\n\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        body: file,\r\n        headers: {\r\n            'x-ms-blob-type': 'BlockBlob'\r\n        }\r\n    };\r\n\r\n    const uploadResponse = await fetch(blobURL, requestOptions);\r\n\r\n    if (uploadResponse.ok) {\r\n        const publicBlobURL = blobURL.split('?')[0]; \r\n        return publicBlobURL;\r\n    } else {\r\n        throw new Error('Error uploading to Azure Blob Storage');\r\n    }\r\n}\r\n\r\nexport default uploadToAzure;\r\n","// imageUtils.js\r\nimport Pica from 'pica';\r\n\r\nconst pica = Pica();\r\n\r\nexport const resizeImage = (file, desiredWidth) => {\r\n    \r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                const scaleFactor = desiredWidth / img.width;\r\n                const desiredHeight = img.height * scaleFactor;\r\n\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = desiredWidth;\r\n                canvas.height = desiredHeight;\r\n\r\n                pica.resize(img, canvas)\r\n                    .then(result => pica.toBlob(result, 'image/jpeg', 0.80))\r\n                    .then(blob => resolve(blob))\r\n                    .catch(error => reject(error));\r\n            };\r\n            img.src = e.target.result;\r\n        };\r\n        reader.onerror = reject;\r\n        reader.readAsDataURL(file);\r\n    });\r\n};\r\n\r\nexport const isImageDimensionsValid = async (file, width, height) => {\r\n    return new Promise((resolve) => {\r\n        const img = new Image();\r\n        img.onload = () => {\r\n            resolve(img.width === width && img.height === height);\r\n        };\r\n        img.src = URL.createObjectURL(file);\r\n    });\r\n};\r\n\r\nexport const isFileSizeWithinRange = (file, minSizeInMB, maxSizeInMB) => {\r\n    const sizeInMB = file.size / (1024 * 1024);\r\n    return sizeInMB >= minSizeInMB && sizeInMB <= maxSizeInMB;\r\n};\r\n","import React from 'react';\r\n\r\nfunction SubmitButton({ buttonText }) {\r\n  return (\r\n    <button \r\n      type=\"submit\" \r\n      className=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-lg transition duration-200 transform hover:scale-105 focus:outline-none focus:shadow-outline\"\r\n    >\r\n      {buttonText}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport congs1Animation from '../animations/congs.json';\r\n\r\n\r\nfunction SuccessDialog({ isOpen, onClose, points, message }) {\r\n  const LottieAnimation = React.lazy(() => import('lottie-react'));\r\n\r\n  return (\r\n    <Dialog open={isOpen} onClose={onClose}>\r\n      <DialogTitle className=\"text-center\">Success!</DialogTitle>\r\n      <DialogContent className=\"flex flex-col items-center justify-center space-y-4\">\r\n        <React.Suspense fallback={<div>Loading...</div>}>\r\n          <LottieAnimation \r\n            animationData={congs1Animation}\r\n            style={{ width: 'auto', maxWidth: '100%', height: 200 }} \r\n          />\r\n        </React.Suspense>\r\n\r\n        <p>{message}</p>\r\n        <div className=\"text-center animate-pulse\">\r\n        <p className=\"text-yellow-500 font-bold text-xl\">You&apos;ve got</p>\r\n          <span className=\"text-4xl text-yellow-500\">{points} Points!</span>\r\n        </div>\r\n        <p>Your content will be available in the marketplace soon.</p>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SuccessDialog;\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\n\r\nfunction UploadButton({ label, onChange, fileName, accept, required }) {\r\n  return (\r\n    <div>\r\n      {label && <label className=\"block text-gray-700 text-sm font-bold mb-2\">{label}</label>}\r\n      <label className={`w-full flex items-center px-4 py-2 rounded-lg shadow-lg tracking-wide uppercase border cursor-pointer hover:bg-yellow-500 hover:text-white ${fileName ? 'bg-yellow-500 text-white' : 'bg-white text-yellow-500 border-yellow-500'}`}>\r\n        <CloudUploadIcon className=\"mr-2\" />\r\n        {fileName || 'Choose File'}\r\n        <input\r\n          type=\"file\"\r\n          onChange={onChange}\r\n          className=\"hidden\"\r\n          accept={accept}\r\n          required={required}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadButton;\r\n"],"names":["_ref","user","ebookFile","setEbookFile","useState","coverFile","setCoverFile","ebookFileName","setEbookFileName","coverFileName","setCoverFileName","successMessage","setSuccessMessage","pointsAwarded","setPointsAwarded","previewFile","setPreviewFile","previewFileName","setPreviewFileName","title","setTitle","description","setDescription","genres","setGenres","isbn","setIsbn","publicationDate","setPublicationDate","subtitle","setSubtitle","monetization","setMonetization","coverPreview","setCoverPreview","selectedCategories","setSelectedCategories","isSuccessDialogOpen","setIsSuccessDialogOpen","file","setFile","useEffect","handlePageUnload","window","addEventListener","removeEventListener","maxEbookFileSizeMB","firebaseId","auth","currentUser","uid","checkFileExtension","validExtensions","extension","name","split","pop","includes","isFileSizeWithinRange","minSizeInMB","maxSizeInMB","sizeInMB","size","isImageDimensionsValid","async","width","height","Promise","resolve","img","Image","onload","src","URL","createObjectURL","_jsxs","className","children","_jsx","Typography","variant","onSubmit","e","preventDefault","length","Swal","icon","text","showConfirmButton","allowOutsideClick","trim","test","isValidISBN","thumbnailBlob","resizeImage","coverUrl","uploadToAzure","thumbnailUrl","previewUrl","Error","ebookUrl","type","fileData","FormData","append","axios","post","concat","headers","data","azureFileUrl","error","console","url","formData","response","log","encType","value","onChange","target","required","UploadButton","files","resizedImageBlob","resizedFile","File","fileName","accept","Box","component","sx","maxHeight","xs","md","maxWidth","objectFit","alt","Autocomplete","multiple","id","options","handleCategoryChange","event","Array","isArray","renderInput","params","TextField","label","placeholder","renderTags","getTagProps","map","option","index","Chip","maxLength","SubmitButton","buttonText","SuccessDialog","isOpen","onClose","points","message","isThumbnail","arguments","undefined","fetch","sasToken","json","Date","now","blobURL","requestOptions","method","body","ok","pica","Pica","desiredWidth","reject","reader","FileReader","scaleFactor","desiredHeight","canvas","document","createElement","resize","then","result","toBlob","blob","catch","onerror","readAsDataURL","LottieAnimation","React","Dialog","open","DialogTitle","DialogContent","fallback","animationData","congs1Animation","style","DialogActions","Button","onClick","color","CloudUploadIcon"],"sourceRoot":""}