{"version":3,"file":"static/js/7144.6111e39d.chunk.js","mappings":"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","sources":["components/DProfile.js","constants/countries.js","contexts/AuthContext.js","firebase.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport 'tailwindcss/tailwind.css';\r\nimport axios from 'axios';\r\nimport { auth } from \"../firebase\";\r\nimport { countries } from '../constants/countries';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\n\r\nexport default function DProfile() {\r\n\r\n    const { user } = useContext(AuthContext);\r\n    const [userData, setUserData] = useState({});\r\n    const [isGoogleUser, setIsGoogleUser] = useState(false);\r\n\r\n    // Check if the user signed up with Google\r\n    useEffect(() => {\r\n        setIsGoogleUser(user.providerData && user.providerData[0].providerId === 'google.com');\r\n    }, [user]);\r\n\r\n    // Handle image upload to the server\r\n    const handleImageUpload = async (event) => {\r\n        if (event.target.files.length === 0) return;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Your image is being uploaded. Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const formData = new FormData();\r\n        formData.append('image', event.target.files[0]);\r\n\r\n        const firebaseId = auth.currentUser.uid;\r\n\r\n        try {\r\n            const response = await axios.post(`https://yeeplatformbackend.azurewebsites.net/userprofilestore/${firebaseId}`, formData);\r\n            if (response.data?.imageUrl) {\r\n                setUserData(prev => ({ ...prev, profileImage: response.data.imageUrl }));\r\n                Swal.fire('Success', 'Image uploaded successfully!', 'success');\r\n            } else {\r\n                throw new Error('Image upload failed');\r\n            }\r\n        } catch (error) {\r\n            Swal.fire('Oops...', 'Error uploading the image!', 'error');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const firebaseId = auth.currentUser.uid;\r\n        axios.get(`https://yeeplatformbackend.azurewebsites.net/userDetails/${firebaseId}`)\r\n            .then(response => {\r\n                const user = response.data;\r\n                setUserData(user);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching user data:\", error);\r\n            });\r\n    }, []);\r\n\r\n    const updateProfile = async () => {\r\n        Swal.fire({\r\n            title: 'Updating...',\r\n            text: 'Your profile is being updated. Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const firebaseId = auth.currentUser.uid;\r\n\r\n        try {\r\n            const response = await axios.put(`https://yeeplatformbackend.azurewebsites.net/updateaccountinfo/${firebaseId}`, userData);\r\n            if (response.data.success && response.data.message === 'User data updated successfully') {\r\n                Swal.fire('Success', 'Profile updated successfully!', 'success');\r\n            } else {\r\n                throw new Error('Profile update failed');\r\n            }\r\n        } catch (error) {\r\n            Swal.fire('Oops...', 'Error updating your profile!', 'error');\r\n        }\r\n    };\r\n\r\n    const handleChangeEmail = () => {\r\n        // Implement email change functionality here\r\n        Swal.fire('Change Email', 'Email change functionality will be implemented soon.', 'info');\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-8 space-y-4\">\r\n            <h1 className=\"text-xl font-semibold\">Author Profile</h1>\r\n            <div className=\"flex items-center justify-center space-x-4 relative\">\r\n                <img\r\n                    alt=\"Profile Picture\"\r\n                    src={userData.profileImage || \"https://assets-hfbubwfaacbch3e0.z02.azurefd.net/assets/images/Y.webp\"}\r\n                    className=\"w-32 h-32 rounded-full\"\r\n                />\r\n\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"profilePic\"\r\n                    className=\"hidden\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleImageUpload}\r\n                />\r\n\r\n                {/* Overlay icon on the profile picture to indicate it's clickable */}\r\n                <label htmlFor=\"profilePic\" className=\"cursor-pointer absolute bottom-2 right-2 bg-gray-600 bg-opacity-50 rounded-full p-2\">\r\n                    {/* Here, ideally, you would have an SVG icon for a camera */}\r\n                    📷\r\n                </label>\r\n            </div>\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                value={userData.username || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, username: e.target.value }))}\r\n            />\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Age\"\r\n                value={userData.age || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, age: e.target.value }))}\r\n            />\r\n            <textarea\r\n                className=\"w-full p-2 border rounded-md\"\r\n                placeholder=\"Bio\"\r\n                value={userData.bio || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, bio: e.target.value }))}\r\n            />\r\n            <select\r\n                className=\"w-full p-2 border rounded-md\"\r\n                value={userData.country || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, country: e.target.value }))}\r\n            >\r\n                <option value=\"\">Select a country</option>\r\n                {countries.map((c) => (\r\n                    <option key={c} value={c}>\r\n                        {c}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            {!isGoogleUser && (\r\n                <input\r\n                    className=\"w-full p-2 border rounded-md\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={userData.email || \"\"}\r\n                    readOnly\r\n                />\r\n            )}\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Phone\"\r\n                value={userData.phone || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, phone: e.target.value }))}\r\n            />\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Twitter\"\r\n                value={userData.socialLinks?.twitter || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, socialLinks: { ...prev.socialLinks, twitter: e.target.value } }))}\r\n            />\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Instagram\"\r\n                value={userData.socialLinks?.instagram || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, socialLinks: { ...prev.socialLinks, instagram: e.target.value } }))}\r\n            />\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Facebook\"\r\n                value={userData.socialLinks?.facebook || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, socialLinks: { ...prev.socialLinks, facebook: e.target.value } }))}\r\n            />\r\n\r\n            {/* Email field */}\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n                value={userData.email || \"\"}\r\n                readOnly // Make the input field read-only\r\n            />\r\n\r\n            {/* Button to update profile */}\r\n            <button\r\n                className=\"w-full p-2 mt-4 text-white bg-blue-500 rounded-md\"\r\n                onClick={updateProfile}\r\n            >\r\n                Update Profile\r\n            </button>\r\n\r\n            {/* Display the \"Change Email\" button for non-Google users */}\r\n            {!isGoogleUser && (\r\n                <button\r\n                    className=\"w-full p-2 mt-2 text-white bg-yellow-500 rounded-md\"\r\n                    onClick={handleChangeEmail}\r\n                >\r\n                    Change Email\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","export const countries = [\r\n    \"Algeria\", \"Angola\", \"Benin\", \"Botswana\", \"Burkina Faso\", \"Burundi\", \r\n    \"Cabo Verde\", \"Cameroon\", \"Central African Republic\", \"Chad\", \"Comoros\", \r\n    \"Democratic Republic of the Congo\", \"Republic of the Congo\", \"Cote d'Ivoire\", \r\n    \"Djibouti\", \"Egypt\", \"Equatorial Guinea\", \"Eritrea\", \"Eswatini\", \"Ethiopia\", \r\n    \"Gabon\", \"Gambia\", \"Ghana\", \"Guinea\", \"Guinea-Bissau\", \"Kenya\", \"Lesotho\", \r\n    \"Liberia\", \"Libya\", \"Madagascar\", \"Malawi\", \"Mali\", \"Mauritania\", \"Mauritius\", \r\n    \"Morocco\", \"Mozambique\", \"Namibia\", \"Niger\", \"Nigeria\", \"Rwanda\", \r\n    \"Sao Tome and Principe\", \"Senegal\", \"Seychelles\", \"Sierra Leone\", \"Somalia\", \r\n    \"South Africa\", \"South Sudan\", \"Sudan\", \"Tanzania\", \"Togo\", \"Tunisia\", \r\n    \"Uganda\", \"Zambia\", \"Zimbabwe\"\r\n  ];\r\n\r\n\r\n","import React, { useState, useEffect, createContext, useCallback } from \"react\";\r\nimport { debounce } from 'lodash'; \r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return React.useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [isAuthor, setIsAuthor] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isVerified, setIsVerified] = useState(\r\n    () => JSON.parse(localStorage.getItem('isVerified')) || false\r\n  );\r\n\r\n  // Memoized functions\r\n  const checkAuthorStatus = useCallback(debounce(async (currentUser) => {\r\n    if (!currentUser || !currentUser.uid) return;\r\n\r\n    try {\r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/isAuthor/${currentUser.uid}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setIsAuthor(data.isAuthor);\r\n      } else {\r\n        //console.error(\"AuthContext: Failed to check author status. Response status:\", response.status);\r\n      }\r\n    } catch (error) {\r\n      //console.error(\"AuthContext: Error checking author status:\", error);\r\n    }\r\n  }, 15000), []);\r\n\r\n  const login = useCallback(async (email, password) => {\r\n    const { auth, signInWithEmailAndPassword } = await import(\"../firebase\");\r\n    try {\r\n      const result = await signInWithEmailAndPassword(auth, email, password);\r\n      setUser(result.user);\r\n      const verified = result.user?.emailVerified || false;\r\n      setIsVerified(verified);\r\n      localStorage.setItem('isVerified', verified.toString());\r\n    } catch (error) {\r\n      //console.error(\"Error logging in:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const loginWithGoogle = useCallback(async () => {\r\n    const { auth, signInWithPopup, GoogleAuthProvider } = await import(\"../firebase\");\r\n    const provider = new GoogleAuthProvider();\r\n\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      setUser(result.user);\r\n      const verified = result.user?.emailVerified || false;\r\n      setIsVerified(verified);\r\n      localStorage.setItem('isVerified', verified.toString());\r\n    } catch (error) {\r\n      //console.error(\"Error signing in with Google:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const logout = useCallback(async () => {\r\n    const { auth, signOut } = await import(\"../firebase\");\r\n    try {\r\n      await signOut(auth);\r\n      setUser(null);\r\n      setIsAuthor(false);\r\n    } catch (error) {\r\n      //console.error(\"Error logging out:\", error);\r\n    }\r\n  }, []);\r\n\r\n  // Effect to manage authentication state\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const { auth, onAuthStateChanged } = await import(\"../firebase\");\r\n      const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\r\n        setUser(currentUser);\r\n        setLoading(false);\r\n\r\n        if (currentUser) {\r\n          setIsVerified(currentUser.emailVerified);\r\n          localStorage.setItem('isVerified', currentUser.emailVerified.toString());\r\n        }\r\n      });\r\n\r\n      return () => unsubscribe();\r\n    }\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  // Effect to check author status after initial render\r\n  useEffect(() => {\r\n    if (user) {\r\n      checkAuthorStatus(user);\r\n    }\r\n  }, [user, checkAuthorStatus]);\r\n\r\n  // Value provided by context\r\n  const contextValue = {\r\n    user,\r\n    isAuthor,\r\n    loading,\r\n    isVerified,\r\n    login,\r\n    logout,\r\n    loginWithGoogle\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthProvider;","import { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics, isSupported, logEvent } from \"firebase/analytics\";\r\nimport {\r\n  getAuth,\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  sendEmailVerification,\r\n  signOut,\r\n} from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBXS56tIro9cd-Sd4ySn5AwLw3T6cnMHr0\",\r\n  authDomain: \"yeeplatform.firebaseapp.com\",\r\n  projectId: \"yeeplatform\",\r\n  storageBucket: \"yeeplatform.appspot.com\",\r\n  messagingSenderId: \"272587831821\",\r\n  appId: \"1:272587831821:web:b612b427ff43968f33f344\",\r\n  measurementId: \"G-YZV03469PP\"\r\n};\r\n\r\nlet app;\r\nlet auth;\r\nlet analytics;\r\n\r\n// Lazy load Firebase\r\nconst initializeFirebase = async () => {\r\n  if (!app) {\r\n    app = initializeApp(firebaseConfig);\r\n    auth = getAuth(app);\r\n\r\n    const supported = await isSupported();\r\n    if (supported) {\r\n      analytics = getAnalytics(app);\r\n      ////console.log(\"Firebase Analytics initialized.\");\r\n    } else {\r\n      ////console.warn(\"Firebase Analytics is not supported in this environment.\");\r\n    }\r\n  }\r\n};\r\n\r\ninitializeFirebase();\r\n\r\n// Export a function to log events after Firebase Analytics is initialized\r\nexport const logFirebaseEvent = (eventName, eventParams) => {\r\n  if (analytics) {\r\n    logEvent(analytics, eventName, eventParams);\r\n  } else {\r\n    ////console.warn(\"Firebase Analytics is not initialized yet.\");\r\n  }\r\n};\r\n\r\nexport {\r\n  auth,\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  sendEmailVerification,\r\n  signOut,\r\n  logEvent,\r\n  analytics,\r\n};"],"names":["DProfile","_userData$socialLinks","_userData$socialLinks2","_userData$socialLinks3","user","useContext","AuthContext","userData","setUserData","useState","isGoogleUser","setIsGoogleUser","useEffect","providerData","providerId","firebaseId","auth","currentUser","uid","axios","get","concat","then","response","data","catch","error","console","_jsxs","className","children","_jsx","alt","src","profileImage","type","id","accept","onChange","async","event","target","files","length","Swal","title","text","allowOutsideClick","didOpen","formData","FormData","append","_response$data","post","imageUrl","Error","prev","htmlFor","placeholder","value","username","e","age","bio","country","countries","map","c","email","readOnly","phone","socialLinks","twitter","instagram","facebook","onClick","put","success","message","handleChangeEmail","createContext","useAuth","React","AuthProvider","_ref","isAuthor","setIsAuthor","setUser","loading","setLoading","isVerified","setIsVerified","JSON","parse","localStorage","getItem","checkAuthorStatus","useCallback","debounce","fetch","ok","json","login","password","signInWithEmailAndPassword","_result$user","result","verified","emailVerified","setItem","toString","loginWithGoogle","signInWithPopup","GoogleAuthProvider","provider","_result$user2","logout","signOut","onAuthStateChanged","unsubscribe","initializeAuth","contextValue","Provider","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","initializeApp","getAuth","isSupported","getAnalytics","initializeFirebase","logFirebaseEvent","eventName","eventParams","logEvent"],"sourceRoot":""}