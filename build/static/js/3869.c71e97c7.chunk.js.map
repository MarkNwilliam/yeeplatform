{"version":3,"file":"static/js/3869.c71e97c7.chunk.js","mappings":"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","sources":["components/Mybooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material';\r\nimport Swal from 'sweetalert2'; \r\nimport { auth } from '../firebase';\r\n\r\n\r\n\r\nconst Mybooks = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [editedText, setEditedText] = useState('');\r\n  const [selectedDocId, setSelectedDocId] = useState('');\r\n\r\n  \r\n  const fetchBooks = async () => {\r\n    try {\r\n      Swal.showLoading();  // Show the loading indicator\r\n  \r\n      const authorId = auth.currentUser.uid;\r\n      console.log(\"here is the author id\"+authorId)\r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/getAllBooks/${authorId}`);\r\n      const data = await response.json();\r\n      setBooks(data);\r\n  \r\n      Swal.close();  // Close the loading indicator once data is fetched\r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Something went wrong while fetching books!',\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n  \r\n\r\n    fetchBooks();\r\n}, []);\r\n\r\n\r\nconst handleDeleteConfirmation = (book) => {\r\n  Swal.fire({\r\n    title: 'Are you sure?',\r\n    text: \"You won't be able to revert this!\",\r\n    icon: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#3085d6',\r\n    cancelButtonColor: '#d33',\r\n    confirmButtonText: 'Yes, delete it!'\r\n  }).then(async (result) => {\r\n    if (result.isConfirmed) {\r\n      await handleDelete(book._id);\r\n      fetchBooks();\r\n      Swal.fire(\r\n        'Deleted!',\r\n        'Your book has been deleted.',\r\n        'success'\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\n\r\n  const handleClickOpen = (description, docId) => {\r\n    setEditedText(description);\r\n    setSelectedDocId(docId);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  const handleDelete = async (docId) => {\r\n    try {\r\n      Swal.showLoading();  // Show the loading indicator\r\n  \r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/deleteBook/${docId}`, { method: 'DELETE' });\r\n      if(response.status === 200) {\r\n          setBooks(prevBooks => prevBooks.filter(book => book.id !== docId));\r\n      } else {\r\n          throw new Error(\"Failed to delete the book.\");  // Throw an error to be caught below\r\n      }\r\n      Swal.close();  // Close the loading indicator once deletion is complete\r\n  \r\n    } catch(err) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Something went wrong while deleting the book!',\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      Swal.showLoading();  // Show the loading indicator\r\n      console.log(\"Here is book id \"+selectedDocId)\r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/updateDescription`, { \r\n          method: 'PUT',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n              bookId: selectedDocId,\r\n              description: editedText\r\n          })\r\n\r\n         \r\n      });\r\n      if(response.status === 200) {\r\n          setBooks(prevBooks => prevBooks.map(book => book.id === selectedDocId ? {...book, description: editedText} : book));\r\n          setOpen(false);\r\n      } else {\r\n          throw new Error(\"Failed to update the description.\");  // Throw an error to be caught below\r\n      }\r\n      Swal.close();  // Close the loading indicator once update is complete\r\n  \r\n    } catch(err) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Something went wrong while updating the description!',\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" component=\"h2\">\r\n        My Books\r\n      </Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Title</TableCell>\r\n              <TableCell>Subtitle</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Publication Date</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {books.map((book) => (\r\n              <TableRow key={book._id}>\r\n                <TableCell>{book.title}</TableCell>\r\n                <TableCell>{book.subtitle}</TableCell>\r\n                <TableCell>{book.description}</TableCell>\r\n                <TableCell>{book.publishedDate}</TableCell>\r\n                <TableCell>\r\n                  <Button onClick={() => handleClickOpen(book.description, book._id)}>Edit</Button>\r\n                  <Button onClick={() => handleDeleteConfirmation(book)}>Delete</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        {books.length === 0 && (\r\n          <Typography variant=\"h6\" style={{ textAlign: 'center', padding: '20px', color: 'grey' }}>\r\n            No data available.\r\n          </Typography>\r\n        )}\r\n      </TableContainer>\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Edit Book Description</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please edit the description of the selected book.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={editedText}\r\n            onChange={(e) => setEditedText(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mybooks;\r\n\r\n\r\n\r\n"],"names":["Mybooks","books","setBooks","useState","open","setOpen","editedText","setEditedText","selectedDocId","setSelectedDocId","fetchBooks","async","Swal","authorId","auth","currentUser","uid","console","log","response","fetch","concat","data","json","error","icon","title","text","useEffect","handleClose","handleDelete","docId","method","status","Error","prevBooks","filter","book","id","err","_jsxs","children","_jsx","Typography","variant","component","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","subtitle","description","publishedDate","Button","onClick","handleClickOpen","_id","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","handleDeleteConfirmation","length","style","textAlign","padding","color","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","value","onChange","e","target","DialogActions","headers","body","JSON","stringify","bookId"],"sourceRoot":""}