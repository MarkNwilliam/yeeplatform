{"version":3,"file":"static/js/4430.3c7e2a0b.chunk.js","mappings":"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","sources":["components/ChatWidget.js","components/Sharebox.js","pages/EbookReaderPage.js"],"sourcesContent":["import React, { useEffect , useState} from 'react';\nimport { Widget, addResponseMessage, toggleMsgLoader } from '@ryaneewx/react-chat-widget';\nimport '@ryaneewx/react-chat-widget/lib/styles.css';\nimport '../css/chat.css';\n\nconst ChatWidget = ({ handleNewUserMessage }) => {\n\n\nconst [chatWindowOpen, setChatWindowOpen] = useState(true);\n\n\n  const handleToggle = (open) => {\n    setChatWindowOpen((prev) => !prev);\n  };\n\n\n  return (\n    <Widget\n      handleNewUserMessage={handleNewUserMessage}\n      title=\"Ebook Chatbot\"\n      subtitle=\"Ask me anything about this ebook\"\n      profileAvatar=\"https://assets-hfbubwfaacbch3e0.z02.azurefd.net/assets/images/Y.webp\"\n      emojis=\"true\"\n      handleToggle={handleToggle}\n    />\n  );\n};\n\nexport default ChatWidget;\n","import React from 'react';\r\nimport {\r\n  FacebookShareButton,\r\n  TwitterShareButton,\r\n  LinkedinShareButton,\r\n  WhatsappShareButton,\r\n  EmailShareButton,\r\n} from 'react-share';\r\nimport {\r\n  EmailIcon,\r\n  FacebookIcon,\r\n  LinkedinIcon,\r\n  TwitterIcon,\r\n  WhatsappIcon,\r\n} from 'react-share';\r\n\r\nconst ShareBox = ({ shareUrl, selectedText }) => {\r\n  const yeePlatformUrl = 'https://www.yeeplatform.com';\r\n  const hashtags = 'YeePlatform'; // Add more hashtags as needed\r\n\r\n  const shareText = `Check out this quote: \"${selectedText}\" from @YeePlatform! ${yeePlatformUrl} #${hashtags}`;\r\n\r\n  return (\r\n    <div className=\"share-box w-full max-w-md mx-auto p-4\">\r\n      <div className=\"share-header mb-4\">\r\n        <img src=\"https://assets-hfbubwfaacbch3e0.z02.azurefd.net/assets/images/Y.webp\" alt=\"YeePlatform Logo\" className=\"logo w-12 h-auto\" />\r\n        <span className=\"share-title text-lg\">Share this quote with friends:</span>\r\n      </div>\r\n      <div className=\"share-icons flex justify-center\">\r\n        <FacebookShareButton title=\"Test\" url={shareUrl} quote={shareText}>\r\n          <FacebookIcon size={32} round={true} />\r\n        </FacebookShareButton>\r\n        <TwitterShareButton url={shareUrl} title={shareText}>\r\n          <TwitterIcon size={32} round={true} />\r\n        </TwitterShareButton>\r\n        <LinkedinShareButton url={shareUrl} title={shareText}>\r\n          <LinkedinIcon size={32} round={true} />\r\n        </LinkedinShareButton>\r\n        <WhatsappShareButton url={shareUrl} title={shareText}>\r\n          <WhatsappIcon size={32} round={true} />\r\n        </WhatsappShareButton>\r\n        <EmailShareButton url={shareUrl} subject=\"Check out this quote\" body={shareText}>\r\n          <EmailIcon size={32} round={true} />\r\n        </EmailShareButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShareBox;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Viewer, Worker ,ProgressBar, defaultScale, ScrollMode} from '@react-pdf-viewer/core';\r\nimport { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport {auth} from '../firebase.js';\r\nimport { getDocument } from 'pdfjs-dist';\r\nimport { scrollModePlugin } from '@react-pdf-viewer/scroll-mode';\r\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css';\r\nimport '@react-pdf-viewer/core/lib/styles/index.css';\r\nimport { FaSun, FaMoon, FaPlay, FaArrowLeft } from 'react-icons/fa';\r\nimport Tesseract from 'tesseract.js';\r\nimport Swal from 'sweetalert2';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { Helmet } from 'react-helmet';\r\nimport ShareBox from '../components/Sharebox';\r\nimport { analytics, logEvent } from '../firebase.js';\r\nimport '../App.css';\r\nimport { useSpeechSynthesis } from 'react-speech-kit';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport { PdfJs } from '@react-pdf-viewer/core';\r\nimport Alert from '@mui/material/Alert';\r\nimport ChatWidget from '../components/ChatWidget.js';\r\nimport { Widget, addResponseMessage, toggleMsgLoader } from '@ryaneewx/react-chat-widget';\r\nimport axios from 'axios';\r\nimport ReactPlayer from 'react-player';\r\n\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nfunction EbookReaderPage() {\r\n    const { id } = useParams();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [pdfUrl, setPdfUrl] = useState(null);\r\n    const [ebookContent, setEbookContent] = useState(null);\r\n    const [pageNumbers, setPageNumbers] = useState([]);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const { speak, cancel } = useSpeechSynthesis();\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [speechText, setSpeechText] = useState('');\r\n    const [showShareBox, setShowShareBox] = useState(false);\r\n    const [currentPages, setCurrentPages] = useState(1);\r\n    const [isDrawerOpen, setDrawerOpen] = useState(false);\r\n    const [audioUrl, setAudioUrl] = useState(null);\r\n \r\n    const openDrawer = () => {\r\n      setDrawerOpen(true);\r\n    };\r\n  \r\n    const closeDrawer = () => {\r\n      setDrawerOpen(false);\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const isScreenSmall = useMediaQuery('(max-width:626px)');\r\n    const isScreenSmaller = useMediaQuery('(max-width:400px)');\r\n\r\n    const defaultScale = isScreenSmall ? 0.8 : 1; \r\n    const defaultWrap = isScreenSmaller ?  'wrap':'nowrap'; \r\n    const defaultTool = isScreenSmaller ? '100%': 'auto';\r\n    const email = auth.currentUser?.email;\r\n    \r\n    const handleNewUserMessage = (newMessage) => {\r\n      //console.log(`New message incoming! ${newMessage}`);\r\n      \r\n      // Show the loading indicator\r\n      toggleMsgLoader();\r\n  \r\n      fetch('https://yeeplatform.com/server/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          ebook_id: ebookContent._id,\r\n          query: newMessage,\r\n          user_id: email || 'guest',\r\n          title: ebookContent.title ||  'test',\r\n          Description: ebookContent.Description || 'test'\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        //console.log('Response from backend:', data);\r\n        addResponseMessage(data.response);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n        addResponseMessage('Sorry, something went wrong.');\r\n      })\r\n      .finally(() => {\r\n        // Hide the loading indicator\r\n        toggleMsgLoader();\r\n      });\r\n    };\r\n\r\n    function CircularProgressWithLabel(props) {\r\n      return (\r\n        <Box sx={{ position: 'relative', display: 'inline-flex' }}>\r\n          <CircularProgress variant=\"determinate\" {...props} />\r\n          <Box\r\n            sx={{\r\n              top: 0,\r\n              left: 0,\r\n              bottom: 0,\r\n              right: 0,\r\n              position: 'absolute',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\r\n              {`${Math.round(props.value)}%`}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchEbookContent = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/getEbook/${id}`, { cache: 'force-cache' });\r\n                if (!response.ok) {\r\n                    console.error('Response not OK:', response);\r\n                    return;\r\n                }\r\n                const data = await response.json();\r\n                setEbookContent(data);\r\n                //console.log('Data:', data);\r\n\r\n                // Set the PDF URL\r\n                setPdfUrl(data?.ebookUrl);\r\n            } catch (error) {\r\n                console.error('Error fetching eBook content:', error.message);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchEbookContent();\r\n    }, [id]);\r\n    \r\n    const handlePlayClick = async () => {\r\n      const pdf = await getDocument(pdfUrl).promise;\r\n      //console.log(currentPages)\r\n      const page = await pdf.getPage(currentPages+1);\r\n      const textContent = await page.getTextContent();\r\n      const strings = textContent.items.map(item => item.str);\r\n      const text = strings.join(' ');\r\n      //console.log('Text:', text);\r\n      return text;\r\n    };\r\n/*\r\n    const handleSpeak = async () => {\r\n      if (!isLoading && ebookContent) {\r\n        try {\r\n          // If speech synthesis is currently playing, pause it\r\n          if (isPlaying) {\r\n            cancel(); // Stop the speech synthesis\r\n            setIsPlaying(false); // Update the state to indicate that speech synthesis is paused\r\n          } else {\r\n            showLoadingDialog(); // Show loading dialog before starting text extraction\r\n            const voices = window.speechSynthesis.getVoices();\r\n            const pageText = await handlePlayClick(); // Extract text from the current page\r\n            speak({ text: pageText, rate: 0.9 });\r\n            setSpeechText(pageText);\r\n            Swal.close(); // Close loading dialog after text extraction is done\r\n            showPlayingDialog(); // Show playing dialog\r\n            setIsPlaying(true); // Update the state to indicate that speech synthesis is playing\r\n          }\r\n        } catch (error) {\r\n          Swal.close(); // Close loading dialog in case of error\r\n          console.error('Error extracting page text:', error);\r\n          // Handle error\r\n        }\r\n      }\r\n    };\r\n*/\r\n    const handleTTSClick = async () => {\r\n      const pageText = await handlePlayClick();\r\n      // Cancel the currently playing audio\r\n      setAudioUrl(null);\r\n    \r\n      // Ask for language selection\r\n      const { value: language } = await Swal.fire({\r\n        title: 'Select language',\r\n        html: `\r\n        <form id=\"languageForm\" style=\"display: flex; flex-direction: column; align-items: start;\">\r\n            <label><input type=\"radio\" name=\"language\" value=\"eng\"> English</label><br>\r\n            <label><input type=\"radio\" name=\"language\" value=\"swh\"> Swahili</label><br>\r\n            <label><input type=\"radio\" name=\"language\" value=\"spa\"> Spanish</label><br>\r\n            <label><input type=\"radio\" name=\"language\" value=\"arz\"> Arabic</label><br>\r\n            <label><input type=\"radio\" name=\"language\" value=\"fra\"> French</label><br>\r\n            \r\n          </form>\r\n        `,\r\n        focusConfirm: false,\r\n        preConfirm: () => {\r\n          const radios = document.getElementById('languageForm').elements['language'];\r\n          let selectedLanguage;\r\n          for (let i = 0; i < radios.length; i++) {\r\n            if (radios[i].checked) {\r\n              selectedLanguage = radios[i].value;\r\n              break;\r\n            }\r\n          }\r\n          return selectedLanguage;\r\n        }\r\n      });\r\n    \r\n      if (language) {\r\n        // Show loading Swal\r\n        Swal.fire({\r\n          title: 'Loading...',\r\n          allowOutsideClick: false,\r\n          onBeforeOpen: () => {\r\n            Swal.showLoading()\r\n          }\r\n        });\r\n    \r\n        const book_title = ebookContent.title; // Replace with actual book title\r\n        let processedBookTitle = book_title.replace(/\\s+/g, '_').replace(/[^a-zA-Z0-9_]/g, '');\r\n       \r\n        try {\r\n          // Make a POST request to the Flask API\r\n          const response = await axios.post('https://yeeplatform.com/server/synthesize', {\r\n            text: pageText,\r\n            book_title: processedBookTitle,\r\n            page_number: currentPages.toString(),\r\n            language: language\r\n          }, {\r\n            timeout: 6000000 // Wait for 60 seconds\r\n          });\r\n    \r\n          // Assuming the Flask API returns the audio file URL\r\n          const audioUrl = response.data.audio_url; // Adjust based on your API response structure\r\n    \r\n          // Play the audio\r\n          setAudioUrl(\"https://yeeplatform.com/server/\"+audioUrl);\r\n    \r\n          // Close loading Swal\r\n          Swal.close();\r\n        } catch (error) {\r\n          // Close loading Swal and show error Swal\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'Something went wrong!',\r\n            footer: '<a href>Why do I have this issue?</a>'\r\n          });\r\n          console.error('Error playing audio:', error);\r\n        }\r\n      }\r\n    };\r\n  \r\n\r\n    const handlePageChange = async ({ currentPage }) => {\r\n\r\n      setCurrentPages(currentPage);\r\n      \r\n      //console.log('Current pages number:', currentPages);\r\n      //console.log('Current page number:', currentPage);\r\n  \r\n      // Add the current page number to the array\r\n      setPageNumbers([...pageNumbers, currentPage]);\r\n  \r\n      // Calculate the percentage of pages visited\r\n      const uniquePageCount = new Set(pageNumbers).size;\r\n      const percentageVisited = (uniquePageCount / totalPages) * 100;\r\n      //console.log('Percentage of pages visited:', percentageVisited);\r\n  \r\n      // Check if the eBook has been read\r\n  if (percentageVisited >= 30) {\r\n    //console.log('The eBook has been read.');\r\n\r\n    // Call the functions to update viewed books and ebook scores\r\n    await updateViewedBooks();\r\n    await updateEbookScores();\r\n}\r\n      // Create an object to store the eBook ID, page numbers, and unique page count\r\n      const ebookData = {\r\n          id: id,\r\n          pageNumbers: pageNumbers,\r\n          uniquePageCount: uniquePageCount,\r\n          percentageVisited: percentageVisited,\r\n          read: percentageVisited >= 30\r\n      };\r\n  \r\n      // Store the object in local storage\r\n      localStorage.setItem('ebookData', JSON.stringify(ebookData));\r\n  \r\n      // Retrieve and print the eBook data from local storage\r\n      const storedEbookData = JSON.parse(localStorage.getItem('ebookData'));\r\n      //console.log('Stored eBook Data:', storedEbookData);\r\n\r\n  \r\n  };\r\n\r\n  const ebookviewed = ({ doc }) => {\r\n    //console.log('Number of pages:', doc.numPages);\r\n  \r\n    // Store the total number of pages\r\n    setTotalPages(doc.numPages);\r\n  \r\n    // Check if the eBook ID already exists in the local storage\r\n    if (localStorage.getItem('ebookID') !== id) {\r\n      // Store the eBook ID and viewed status in local storage\r\n      localStorage.setItem('ebookID', id);\r\n      localStorage.setItem('viewed', 'true');\r\n  \r\n      // Record the ebook view\r\n      recordEbookView();\r\n    }\r\n  \r\n    // Retrieve and print the eBook ID and viewed status from local storage\r\n    //console.log('eBook ID:', localStorage.getItem('ebookID'));\r\n    //console.log('Viewed:', localStorage.getItem('viewed'));\r\n  }\r\n\r\n    const scrollModePluginInstance = scrollModePlugin();\r\nconst { SwitchScrollModeButton } = scrollModePluginInstance;\r\n\r\n    // Create new plugin instance\r\n    const defaultLayoutPluginInstance = defaultLayoutPlugin({\r\n\r\n      sidebarTabs: (defaultTabs) => [\r\n        // Remove the attachments tab (\\`defaultTabs[2]\\`)\r\n        defaultTabs[0], // Bookmarks tab\r\n        defaultTabs[1], // Thumbnails tab\r\n    ],\r\n        renderToolbar: (Toolbar) => (\r\n          <Toolbar>\r\n          {(props) => {\r\n              const {\r\n                  CurrentPageInput,\r\n                  SwitchTheme,\r\n                  EnterFullScreen,\r\n                  GoToNextPage,\r\n                  GoToPreviousPage,\r\n                  NumberOfPages,\r\n                  SwitchScrollModeMenuItem,\r\n                  ShowSearchPopover,\r\n                  SwitchScrollMode,\r\n                  Zoom,\r\n                  ZoomIn,\r\n                  ZoomOut,\r\n              } = props;\r\n              return (\r\n                <div\r\n              \r\n                style={{\r\n                    alignItems: 'center',\r\n      display: 'flex',\r\n      flexWrap: {defaultWrap}, // Allow the items to wrap as needed\r\n      justifyContent: 'space-between', // Distribute items evenly\r\n      width: '100%',\r\n      height: 'auto', // Adjust height automatically\r\n      backgroundColor: '#ffde5a',\r\n      padding: '10px', // Add some padding\r\n                }}\r\n            >\r\n\r\n<div style={{ padding: '0px 2px' }}>\r\n                    <button onClick={() => navigate(`/ebooks/${id}`)}><FaArrowLeft /></button>\r\n                </div>\r\n\r\n\r\n                      <div style={{ padding: '0px 2px' }}>\r\n                          <ShowSearchPopover />\r\n                      </div>\r\n                      <div style={{ padding: '0px 2px' }}>\r\n                          <ZoomOut />\r\n                      </div>\r\n                      <div style={{ padding: '0px 2px' }}>\r\n                          <Zoom />\r\n                      </div>\r\n                      <div style={{ padding: '0px 2px' }}>\r\n                          <ZoomIn />\r\n                      </div>\r\n                     <div style={{ padding: '0px 2px', marginLeft: 'auto' }}>\r\n                        <GoToPreviousPage />\r\n                    </div>\r\n                    <div style={{ display: 'flex', alignItems: 'center', padding: '0px 2px' }}>\r\n    <CurrentPageInput /> / <NumberOfPages />\r\n</div>\r\n                    <div style={{ padding: '0px 2px' }}>\r\n                        <GoToNextPage />\r\n                    </div>\r\n\r\n                    <div style={{ padding: '0px 2px' }}>\r\n    <button onClick={handleTTSClick}><FaPlay /></button>\r\n  </div>\r\n\r\n  {!isScreenSmall && (\r\n    <>\r\n\r\n  <div style={{ padding: '0px 2px', marginLeft: 'auto' }}>\r\n                          <EnterFullScreen />\r\n                      </div>\r\n                      <div style={{ padding: '0px 2px', marginLeft: 'auto' }}>\r\n                          <SwitchTheme />\r\n                      </div>\r\n                      <div style={{ padding: '0px 2px' }}>\r\n                <SwitchScrollModeButton mode={ScrollMode.Vertical} />\r\n            </div>\r\n            <div style={{ padding: '0px 2px' }}>\r\n                <SwitchScrollModeButton mode={ScrollMode.Horizontal} />\r\n            </div>\r\n            <div style={{ padding: '0px 2px' }}>\r\n                <SwitchScrollModeButton mode={ScrollMode.Wrapped} />\r\n            </div>\r\n            <div style={{ padding: '0px 2px' }}>\r\n                <SwitchScrollModeButton mode={ScrollMode.Page} />\r\n            </div>\r\n            </>\r\n    )}\r\n\r\n  {isScreenSmall && (\r\n        <>\r\n  <Button onClick={openDrawer}>Options</Button>\r\n      <Drawer anchor=\"right\" open={isDrawerOpen} onClose={closeDrawer}>\r\n                      <div style={{ padding: '0px 2px', marginLeft: 'auto' }}>\r\n                          <EnterFullScreen />\r\n                      </div>\r\n                      <div style={{ padding: '0px 2px', marginLeft: 'auto' }}>\r\n                          <SwitchTheme />\r\n                      </div>\r\n                      <div style={{ padding: '0px 2px' }}>\r\n                <SwitchScrollModeButton mode={ScrollMode.Vertical} />\r\n            </div>\r\n            <div style={{ padding: '0px 2px' }}>\r\n                <SwitchScrollModeButton mode={ScrollMode.Horizontal} />\r\n            </div>\r\n            <div style={{ padding: '0px 2px' }}>\r\n                <SwitchScrollModeButton mode={ScrollMode.Wrapped} />\r\n            </div>\r\n            <div style={{ padding: '0px 2px' }}>\r\n                <SwitchScrollModeButton mode={ScrollMode.Page} />\r\n            </div>\r\n            </Drawer>\r\n            </>\r\n      )}\r\n                      </div>\r\n              );\r\n          }}\r\n      </Toolbar>\r\n        ),\r\n    });\r\n\r\n    const showLoadingDialog = () => {\r\n      Swal.fire({\r\n        title: 'Loading',\r\n        showClass: {\r\n          popup: `\r\n            animate__animated\r\n            animate__fadeInUp\r\n            animate__faster\r\n          `\r\n        },\r\n        hideClass: {\r\n          popup: `\r\n            animate__animated\r\n            animate__fadeOutDown\r\n            animate__faster\r\n          `\r\n        },\r\n        html: 'Processing your request...',\r\n        allowOutsideClick: false,\r\n        showConfirmButton: false,\r\n        onBeforeOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n        \r\n      });\r\n    };\r\n\r\n    const showPlayingDialog = () => {\r\n      setIsPlaying(true);\r\n      Swal.fire({\r\n        title: 'Playing',\r\n        html: 'Text is being played...',\r\n        showCancelButton: true,\r\n        showConfirmButton: false,\r\n        cancelButtonText: 'Stop',\r\n        allowOutsideClick: false,\r\n        cancelButtonClass: '#ffff00',\r\n        didClose: () => {\r\n          setIsPlaying(false);\r\n        },\r\n      }).then((result) => {\r\n        // If the user clicks the \"Stop\" button\r\n        if (result.dismiss === Swal.DismissReason.cancel) {\r\n          cancel(); // Stop the speech synthesis\r\n        }\r\n      });\r\n    };\r\n\r\n    // Function to send a POST request to update viewed books\r\nconst updateViewedBooks = async () => {\r\n  const storedEbookData = JSON.parse(localStorage.getItem('ebookData'));\r\n\r\n  if (storedEbookData && storedEbookData.read) {\r\n    try {\r\n      const response = await fetch('https://yeeplatformbackend.azurewebsites.net/updateViewedBooks', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          userId: auth.currentUser.uid,\r\n          bookId: storedEbookData.id,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      //console.log(data); // Log the response from the backend\r\n    } catch (error) {\r\n      console.error('Error updating viewed books:', error);\r\n    }\r\n  }\r\n};\r\n\r\n// Function to send a POST request to update ebook scores\r\nconst updateEbookScores = async () => {\r\n  const storedEbookData = JSON.parse(localStorage.getItem('ebookData'));\r\n\r\n  if (storedEbookData) {\r\n    try {\r\n      const response = await fetch('https://yeeplatformbackend.azurewebsites.net/updateEbookScores', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          userId: auth.currentUser.uid,\r\n          bookId: storedEbookData.id,\r\n          score: storedEbookData.percentageVisited,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      //console.log(data); // Log the response from the backend\r\n    } catch (error) {\r\n      console.error('Error updating ebook scores:', error);\r\n    }\r\n  }\r\n};\r\n\r\nconst recordEbookView = async () => {\r\n  try {\r\n    // Get the eBook ID and viewed status from local storage\r\n    const ebookId = localStorage.getItem('ebookID');\r\n    const viewed = localStorage.getItem('viewed');\r\n\r\n    const response = await fetch('https://yeeplatformbackend.azurewebsites.net/recordEbookView', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        userId: auth.currentUser.uid,\r\n        ebookId: ebookId,\r\n        //viewed: viewed,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    //console.log(data); // Log the response from the backend\r\n  } catch (error) {\r\n    console.error('Error recording ebook view:', error);\r\n  }\r\n};\r\n    /*\r\n\r\n    const handleSpeak = async () => {\r\n      if (!isLoading && ebookContent) {\r\n        try {\r\n          // If speech synthesis is currently playing, pause it\r\n          if (isPlaying) {\r\n            cancel(); // Stop the speech synthesis\r\n            setIsPlaying(false); // Update the state to indicate that speech synthesis is paused\r\n          } else {\r\n            showLoadingDialog(); // Show loading dialog before starting text extraction\r\n            const voices = window.speechSynthesis.getVoices();\r\n            const pageText = await extractPageText(currentPage); // Extract text from the current page\r\n            speak({ text: pageText, rate: 0.9 });\r\n            setSpeechText(pageText);\r\n            Swal.close(); // Close loading dialog after text extraction is done\r\n            showPlayingDialog(); // Show playing dialog\r\n            setIsPlaying(true); // Update the state to indicate that speech synthesis is playing\r\n          }\r\n        } catch (error) {\r\n          Swal.close(); // Close loading dialog in case of error\r\n          console.error('Error extracting page text:', error);\r\n          // Handle error\r\n        }\r\n      }\r\n    };\r\n*/\r\n\r\nfunction blobUrlToBase64(url) {\r\n  return fetch(url)\r\n    .then(response => response.blob())\r\n    .then(blob => {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result);\r\n        reader.onerror = reject;\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    });\r\n}\r\n\r\n    return (\r\n        <div style={{ height: '100vh' , width: '100%'}}>\r\n\r\n          \r\n\r\n{ebookContent && (\r\n        <Helmet>\r\n          <title>{ebookContent?.title || 'Ebook Reader - Yee FM'}</title>\r\n          <meta\r\n            name=\"description\"\r\n            content={ebookContent?.description || 'Read your favorite ebooks on Yee FM.'}\r\n          />\r\n          <meta name=\"keywords\" content=\"Yee FM, ebooks, reading, literature, digital library\" />\r\n          <link\r\n            rel=\"icon\"\r\n            href={\r\n              ebookContent?.coverImage ||\r\n              ebookContent?.coverimage ||\r\n              'https://assets-hfbubwfaacbch3e0.z02.azurefd.net/assets/images/Y.webp'\r\n            }\r\n          />\r\n          <meta property=\"og:title\" content={ebookContent?.title || 'Ebook Reader - Yee FM'} />\r\n          <meta\r\n            property=\"og:description\"\r\n            content={ebookContent?.description || 'Read your favorite ebooks on Yee FM.'}\r\n          />\r\n          <meta\r\n            property=\"og:image\"\r\n            content={\r\n              ebookContent?.coverImage ||\r\n              ebookContent?.coverimage ||\r\n              'https://assets-hfbubwfaacbch3e0.z02.azurefd.net/assets/images/Y.webp'\r\n            }\r\n          />\r\n          <meta property=\"og:type\" content=\"book\" />\r\n          <meta property=\"og:url\" content={window.location.href} />\r\n        </Helmet>\r\n      )}\r\n\r\n<style jsx>{`\r\n      @media only screen and (max-width: 500px) {\r\n        /* Styles for mobile devices */\r\n        .pdf-viewer {\r\n          width: 100%;\r\n          height: auto;\r\n        }\r\n      }\r\n\r\n      .rpv-core__viewer--loading .rpv-core__viewer-document {\r\n        visibility: hidden;\r\n      }\r\n    `}</style>\r\n\r\n{audioUrl && (\r\n  <Draggable>\r\n    <div style={{\r\n      position: 'absolute',\r\n      bottom: '10px',\r\n      left: '50%',\r\n      transform: 'translateX(-50%)',\r\n      zIndex: 1000,\r\n      backgroundColor: 'transparent',\r\n      padding: '10px',\r\n      borderRadius: '10px',\r\n      boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)'\r\n    }}>\r\n      <ReactPlayer url={audioUrl} controls playing />\r\n      <button onClick={() => setAudioUrl(null)} style={{\r\n        marginTop: '10px',\r\n        backgroundColor: '#f44336',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        padding: '5px 10px',\r\n        cursor: 'pointer'\r\n      }}>Cancel</button>\r\n    </div>\r\n  </Draggable>\r\n)}\r\n\r\n\r\n            {isLoading ? (\r\n                <div>Loading...</div>\r\n            ) : pdfUrl ? (\r\n                <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@3.11.174/build/pdf.worker.min.js\">\r\n                    <Viewer \r\n                    transformGetDocumentParams={(options) =>\r\n                      Object.assign({}, options, {\r\n                        url: pdfUrl,\r\n                          disableRange: false,\r\n                          disableStream: false,\r\n                          rangeChunkSize: 65536,\r\n                          disableAutoFetch: false, // Enable pre-fetching of PDF file data\r\n                          disableFontFace: true,\r\n        \r\n                      \r\n                      })\r\n                    }\r\n  scrollMode={ScrollMode.Page}\r\ndefaultScale={defaultScale}\r\nonPageChange={handlePageChange}\r\nonDocumentLoad={ebookviewed}\r\n\r\nrenderLoader={(percentages) => (\r\n  <div>\r\n    <h2 className=\"text-yellow-500 font-bold\">Please wait, it&apos;s coming...</h2>\r\n  <div style={{ width: '100%' }}>\r\n    \r\n\r\n      <CircularProgressWithLabel value={Math.round(percentages)} />\r\n  </div>\r\n  </div>\r\n)}\r\n                        plugins={[\r\n                            // Register plugins\r\n                            defaultLayoutPluginInstance, scrollModePluginInstance\r\n                        ]}\r\n                    />\r\n                </Worker>\r\n            ) : (\r\n              <>\r\n              <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n              <Alert severity=\"error\">No PDF found.</Alert>\r\n          </div>\r\n</>\r\n            )}\r\n\r\n<ChatWidget handleNewUserMessage={handleNewUserMessage} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EbookReaderPage;\r\n"],"names":["_ref","handleNewUserMessage","chatWindowOpen","setChatWindowOpen","useState","_jsx","Widget","title","subtitle","profileAvatar","emojis","handleToggle","open","prev","shareUrl","selectedText","shareText","concat","_jsxs","className","children","src","alt","FacebookShareButton","url","quote","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","LinkedinShareButton","LinkedinIcon","WhatsappShareButton","WhatsappIcon","EmailShareButton","subject","body","EmailIcon","_auth$currentUser","id","useParams","isLoading","setIsLoading","pdfUrl","setPdfUrl","ebookContent","setEbookContent","pageNumbers","setPageNumbers","totalPages","setTotalPages","speak","cancel","useSpeechSynthesis","isPlaying","setIsPlaying","speechText","setSpeechText","showShareBox","setShowShareBox","currentPages","setCurrentPages","isDrawerOpen","setDrawerOpen","audioUrl","setAudioUrl","openDrawer","closeDrawer","navigate","useNavigate","isScreenSmall","useMediaQuery","isScreenSmaller","defaultScale","defaultWrap","email","auth","currentUser","CircularProgressWithLabel","props","Box","sx","position","display","CircularProgress","variant","top","left","bottom","right","alignItems","justifyContent","Typography","component","color","Math","value","useEffect","async","response","fetch","cache","ok","console","error","data","json","ebookUrl","message","fetchEbookContent","handleTTSClick","pageText","pdf","getDocument","promise","page","getPage","getTextContent","items","map","item","str","join","handlePlayClick","language","Swal","html","focusConfirm","preConfirm","radios","document","getElementById","elements","selectedLanguage","i","length","checked","allowOutsideClick","onBeforeOpen","processedBookTitle","replace","axios","post","text","book_title","page_number","toString","timeout","audio_url","icon","footer","scrollModePluginInstance","scrollModePlugin","SwitchScrollModeButton","defaultLayoutPluginInstance","defaultLayoutPlugin","sidebarTabs","defaultTabs","renderToolbar","Toolbar","CurrentPageInput","SwitchTheme","EnterFullScreen","GoToNextPage","GoToPreviousPage","NumberOfPages","SwitchScrollModeMenuItem","ShowSearchPopover","SwitchScrollMode","Zoom","ZoomIn","ZoomOut","style","flexWrap","width","height","backgroundColor","padding","onClick","FaArrowLeft","marginLeft","FaPlay","_Fragment","mode","ScrollMode","Vertical","Horizontal","Wrapped","Page","Button","Drawer","anchor","onClose","updateViewedBooks","storedEbookData","JSON","parse","localStorage","getItem","read","method","headers","stringify","userId","uid","bookId","updateEbookScores","score","percentageVisited","recordEbookView","ebookId","Helmet","name","content","description","rel","href","coverImage","coverimage","property","window","location","jsx","Draggable","transform","zIndex","borderRadius","boxShadow","ReactPlayer","controls","playing","marginTop","border","cursor","Worker","workerUrl","Viewer","transformGetDocumentParams","options","Object","assign","disableRange","disableStream","rangeChunkSize","disableAutoFetch","disableFontFace","scrollMode","onPageChange","currentPage","uniquePageCount","Set","ebookData","setItem","onDocumentLoad","_ref2","doc","numPages","renderLoader","percentages","plugins","Alert","severity","ChatWidget","newMessage","toggleMsgLoader","ebook_id","_id","query","user_id","Description","then","addResponseMessage","catch","finally"],"sourceRoot":""}