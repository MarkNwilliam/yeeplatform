{"version":3,"file":"static/js/8153.f53fe5ec.chunk.js","mappings":"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","sources":["components/DAudio.js","components/DAudioChapter.js","components/DNews.js","components/DNft.js","components/DProfile.js","components/DStats.js","components/DSupport.js","components/DWrite.js","components/MyAudios.js","components/MyChapters.js","components/Mybooks.js","constants/countries.js","contexts/AuthContext.js","subcomponents/Dbar.js","subcomponents/Dlist.js","pages/Dashboard.js","subcomponents/Dbarlist.js"],"sourcesContent":["import React, { useState , useEffect} from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { auth } from \"../firebase\";\r\nimport axios from 'axios';\r\nimport {\r\n\r\n  TextField,\r\n  Typography,\r\n \r\n} from \"@mui/material\";\r\n\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport SuccessDialog from \"../subcomponents/SuccessDialog\";\r\nimport SubmitButton from \"../subcomponents/SubmitButton\";\r\nimport UploadButton from \"../subcomponents/UploadButton\";\r\nimport uploadToAzure from '../functions/azureUpload';\r\nimport { resizeImage } from '../functions/imageUtils';\r\n\r\nconst maxDescriptionLength = 500; // Maximum length for description\r\nconst maxAudiobookFileSizeMB = 300;\r\nconst minTitleLength = 3; // Minimum length for title\r\nconst maxTitleLength = 100; // Maximum length for title\r\nconst minGenresRequired = 1;\r\n\r\nfunction DAudio() {\r\n  const africanLanguages = [\r\n    { code: \"eng\", label: \"English\" },\r\n    { code: \"French\", label: \"French\" },\r\n    { code: \"swahili\", label: \"Swahili\" },\r\n    { code: \"amharic\", label: \"Amharic\" },\r\n    { code: \"yoruba\", label: \"Yoruba\" },\r\n    { code: \"oromo\", label: \"Oromo\" },\r\n    { code: \"igbo\", label: \"Igbo\" },\r\n    { code: \"zulu\", label: \"Zulu\" },\r\n    { code: \"shona\", label: \"Shona\" },\r\n    { code: \"xhosa\", label: \"Xhosa\" },\r\n    { code: \"hausa\", label: \"Hausa\" },\r\n    { code: \"fulani\", label: \"Fulani\" },\r\n  ];\r\n\r\n  const categories = [\r\n    \"Fiction\",\r\n    \"Nonfiction\",\r\n    \"Science Fiction\",\r\n    \"Romance\",\r\n    \"Mystery/Thriller\",\r\n    \"Fantasy\",\r\n    \"Biography\",\r\n    \"History\",\r\n    \"Business/Economics\",\r\n    \"Self-help\",\r\n    \"Health/Fitness\",\r\n    \"Cooking/Food\",\r\n    \"Travel\",\r\n    \"Technology\",\r\n  ];\r\n\r\n  const targetAudiences = [\"Children\", \"Young Adult\", \"Adult\", \"Senior\"];\r\n\r\n  const [audiobookFile, setAudiobookFile] = useState(null);\r\n  const [coverFile, setCoverFile] = useState(null);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [genres, setGenres] = useState([]);\r\n  const [language, setLanguage] = useState('');\r\n  const [isbn, setIsbn] = useState('');\r\n  const [publicationDate, setPublicationDate] = useState('');\r\n  const [successDialogOpen, setSuccessDialogOpen] = useState(false);\r\n  const [selectedCoverFileName, setSelectedCoverFileName] = useState(\"\");\r\n  const [selectedAudioFileName, setSelectedAudioFileName] = useState(\"\");\r\n  const [Duration, setDuration] = useState(\"\");\r\n  const [monetization, setMonetization] = useState('free');\r\n  const [imagePreviewUrl, setImagePreviewUrl] = useState(\"\");\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [isSuccessDialogOpen, setIsSuccessDialogOpen] = useState(false);\r\n  const LottieAnimation = React.lazy(() => import('lottie-react'));\r\n\r\n\r\n  const firebaseId = auth.currentUser.uid;\r\n\r\n  useEffect(() => {\r\n    const handlePageUnload = () => {\r\n      if (isSuccessDialogOpen) {\r\n        setIsSuccessDialogOpen(false);\r\n      }\r\n    };\r\n\r\n    // Register the event listener\r\n    window.addEventListener('beforeunload', handlePageUnload);\r\n\r\n    // Cleanup function to remove the event listener\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handlePageUnload);\r\n    };\r\n  }, [isSuccessDialogOpen]);\r\n\r\n\r\n  const resetForm = () => {\r\n    setAudiobookFile(null);\r\n    setCoverFile(null);\r\n    setTitle('');\r\n    setDescription('');\r\n    setGenres([]);\r\n    setLanguage('');\r\n    setIsbn('');\r\n    setDuration('')\r\n    setPublicationDate('');\r\n    setSelectedCoverFileName(\"\");\r\n    setSelectedAudioFileName(\"\");\r\n    setMonetization('free');\r\n    setImagePreviewUrl(\"\")\r\n  };\r\n\r\n\r\n  const getAudioDuration = (audioFile) => {\r\n    const objectURL = URL.createObjectURL(audioFile);\r\n    let audio = new Audio(objectURL);\r\n    \r\n    audio.onloadedmetadata = () => {\r\n      setDuration(Math.floor(audio.duration));\r\n      URL.revokeObjectURL(objectURL);\r\n    };\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const isMonetized = monetization === 'notfree';\r\n    if (description.length > maxDescriptionLength) {\r\n      Swal.fire('Error', `Description should not exceed ${maxDescriptionLength} characters.`, 'error');\r\n      return;\r\n    }\r\n\r\n    if (audiobookFile && audiobookFile.size > maxAudiobookFileSizeMB * 1024 * 1024) {\r\n      Swal.fire('Error', `Audiobook file size should not exceed ${maxAudiobookFileSizeMB} MB.`, 'error');\r\n      return;\r\n    }\r\n\r\n    if (title.length < minTitleLength || title.length > maxTitleLength) {\r\n      Swal.fire('Error', `Title should be between ${minTitleLength} and ${maxTitleLength} characters.`, 'error');\r\n      return;\r\n    }\r\n    if (!language) {\r\n      Swal.fire('Error', 'Please select a language.', 'error');\r\n      return;\r\n    }\r\n    const today = new Date();\r\n    const selectedDate = new Date(publicationDate);\r\n    \r\n    if (selectedDate > today) {\r\n      Swal.fire('Error', 'Publication date cannot be in the future.', 'error');\r\n      return;\r\n    }\r\n            \r\n    if (genres.length < minGenresRequired) {\r\n      Swal.fire('Error', `Please select at least ${minGenresRequired} genre(s).`, 'error');\r\n      return;\r\n    }\r\n    \r\n\r\n    // Initial Swal progress bar\r\n    Swal.fire({\r\n      title: 'Uploading...',\r\n      html: 'Progress ....',\r\n      allowEscapeKey: false,\r\n      allowOutsideClick: false,\r\n      showCancelButton: false,\r\n      showConfirmButton: false,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n      onOpen: () => {\r\n        // Progress bar container\r\n        const container = Swal.getHtmlContainer();\r\n        const progress = document.createElement('div');\r\n        progress.setAttribute('class', 'sweetalert2-progress-steps');\r\n        container.appendChild(progress);\r\n      }\r\n    });\r\n\r\n    const handleProgressUpdate = (progress) => {\r\n      const content = Swal.getContent();\r\n      if (content) {\r\n        const b = content.querySelector('b');\r\n        if (b) {\r\n          b.textContent = progress;\r\n        }\r\n      }\r\n    };\r\n\r\n    try {\r\n      let audioUrl, coverUrl;\r\n\r\n      let thumbnailUrl;\r\n\r\n      if (coverFile) {\r\n        const resizedImageBlob = await resizeImage(coverFile, 128); // Example size\r\n   \r\n        thumbnailUrl = await uploadToAzure(resizedImageBlob, true);\r\n        console.log(\"Here is my thumbnail url \"+thumbnailUrl)\r\n      }\r\n  \r\n      if (audiobookFile) {\r\n        audioUrl = await uploadToAzure(audiobookFile)\r\n      }\r\n  \r\n      if (coverFile) {\r\n        console.log(\"Uploading coverFile: \", coverFile);\r\n        coverUrl = await uploadToAzure(coverFile)        \r\n      \r\n        console.log(\"This is my coverurl \"+coverUrl)\r\n      }\r\n      if (description.length > maxDescriptionLength) {\r\n        Swal.fire('Error', `Description should not exceed ${maxDescriptionLength} characters.`, 'error');\r\n        return;\r\n      }\r\n      \r\n      if (!audioUrl || !coverUrl) {\r\n        throw new Error('Please select both audio and cover files.');\r\n      }\r\n\r\n    \r\n  const data = {\r\n      \r\n        title: title,\r\n        description: description,\r\n        genres: genres.join(\", \"),\r\n        categories: genres.join(\", \"),\r\n        language: language,\r\n        isbn: isbn,\r\n        ebookUrl: audioUrl,\r\n        coverUrl: coverUrl,\r\n        thumbnailUrl:  thumbnailUrl,\r\n        publicationDate: publicationDate,\r\n        author_platform_id: firebaseId,\r\n        Duration: Duration,\r\n        monetization: isMonetized,\r\n        audioUrl: audioUrl,\r\n      };\r\n\r\n      const response = await axios.post(`https://yeeplatformbackend.azurewebsites.net/audiobookupload/${firebaseId}`, data);\r\n\r\n      Swal.close();\r\n\r\n      if (response.status === 200) {\r\n    resetForm()\r\n       //Swal.fire('Success!', 'Ebook uploaded successfully!', 'success');\r\n       setIsSuccessDialogOpen(true);\r\n      } else {\r\n        throw new Error('Error while sending data to the server.');\r\n      }\r\n\r\n    } catch (error) {\r\n      Swal.fire('Error', 'Error uploading the audio. Please try again.', 'error');\r\n      console.error('Error uploading the audio:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleCloseSuccessDialog = () => {\r\n    console.log(\"Closing success dialog\");\r\n    setIsSuccessDialogOpen(false);\r\n  };\r\n  \r\n\r\n  const isFileSizeValid = (file) => {\r\n    const maxSizeInMB = 5; // 5MB limit\r\n    const sizeInMB = file.size / 1024 / 1024;\r\n    return sizeInMB <= maxSizeInMB;\r\n  };\r\n  \r\n  const isImageDimensionsValid = (file) => {\r\n    return new Promise((resolve) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        resolve(img.width === 512 && img.height === 800);\r\n      };\r\n      img.src = URL.createObjectURL(file);\r\n    });\r\n  };\r\n  \r\n\r\n  const handleCoverChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    console.log(\"Handle Cover Change Function Called\");\r\n    if (file) {\r\n      if (!isFileSizeValid(file)) {\r\n\r\n        try{\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'Image size should not exceed 5MB.',\r\n        }).then(() => {\r\n          // Close the SweetAlert2 and reset state\r\n          setCoverFile(null);\r\n          setSelectedCoverFileName(\"\");\r\n          setImagePreviewUrl(\"\");\r\n        });\r\n      }\r\n      catch(error){\r\n        console.log(error)\r\n      }\r\n        return;\r\n      }\r\n  \r\n      const dimensionsValid = await isImageDimensionsValid(file);\r\n      if (!dimensionsValid) {\r\n        try{\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'Image dimensions should be exactly 512x800 pixels.',\r\n          timer: 3000,\r\n        }).then(() => {\r\n          // Close the SweetAlert2 and reset state\r\n          setCoverFile(null);\r\n          setSelectedCoverFileName(\"\");\r\n          setImagePreviewUrl(\"\");\r\n        });\r\n      }\r\n      catch(error){\r\n        console.log(error)\r\n      }\r\n        return;\r\n      }\r\n  \r\n      setCoverFile(file);\r\n      setSelectedCoverFileName(file.name);\r\n      setImagePreviewUrl(URL.createObjectURL(file));\r\n\r\n      console.log(\"Function Execution Completed\");\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"p-8 bg-white shadow-md rounded-lg max-w-md mx-auto\">\r\n      <Typography variant=\"h4\" className=\"text-center mb-6\">Upload your Audiobook</Typography>\r\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">Title:</label>\r\n          <TextField fullWidth variant=\"outlined\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n  <label className=\"block text-gray-700 text-sm font-bold mb-2\">Description:</label>\r\n  <TextField\r\n    fullWidth\r\n    multiline\r\n    rows={4}\r\n    variant=\"outlined\"\r\n    value={description}\r\n    onChange={(e) => setDescription(e.target.value)}\r\n    required\r\n    helperText={`${description.length}/${maxDescriptionLength}`}\r\n  />\r\n</div>\r\n\r\n\r\n        <div className=\"mb-4\">\r\n <UploadButton\r\n  label=\"Upload Cover Image:\"\r\n  onChange={handleCoverChange}\r\n  fileName={selectedCoverFileName}\r\n  accept=\".jpg, .jpeg, .png\"\r\n  required={true}\r\n/>\r\n{imagePreviewUrl && (\r\n  <div className=\"image-preview\">\r\n    <img src={imagePreviewUrl} alt=\"Cover Preview\" style={{ maxWidth: '200px', maxHeight: '200px' }} />\r\n  </div>\r\n)}\r\n\r\n</div>\r\n\r\n\r\n        <div className=\"mb-4\">\r\n          <Autocomplete\r\n            multiple\r\n            options={categories}\r\n            value={genres}\r\n            onChange={(event, newValue) => setGenres(newValue)}\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" label=\"Genres\" />}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <Autocomplete\r\n            options={africanLanguages.map((option) => option.label)}\r\n            value={language}\r\n            onChange={(event, newValue) => setLanguage(newValue)}\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" label=\"Language\" />}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">ISBN:</label>\r\n          <TextField fullWidth variant=\"outlined\" value={isbn} onChange={(e) => setIsbn(e.target.value)}/>\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n  <label className=\"block text-gray-700 text-sm font-bold mb-2\">Monetization:</label>\r\n  <select\r\n    value={monetization}\r\n    onChange={(e) => setMonetization(e.target.value)}\r\n    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n  >\r\n    <option value=\"free\">Free</option>\r\n    <option value=\"notfree\">Not Free</option>\r\n  </select>\r\n</div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">Publication Date:</label>\r\n          <TextField type=\"date\" fullWidth variant=\"outlined\" value={publicationDate} onChange={(e) => setPublicationDate(e.target.value)} required />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n        <UploadButton\r\n  label=\"Upload Audio File:\"\r\n  onChange={(e) => {\r\n    setAudiobookFile(e.target.files[0]);\r\n    setSelectedAudioFileName(e.target.files[0]?.name || \"\");\r\n    getAudioDuration(e.target.files[0]);\r\n  }}\r\n  fileName={selectedAudioFileName}\r\n  accept=\".mp3, .wav\"\r\n  required={true}\r\n/>\r\n\r\n           <div className=\"text-sm text-gray-600\">\r\n    Maximum file size: {maxAudiobookFileSizeMB} MB\r\n  </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-center\">\r\n        <SubmitButton buttonText=\"Upload\" />\r\n        </div>\r\n      </form>\r\n      {isSuccessDialogOpen && (\r\n        <SuccessDialog isOpen={isSuccessDialogOpen}\r\n        onClose={handleCloseSuccessDialog}\r\n         points={100} \r\n         message=\"Well done! You're a real YeePlatform author.\" />\r\n)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DAudio;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'; // Importing sweetalert2\r\nimport { auth } from \"../firebase\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Box,\r\n\r\n  Chip,\r\n} from \"@mui/material\";\r\nimport SuccessDialog from '../subcomponents/SuccessDialog';\r\nimport uploadToAzure from '../functions/azureUpload';\r\nimport { resizeImage } from '../functions/imageUtils';\r\nimport UploadButton from '../subcomponents/UploadButton';\r\nimport SubmitButton from '../subcomponents/SubmitButton';\r\nfunction DAudioChapter() {\r\n  const LottieAnimation = React.lazy(() => import('lottie-react'));\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [coverPreviewUrl, setCoverPreviewUrl] = useState(\"\");\r\n  const [monetization, setMonetization] = useState('free');\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [selectedCoverFileName, setSelectedCoverFileName] = useState(\"\");\r\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\r\n  const [isSuccessDialogOpen, setIsSuccessDialogOpen] = useState(false);\r\n  const [imagePreviewUrl, setImagePreviewUrl] = useState(\"\");\r\n  const [showSuccessDialog, setShowSuccessDialog] = useState(false);\r\n  const [successDialogPoints, setSuccessDialogPoints] = useState(0);\r\n  const [successDialogMessage, setSuccessDialogMessage] = useState('');\r\n  const [audioDetails, setAudioDetails] = useState({\r\n    duration: 0, // initial state for audio duration\r\n    url: \"\", // this will hold the audio file URL after uploading\r\n  });\r\n  const [coverImage, setCoverImage] = useState(null); // State for the original cover image\r\nconst [thumbnail, setThumbnail] = useState(null);\r\n  const [chapterDetails, setChapterDetails] = useState({\r\n    title: '',\r\n    description: '',\r\n    content: '',\r\n    coverimage: '', // Consider this as a URL after uploading\r\n    type: \"Audio\",\r\n    author_platform_id:'',\r\n    categories: [],\r\n    genres: [],\r\n    // ... more fields as needed\r\n  });\r\n\r\n  const resetForm = () => {\r\n    setFile(null);\r\n    setMonetization('free');\r\n    setSelectedCoverFileName(\"\");\r\n    setSelectedFileName(\"\");\r\n    setChapterDetails({\r\n      title: '',\r\n      description: '',\r\n      content: '',\r\n      coverimage: '',\r\n      type: \"Audio\",\r\n      author_platform_id:'',\r\n      categories: [],\r\n      genres: [],\r\n      // Reset other fields if necessary\r\n    });\r\n     setCoverPreviewUrl(\"\");\r\n  };\r\n\r\n  const firebaseId = auth.currentUser.uid;\r\n\r\n  useEffect(() => {\r\n    const handlePageUnload = () => {\r\n      if (isSuccessDialogOpen) {\r\n        setShowSuccessDialog(false);\r\n      }\r\n    };\r\n\r\n    // Register the event listener\r\n    window.addEventListener('beforeunload', handlePageUnload);\r\n\r\n    // Cleanup function to remove the event listener\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handlePageUnload);\r\n    };\r\n  }, [isSuccessDialogOpen]);\r\n\r\n  const availableCategories = [\r\n    \"Fiction\", \"Nonfiction\", \"Science Fiction\", \"Romance\",\r\n    \"Mystery/Thriller\", \"Fantasy\", \"Biography\", \"History\",\r\n    \"Business/Economics\", \"Self-help\", \"Health/Fitness\",\r\n    \"Cooking/Food\", \"Travel\", \"Technology\"\r\n  ];\r\n\r\n  const maxDescriptionLength = 500;\r\n  const minTitleLength = 3; // Minimum length for title\r\nconst maxTitleLength = 100; // Maximum length for title\r\nconst maxAudioFileSizeMB = 150;\r\nconst minCategoriesRequired = 1;\r\n\r\n  const handleAudioFileChange = (event) => {\r\n    const audioFile = event.target.files[0];\r\n    if (audioFile) {\r\n      setFile(audioFile);\r\n      setSelectedFileName(audioFile.name); // This correctly sets the selected file name for the audio file\r\n  \r\n      // To get the audio duration\r\n      const audio = new Audio(URL.createObjectURL(audioFile));\r\n      audio.onloadedmetadata = function() {\r\n        setAudioDetails({ ...audioDetails, duration: audio.duration });\r\n      };\r\n    }\r\n  };\r\n\r\n  // Image size validation\r\n  const isFileSizeValid = (file) => {\r\n    const maxSizeInMB = 5; // 5MB limit\r\n    const sizeInMB = file.size / 1024 / 1024;\r\n    return sizeInMB <= maxSizeInMB;\r\n  };\r\n\r\n  // Image dimensions validation\r\n  const isImageDimensionsValid = (file) => {\r\n    return new Promise((resolve) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        resolve(img.width === 512 && img.height === 800);\r\n      };\r\n      img.src = URL.createObjectURL(file);\r\n    });\r\n  };\r\n\r\n  // Modified handleCoverImageChange to include thumbnail creation\r\n  const handleCoverImageChange = async (event) => {\r\n    const imageFile = event.target.files[0];\r\n    if (imageFile) {\r\n      if (!isFileSizeValid(imageFile)) {\r\n        Swal.fire('Error', 'Image size should not exceed 5MB.', 'error');\r\n        return;\r\n      }\r\n\r\n      const dimensionsValid = await isImageDimensionsValid(imageFile);\r\n      if (!dimensionsValid) {\r\n        Swal.fire('Error', 'Image dimensions should be exactly 512x800 pixels.', 'error');\r\n        return;\r\n      }\r\n\r\n\r\n      setCoverImage(imageFile); // Set the original cover image in state\r\n\r\n      // Generate and set the thumbnail\r\n      const thumbnailBlob = await resizeImage(imageFile, 256);\r\n      setThumbnail(thumbnailBlob);\r\n      setSelectedCoverFileName(imageFile.name);\r\n      setCoverPreviewUrl(URL.createObjectURL(imageFile));\r\n  \r\n      // Update chapterDetails with the local URL of the image for preview\r\n      setChapterDetails({ ...chapterDetails, coverimage: URL.createObjectURL(imageFile) });\r\n    }\r\n  };\r\n\r\n \r\n  const isAudioFileSizeValid = (file) => {\r\n    return file && file.size <= maxAudioFileSizeMB * 1024 * 1024;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n   \r\n\r\n     // Check if the files are selected\r\n  if (!file || !coverImage) {\r\n    Swal.fire({\r\n      icon: 'error',\r\n      title: 'Missing Files',\r\n      text: 'Please ensure all required files are selected.',\r\n    });\r\n    return;\r\n  }\r\n\r\n\r\n        setShowSuccessDialog(true);\r\n        setSuccessDialogPoints(5); // Set points as per your logic\r\n        setSuccessDialogMessage('Well done! You\\'re a real YeePlatform author.');\r\n\r\n      // Check for cover image\r\nif (!chapterDetails.coverimage) {\r\n  Swal.fire({\r\n      icon: 'error',\r\n      title: 'Oops...',\r\n      text: 'Please provide a cover image.',\r\n  });\r\n  return;\r\n}\r\n\r\nif (chapterDetails.title.length < minTitleLength || chapterDetails.title.length > maxTitleLength) {\r\n  Swal.fire('Error', `Title should be between ${minTitleLength} and ${maxTitleLength} characters.`, 'error');\r\n  return;\r\n}\r\n\r\nif (!isAudioFileSizeValid(file)) {\r\n  Swal.fire('Error', `Audio file size should not exceed ${maxAudioFileSizeMB}MB.`, 'error');\r\n  return;\r\n}\r\n\r\nif (chapterDetails.categories.length < minCategoriesRequired) {\r\n  Swal.fire('Error', `Please select at least ${minCategoriesRequired} category(ies).`, 'error');\r\n  return;\r\n}\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait while your chapter is being uploaded.',\r\n            showConfirmButton: false,\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        // 1. Upload the cover image to Azure Blob Storage\r\n        const coverImageURL = await uploadToAzure(chapterDetails.coverimage);\r\n\r\n        const thumbnailURL = await uploadToAzure(chapterDetails.coverimage, true);\r\n\r\n        const updatedChapterDetails = {\r\n          ...chapterDetails,\r\n          coverimage: coverImageURL, // Set the cover image URL\r\n          thumbnailURL: thumbnailURL // If you're using a thumbnail\r\n        };\r\n\r\n        // 2. Upload the audio file to Azure Blob Storage\r\n        const blobURL = await uploadToAzure(file);\r\n\r\n        // 3. Save chapter details to the database\r\n        const user = auth.currentUser;\r\n        if (!user) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'No user logged in.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        const response = await axios.post(`https://yeeplatformbackend.azurewebsites.net/AudioChapterupload/${user.uid}`, {\r\n            ...chapterDetails,\r\n            content: blobURL,\r\n            duration: audioDetails.duration,\r\n            author_platform_id: firebaseId,\r\n            coverimage: coverImageURL,  // Assign the URL to coverImage field\r\n            thumbnailUrl: thumbnailURL,\r\n        });\r\n\r\n           console.log('Attempting to close Swal and open dialog...');\r\n          Swal.close();\r\n        if (response.data && response.data.message) {\r\n     \r\n       \r\n          resetForm();\r\n          console.log('Form reset, attempting to open dialog...');\r\n          setIsSuccessDialogOpen(true);\r\n          console.log('Dialog should now be open:', dialogOpen);\r\n         \r\n            // Reset the form, or navigate to a success page, or show a success message\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Failed to save chapter details.',\r\n            });\r\n        }\r\n    } catch (error) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'Error during chapter upload.',\r\n        });\r\n    }\r\n};\r\n\r\nconst handleCategoryChange = (event) => {\r\n  const {\r\n    target: { value },\r\n  } = event;\r\n  setChapterDetails({\r\n    ...chapterDetails,\r\n    categories: typeof value === 'string' ? value.split(',') : value,\r\n  });\r\n};\r\n\r\nconst handleCategoryDelete = (categoryToDelete) => () => {\r\n  setChapterDetails({\r\n    ...chapterDetails,\r\n    categories: chapterDetails.categories.filter((category) => category !== categoryToDelete),\r\n  });\r\n};\r\n\r\nconst renderSelectedCategories = () => {\r\n  return chapterDetails.categories.map((category) => (\r\n    <Chip\r\n      key={category}\r\n      label={category}\r\n      onDelete={handleCategoryDelete(category)}\r\n      className=\"m-1\"\r\n    />\r\n  ));\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"p-8 bg-white shadow-md rounded-lg max-w-md mx-auto\">\r\n    <Typography variant=\"h4\" gutterBottom>Upload Audio Chapter</Typography>\r\n\r\n\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"mb-4\">\r\n      <UploadButton\r\n        label=\"Upload Cover Image:\"\r\n        onChange={handleCoverImageChange}\r\n        fileName={selectedCoverFileName}\r\n        accept=\"image/*\"\r\n        required\r\n      />\r\n\r\n         {coverPreviewUrl && (\r\n              <Box\r\n                component=\"img\"\r\n                src={coverPreviewUrl}\r\n                alt=\"Cover Preview\"\r\n                sx={{ width: '100%', height: 'auto', maxWidth: '200px', marginTop: '10px' }} // Adjust image size\r\n              />\r\n            )}\r\n      </div>\r\n\r\n\r\n\r\n     \r\n\r\n<div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">Title:</label>\r\n          <TextField fullWidth variant=\"outlined\"\r\n           type=\"text\"\r\n           placeholder=\"Title\"\r\n          value={chapterDetails.title}\r\n          onChange={(e) => setChapterDetails({ ...chapterDetails, title: e.target.value })}\r\n          required />\r\n        </div>\r\n\r\n     \r\n        <div className=\"mb-4\">\r\n  <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n    Categories:\r\n  </label>\r\n  <Autocomplete\r\n    multiple\r\n    id=\"tags-outlined\"\r\n    options={availableCategories}\r\n    getOptionLabel={(option) => option}\r\n    filterSelectedOptions\r\n    value={chapterDetails.categories}\r\n    onChange={(event, newValue) => {\r\n      setChapterDetails({ ...chapterDetails, categories: newValue });\r\n    }}\r\n    renderInput={(params) => (\r\n      <TextField\r\n        {...params}\r\n        variant=\"outlined\"\r\n        label=\"Select Categories\"\r\n        placeholder=\"Categories\"\r\n      />\r\n    )}\r\n  />\r\n</div>\r\n\r\n\r\n<div className=\"mb-4\">\r\n  <label className=\"block text-gray-700 text-sm font-bold mb-2\">Monetization:</label>\r\n  <select\r\n    value={monetization}\r\n    onChange={(e) => setMonetization(e.target.value)}\r\n    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n  >\r\n    <option value=\"free\">Free</option>\r\n    <option value=\"notfree\">Not Free</option>\r\n  </select>\r\n</div>\r\n\r\n  \r\n    \r\n<div className=\"mb-4\">\r\n  <label className=\"block text-gray-700 text-sm font-bold mb-2\">Description:</label>\r\n  <TextField\r\n    fullWidth\r\n    multiline\r\n    rows={4}\r\n    variant=\"outlined\"\r\n    value={chapterDetails.description}\r\n    onChange={(e) => {\r\n      if (e.target.value.length <= maxDescriptionLength) {\r\n        setChapterDetails({ ...chapterDetails, description: e.target.value });\r\n      }\r\n    }}\r\n    helperText={`${chapterDetails.description.length}/${maxDescriptionLength}`}\r\n    required\r\n  />\r\n</div>\r\n\r\n\r\n        <div className=\"mb-4\">\r\n        <UploadButton\r\n        label=\"Upload Audio File:\"\r\n        onChange={handleAudioFileChange}\r\n        fileName={selectedFileName}\r\n        accept=\"audio/*\"\r\n        required\r\n      />\r\n\r\n      </div>\r\n\r\n\r\n\r\n      {isSuccessDialogOpen && (\r\n <SuccessDialog \r\n isOpen={showSuccessDialog}\r\n onClose={() => setShowSuccessDialog(false)}\r\n points={successDialogPoints}\r\n message={successDialogMessage}\r\n/>\r\n)}\r\n\r\n<SubmitButton buttonText=\"Upload Chapter\" />\r\n</form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DAudioChapter;\r\n","import React, { useState } from 'react';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\n\r\nconst NewsCard = styled(Card)({\r\n  maxWidth: 345,\r\n});\r\n\r\nconst NewsImage = styled(CardMedia)({\r\n  height: 140,\r\n});\r\n\r\nfunction DNews() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography component=\"h1\" variant=\"h4\">📰 News</Typography>\r\n      <NewsCard onClick={handleClickOpen}>\r\n        <CardActionArea>\r\n          <NewsImage\r\n            component=\"img\"\r\n            alt=\"Logo\"\r\n            image=\"https://assets-hfbubwfaacbch3e0.z02.azurefd.net/assets/images/Y.webp\"\r\n            title=\"Logo\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              Welcome to YeePlatform!\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Click here to learn more about our platform.\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </NewsCard>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll=\"paper\"\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">Welcome to YeePlatform!</DialogTitle>\r\n        <DialogContent dividers>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            tabIndex={-1}\r\n          >\r\n            YeePlatform is an innovative subscription platform for authors and readers. We aim to provide an excellent user experience, allowing authors to share their work and readers to access a diverse range of content.\r\n\r\n            Our platform offers a unique way for authors to publish their eBooks and audiobooks, with a subscription model that rewards creators based on the engagement of their work. Readers can enjoy access to a vast library of content, with various genres and target audiences to suit their preferences.\r\n\r\n            Join us today and become a part of the YeePlatform community!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DNews;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Box,\r\n  Chip\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ImageIcon from \"@mui/icons-material/Image\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst FileInput = styled(\"input\")({\r\n  display: \"none\",\r\n});\r\n\r\nconst Form = styled(\"form\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  marginTop: theme.spacing(1),\r\n}));\r\n\r\nconst SubmitButton = styled(Button)(({ theme }) => ({\r\n  margin: theme.spacing(3, 0, 2),\r\n}));\r\n\r\nfunction DNft() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const categories = [\r\n    \"Fiction\",\r\n    \"Nonfiction\",\r\n    \"Science Fiction\",\r\n    \"Romance\",\r\n    \"Mystery/Thriller\",\r\n    \"Fantasy\",\r\n    \"Biography\",\r\n    \"History\",\r\n    \"Business/Economics\",\r\n    \"Self-help\",\r\n    \"Health/Fitness\",\r\n    \"Cooking/Food\",\r\n    \"Travel\",\r\n    \"Technology\",\r\n  ];\r\n\r\n  const targetAudiences = [\"Children\", \"Young Adult\", \"Adult\", \"Senior\"];\r\n\r\n  return (\r\n    <>\r\n       <Typography variant=\"h4\" gutterBottom>\r\n        Create NFT\r\n      </Typography>\r\n      <Typography color=\"error\" variant=\"subtitle1\">\r\n        Note: This page is still in the test phase.\r\n      </Typography>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Number of Shares\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              {...register(\"shares\", { required: \"Please enter the number of shares\" })}\r\n              error={!!errors.shares}\r\n              helperText={errors.shares?.message}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Share Price (in ETH)\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              {...register(\"sharePrice\", { required: \"Please enter the share price in ETH\" })}\r\n              error={!!errors.sharePrice}\r\n              helperText={errors.sharePrice?.message}\r\n            />\r\n          </Grid>\r\n     \r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Book Title\"\r\n              variant=\"outlined\"\r\n              {...register(\"title\", { required: \"Please enter the book title\" })}\r\n              error={!!errors.title}\r\n              helperText={errors.title?.message}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Book Subtitle\"\r\n              variant=\"outlined\"\r\n              {...register(\"subtitle\")}\r\n              error={!!errors.subtitle}\r\n              helperText={errors.subtitle?.message}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              label=\"Book Description\"\r\n              variant=\"outlined\"\r\n              {...register(\"description\", { required: \"Please enter the book description\" })}\r\n              error={!!errors.description}\r\n              helperText={errors.description?.message}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              multiple\r\n              options={categories}\r\n              getOptionLabel={(option) => option}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    label={option}\r\n                    key={index}\r\n                    {...getTagProps({ index })}\r\n                    disabled={true}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Categories\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  helperText={errors.categories?.message}\r\n                  error={!!errors.categories}\r\n                />\r\n              )}\r\n              control={control}\r\n              name=\"categories\"\r\n              rules={{ required: \"Please select at least one category\" }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              multiple\r\n              options={targetAudiences}\r\n              getOptionLabel={(option) => option}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    label={option}\r\n                    key={index}\r\n                    {...getTagProps({ index })}\r\n                    disabled={true}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Target Audiences\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  helperText={errors.targetAudiences?.message}\r\n                  error={!!errors.targetAudiences}\r\n                />\r\n              )}\r\n              control={control}\r\n              name=\"targetAudiences\"\r\n              rules={{ required: \"Please select at least one target audience\" }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Publication Date (if published)\"\r\n              type=\"date\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              {...register(\"publicationDate\")}\r\n              error={!!errors.publicationDate}\r\n          helperText={errors.publicationDate?.message}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"ISBN (if applicable)\"\r\n          variant=\"outlined\"\r\n          {...register(\"isbn\")}\r\n          error={!!errors.isbn}\r\n          helperText={errors.isbn?.message}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Upload Cover Image (JPG, PNG)\r\n            </Typography>\r\n            <FileInput\r\n              accept=\"image/jpeg, image/png\"\r\n              id=\"cover-image\"\r\n              type=\"file\"\r\n              {...register(\"coverImage\", {\r\n                required: \"Please upload a cover image in JPG or PNG format\",\r\n              })}\r\n            />\r\n            <label htmlFor=\"cover-image\">\r\n              <Button\r\n                component=\"span\"\r\n                variant=\"outlined\"\r\n                startIcon={<ImageIcon />}\r\n              >\r\n                Upload Cover Image\r\n              </Button>\r\n            </label>\r\n            {errors.coverImage && (\r\n              <Box mt={1}>\r\n                <Typography variant=\"caption\" color=\"error\">\r\n                  {errors.coverImage.message}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Upload Back Image (JPG, PNG)\r\n            </Typography>\r\n            <FileInput\r\n              accept=\"image/jpeg, image/png\"\r\n              id=\"back-image\"\r\n              type=\"file\"\r\n              {...register(\"backImage\", {\r\n                required: \"Please upload a back image in JPG or PNG format\",\r\n              })}\r\n            />\r\n            <label htmlFor=\"back-image\">\r\n              <Button\r\n                component=\"span\"\r\n                variant=\"outlined\"\r\n                startIcon={<ImageIcon />}\r\n              >\r\n                Upload Back Image\r\n              </Button>\r\n            </label>\r\n            {errors.backImage && (\r\n              <Box mt={1}>\r\n                <Typography variant=\"caption\" color=\"error\">\r\n                  {errors.backImage.message}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Upload Ebook (PDF format)\r\n        </Typography>\r\n        <FileInput\r\n          accept=\".pdf\"\r\n          id=\"ebook-pdf\"\r\n          type=\"file\"\r\n          {...register(\"ebookPdf\", {\r\n            required: \"Please upload the ebook in PDF format\",\r\n          })}\r\n        />\r\n        <label htmlFor=\"ebook-pdf\">\r\n          <Button component=\"span\" variant=\"outlined\" startIcon={<ImageIcon />}>\r\n            Upload Ebook PDF\r\n          </Button>\r\n        </label>\r\n        {errors.ebookPdf && (\r\n          <Box mt={1}>\r\n            <Typography variant=\"caption\" color=\"error\">\r\n              {errors.ebookPdf.message}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <SubmitButton type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n          Submit\r\n        </SubmitButton>\r\n      </Grid>\r\n    </Grid>\r\n  </Form>\r\n</>\r\n);\r\n}\r\n\r\nexport default DNft;","import React, { useContext, useState, useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport 'tailwindcss/tailwind.css';\r\nimport axios from 'axios';\r\nimport { auth } from \"../firebase\";\r\nimport { countries } from '../constants/countries';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\n\r\nexport default function DProfile() {\r\n\r\n    const { user } = useContext(AuthContext);\r\n    const [userData, setUserData] = useState({});\r\n    const [isGoogleUser, setIsGoogleUser] = useState(false);\r\n\r\n    // Check if the user signed up with Google\r\n    useEffect(() => {\r\n        setIsGoogleUser(user.providerData && user.providerData[0].providerId === 'google.com');\r\n    }, [user]);\r\n\r\n    // Handle image upload to the server\r\n    const handleImageUpload = async (event) => {\r\n        if (event.target.files.length === 0) return;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Your image is being uploaded. Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const formData = new FormData();\r\n        formData.append('image', event.target.files[0]);\r\n\r\n        const firebaseId = auth.currentUser.uid;\r\n\r\n        try {\r\n            const response = await axios.post(`https://yeeplatformbackend.azurewebsites.net/userprofilestore/${firebaseId}`, formData);\r\n            if (response.data?.imageUrl) {\r\n                setUserData(prev => ({ ...prev, profileImage: response.data.imageUrl }));\r\n                Swal.fire('Success', 'Image uploaded successfully!', 'success');\r\n            } else {\r\n                throw new Error('Image upload failed');\r\n            }\r\n        } catch (error) {\r\n            Swal.fire('Oops...', 'Error uploading the image!', 'error');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const firebaseId = auth.currentUser.uid;\r\n        axios.get(`https://yeeplatformbackend.azurewebsites.net/userDetails/${firebaseId}`)\r\n            .then(response => {\r\n                const user = response.data;\r\n                setUserData(user);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching user data:\", error);\r\n            });\r\n    }, []);\r\n\r\n    const updateProfile = async () => {\r\n        Swal.fire({\r\n            title: 'Updating...',\r\n            text: 'Your profile is being updated. Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const firebaseId = auth.currentUser.uid;\r\n\r\n        try {\r\n            const response = await axios.put(`https://yeeplatformbackend.azurewebsites.net/updateaccountinfo/${firebaseId}`, userData);\r\n            if (response.data.success && response.data.message === 'User data updated successfully') {\r\n                Swal.fire('Success', 'Profile updated successfully!', 'success');\r\n            } else {\r\n                throw new Error('Profile update failed');\r\n            }\r\n        } catch (error) {\r\n            Swal.fire('Oops...', 'Error updating your profile!', 'error');\r\n        }\r\n    };\r\n\r\n    const handleChangeEmail = () => {\r\n        // Implement email change functionality here\r\n        Swal.fire('Change Email', 'Email change functionality will be implemented soon.', 'info');\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-8 space-y-4\">\r\n            <h1 className=\"text-xl font-semibold\">Author Profile</h1>\r\n            <div className=\"flex items-center justify-center space-x-4 relative\">\r\n                <img\r\n                    alt=\"Profile Picture\"\r\n                    src={userData.profileImage || \"https://assets-hfbubwfaacbch3e0.z02.azurefd.net/assets/images/Y.webp\"}\r\n                    className=\"w-32 h-32 rounded-full\"\r\n                />\r\n\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"profilePic\"\r\n                    className=\"hidden\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleImageUpload}\r\n                />\r\n\r\n                {/* Overlay icon on the profile picture to indicate it's clickable */}\r\n                <label htmlFor=\"profilePic\" className=\"cursor-pointer absolute bottom-2 right-2 bg-gray-600 bg-opacity-50 rounded-full p-2\">\r\n                    {/* Here, ideally, you would have an SVG icon for a camera */}\r\n                    📷\r\n                </label>\r\n            </div>\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                value={userData.username || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, username: e.target.value }))}\r\n            />\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Age\"\r\n                value={userData.age || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, age: e.target.value }))}\r\n            />\r\n            <textarea\r\n                className=\"w-full p-2 border rounded-md\"\r\n                placeholder=\"Bio\"\r\n                value={userData.bio || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, bio: e.target.value }))}\r\n            />\r\n            <select\r\n                className=\"w-full p-2 border rounded-md\"\r\n                value={userData.country || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, country: e.target.value }))}\r\n            >\r\n                <option value=\"\">Select a country</option>\r\n                {countries.map((c) => (\r\n                    <option key={c} value={c}>\r\n                        {c}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            {!isGoogleUser && (\r\n                <input\r\n                    className=\"w-full p-2 border rounded-md\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={userData.email || \"\"}\r\n                    readOnly\r\n                />\r\n            )}\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Phone\"\r\n                value={userData.phone || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, phone: e.target.value }))}\r\n            />\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Twitter\"\r\n                value={userData.socialLinks?.twitter || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, socialLinks: { ...prev.socialLinks, twitter: e.target.value } }))}\r\n            />\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Instagram\"\r\n                value={userData.socialLinks?.instagram || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, socialLinks: { ...prev.socialLinks, instagram: e.target.value } }))}\r\n            />\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Facebook\"\r\n                value={userData.socialLinks?.facebook || \"\"}\r\n                onChange={(e) => setUserData(prev => ({ ...prev, socialLinks: { ...prev.socialLinks, facebook: e.target.value } }))}\r\n            />\r\n\r\n            {/* Email field */}\r\n            <input\r\n                className=\"w-full p-2 border rounded-md\"\r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n                value={userData.email || \"\"}\r\n                readOnly // Make the input field read-only\r\n            />\r\n\r\n            {/* Button to update profile */}\r\n            <button\r\n                className=\"w-full p-2 mt-4 text-white bg-blue-500 rounded-md\"\r\n                onClick={updateProfile}\r\n            >\r\n                Update Profile\r\n            </button>\r\n\r\n            {/* Display the \"Change Email\" button for non-Google users */}\r\n            {!isGoogleUser && (\r\n                <button\r\n                    className=\"w-full p-2 mt-2 text-white bg-yellow-500 rounded-md\"\r\n                    onClick={handleChangeEmail}\r\n                >\r\n                    Change Email\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { ResponsiveContainer, BarChart, Bar, LineChart, Line, XAxis, YAxis, Tooltip, Legend, CartesianGrid } from \"recharts\";\r\nimport { Container, Grid, Typography, Box } from \"@mui/material\";\r\n\r\nconst dataReadersListeners = [\r\n  // Add sample data for the bar chart here\r\n];\r\n\r\nconst dataMonthlyEarnings = [\r\n  // Add sample data for the line chart here\r\n];\r\n\r\nfunction Statistics() {\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Author Statistics\r\n      </Typography>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Total monthly earnings\r\n          </Typography>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={dataMonthlyEarnings}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"month\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"earnings\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Readers vs. Listeners\r\n          </Typography>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={dataReadersListeners}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"content\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"readers\" fill=\"#8884d8\" />\r\n              <Bar dataKey=\"listeners\" fill=\"#82ca9d\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Number of eBooks\r\n          </Typography>\r\n          <Box fontWeight=\"fontWeightBold\" fontSize=\"h4.fontSize\">\r\n            0\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Number of Audiobooks\r\n          </Typography>\r\n          <Box fontWeight=\"fontWeightBold\" fontSize=\"h4.fontSize\">\r\n            0\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Total Earnings\r\n          </Typography>\r\n          <Box fontWeight=\"fontWeightBold\" fontSize=\"h4.fontSize\">\r\n            $0\r\n          </Box>\r\n        </Grid>\r\n\r\n        {/* Add more KPIs and charts in a similar manner */}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n\r\n","import React from 'react';\r\nimport { Typography, Button } from '@mui/material';\r\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\n\r\nexport default function DSupport() {\r\n  const onWhatsAppClick = () => {\r\n    window.open('https://wa.me/256784906354', '_blank');\r\n  };\r\n\r\n  const onEmailClick = () => {\r\n    window.location.href = 'mailto:nkugwamarkwilliam@gmail.com';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <style>\r\n        {`\r\n          @keyframes yellowBubbles {\r\n            0% {\r\n              background-position: 0% 50%;\r\n            }\r\n            50% {\r\n              background-position: 100% 50%;\r\n            }\r\n            100% {\r\n              background-position: 0% 50%;\r\n            }\r\n          }\r\n\r\n          .yellowBubblesAnimation {\r\n            background: radial-gradient(circle, rgba(255,255,224,1) 0%, rgba(255,255,224,0) 70%);\r\n            background-size: 200% 200%;\r\n            animation: yellowBubbles 5s ease infinite;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n          }\r\n        `}\r\n      </style>\r\n      <div className=\"yellowBubblesAnimation\"></div>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Support\r\n      </Typography>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        startIcon={<WhatsAppIcon />}\r\n        onClick={onWhatsAppClick}\r\n        sx={{ mt: 2 }}\r\n      >\r\n        Contact via WhatsApp\r\n      </Button>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        startIcon={<EmailIcon />}\r\n        onClick={onEmailClick}\r\n        sx={{ mt: 2, ml: 2 }}\r\n      >\r\n        Contact via Email\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { Typography } from \"@mui/material\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport UploadButton from '../subcomponents/UploadButton';  // Import UploadButton component\r\nimport SubmitButton from '../subcomponents/SubmitButton'; // Import SubmitButton component\r\nimport SuccessDialog from '../subcomponents/SuccessDialog';\r\nimport { resizeImage, isFileSizeWithinRange } from '../functions/imageUtils';\r\nimport uploadToAzure from '../functions/azureUpload';\r\n\r\nconst DWrite = () => {\r\n  const LottieAnimation = React.lazy(() => import('lottie-react'));\r\n  const [isSuccessDialogOpen, setIsSuccessDialogOpen] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const handlePageUnload = () => {\r\n      if (isSuccessDialogOpen) {\r\n        setIsSuccessDialogOpen(false);\r\n      }\r\n    };\r\n\r\n    // Register the event listener\r\n    window.addEventListener('beforeunload', handlePageUnload);\r\n\r\n    // Cleanup function to remove the event listener\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handlePageUnload);\r\n    };\r\n  }, [isSuccessDialogOpen]);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [coverImage, setCoverImage] = useState(null);\r\n    const [selectedCoverFileName, setSelectedCoverFileName] = useState(\"\");\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [coverPreviewUrl, setCoverPreviewUrl] = useState(\"\");\r\n\r\n    const [thumbnail, setThumbnail] = useState(null);\r\n    const resetForm = () => {\r\n        setTitle('');\r\n        setDescription('');\r\n        setContent('');\r\n        setCoverImage(null);\r\n        setSelectedCoverFileName('');\r\n        setCoverPreviewUrl('');\r\n        setCategories([]);\r\n    };\r\n\r\n    const availableCategories = [\r\n        \"Fiction\", \"Nonfiction\", \"Science Fiction\", \"Romance\",\r\n        \"Mystery/Thriller\", \"Fantasy\", \"Biography\", \"History\",\r\n        \"Business/Economics\", \"Self-help\", \"Health/Fitness\",\r\n        \"Cooking/Food\", \"Travel\", \"Technology\"\r\n      ];\r\n  \r\n      const maxTitleLength = 100; // Example limit for title\r\nconst minTitleLength = 5;   // Minimum length for title\r\nconst maxDescriptionLength = 500; // Already defined\r\nconst minDescriptionLength = 20;  // Example minimum for description\r\nconst maxContentLength = 10000;   // Example limit for chapter content\r\nconst minContentLength = 100;     // Minimum length for chapter content\r\nconst maxSizeInMB = 5;\r\n\r\nconst handleImageChange = async (e) => {\r\n  const file = e.target.files[0];\r\n  if (file) {\r\n      if (!isFileSizeWithinRange(file, 0.001, maxSizeInMB)) {\r\n          Swal.fire('Error', 'Image size should not exceed 5MB.', 'error');\r\n          return;\r\n      }\r\n\r\n      const isDimensionsValid = await isImageDimensionsValid(file, 512, 800);\r\n      if (!isDimensionsValid) {\r\n          Swal.fire('Error', 'Invalid image dimensions.', 'error');\r\n          return;\r\n      }\r\n\r\n      try {\r\n         \r\n          setCoverImage(file);\r\n          setSelectedCoverFileName(file.name);\r\n          setCoverPreviewUrl(URL.createObjectURL(file));\r\n      } catch (error) {\r\n          console.error('Error resizing image:', error);\r\n          Swal.fire('Error', 'Failed to resize the image.', 'error');\r\n      }\r\n  }\r\n};\r\n\r\n      // Image size validation\r\n  const isFileSizeValid = (file) => {\r\n    const maxSizeInMB = 5; // 5MB limit\r\n    const sizeInMB = file.size / 1024 / 1024;\r\n    return sizeInMB <= maxSizeInMB;\r\n  };\r\n\r\n  \r\n\r\n  // Image dimensions validation\r\n  const isImageDimensionsValid = (file) => {\r\n    return new Promise((resolve) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        resolve(img.width === 512 && img.height === 800);\r\n      };\r\n      img.src = URL.createObjectURL(file);\r\n    });\r\n  };\r\n\r\n    const auth = getAuth();\r\n      const firebaseId = auth.currentUser?.uid;\r\n\r\n\r\n\r\n\r\n\r\nconst handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (title.length < minTitleLength || description.length < minDescriptionLength || content.length < minContentLength) {\r\n          Swal.fire(\"Error!\", \"Please ensure all fields meet the minimum length requirements.\", \"error\");\r\n          return;\r\n        }\r\n    \r\n        // Show loading progress dialog\r\n        Swal.fire({\r\n          title: 'Uploading...',\r\n          text: 'Please wait...',\r\n          allowEscapeKey: false,\r\n          allowOutsideClick: false,\r\n          showConfirmButton: false,\r\n          onBeforeOpen: () => {\r\n              Swal.showLoading();\r\n          }\r\n        });\r\n\r\n        let thumbnailUrl = ''; // Declare thumbnailUrl here\r\n        if (thumbnail) {\r\n            try {\r\n                const thumbnailBlob = await resizeImage(coverImage, 256); // Resize the image for thumbnail\r\n                thumbnailUrl = await uploadToAzure(thumbnailBlob, true); // Assign value to thumbnailUrl\r\n            } catch (error) {\r\n                console.error('Error resizing image:', error);\r\n                Swal.fire('Error', 'Failed to resize the image.', 'error');\r\n                return;\r\n            }\r\n        }\r\n    \r\n    \r\n        // Create FormData object\r\n        const formData = new FormData();\r\n        formData.append(\"title\", title);\r\n        formData.append(\"description\", description);\r\n        formData.append(\"content\", content);\r\n        formData.append(\"type\", \"Text\");\r\n        formData.append(\"author_platform_id\", firebaseId);\r\n        formData.append(\"categories\", categories.join(\", \"));\r\n        formData.append(\"thumbnailUrl\", thumbnailUrl);\r\n\r\n    \r\n        // Append cover image if available\r\n        if (coverImage) formData.append(\"coverimage\", coverImage);\r\n    \r\n        try {\r\n            const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/uploadchapter/${firebaseId}`, {\r\n                method: \"POST\",\r\n                body: formData\r\n            });\r\n            const responseBody = await response.text();\r\n            console.log(\"Response Status:\", response.status);\r\n            console.log(\"Response Body:\", responseBody);\r\n    \r\n            // Close the loading dialog\r\n            Swal.close();\r\n    \r\n            // Check if response is OK and handle accordingly\r\n            if (!response.ok) throw new Error(\"Error uploading chapter\")\r\n            const data = JSON.parse(responseBody);   \r\n            setIsSuccessDialogOpen(true);\r\n            resetForm();\r\n    \r\n        } catch (error) {\r\n            // Handle any errors\r\n            Swal.close();\r\n            Swal.fire(\"Error!\", error.message, \"error\");\r\n        }\r\n    };\r\n    \r\n \r\n  \r\n\r\n  return (\r\n    <div className=\"p-8 bg-white shadow-md rounded-lg max-w-md mx-auto\">\r\n        <Typography variant=\"h4\" className=\"text-center mb-6\">Upload a Chapter</Typography>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            {/* Title Input */}\r\n            <div className=\"mb-4\">\r\n                <label htmlFor=\"title\" className=\"block text-gray-700 text-sm font-bold mb-2\">Title</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"title\"\r\n                    className=\"w-full p-2 border rounded\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    required\r\n                />\r\n                <p className=\"text-right text-xs\">{title.length}/{maxTitleLength}</p>\r\n            </div>\r\n\r\n            {/* Description Input */}\r\n            <div className=\"mb-4\">\r\n                <label htmlFor=\"description\" className=\"block text-gray-700 text-sm font-bold mb-2\">Description</label>\r\n                <textarea\r\n                    id=\"description\"\r\n                    className=\"w-full p-2 border rounded\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    required\r\n                />\r\n                <p className=\"text-right text-xs\">{description.length}/{maxDescriptionLength}</p>\r\n            </div>\r\n\r\n            {/* Category Selector */}\r\n            <div className=\"mb-4\">\r\n                <Autocomplete\r\n                    multiple\r\n                    options={availableCategories}\r\n                    getOptionLabel={(option) => option}\r\n                    filterSelectedOptions\r\n                    value={categories}\r\n                    onChange={(event, newValue) => setCategories(newValue)}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} variant=\"outlined\" label=\"Categories\" placeholder=\"Select Categories\" />\r\n                    )}\r\n                />\r\n            </div>\r\n\r\n            {/* Content Input */}\r\n            <div className=\"mb-4\">\r\n                <label htmlFor=\"content\" className=\"block text-gray-700 text-sm font-bold mb-2\">Content</label>\r\n                <textarea\r\n                    id=\"content\"\r\n                    rows=\"10\"\r\n                    className=\"w-full p-2 border rounded\"\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    required\r\n                />\r\n                <p className=\"text-right text-xs\">{content.length}/{maxContentLength}</p>\r\n            </div>\r\n\r\n            {/* Cover Image Upload */}\r\n            <div className=\"mb-4\">\r\n                <UploadButton\r\n                    onChange={handleImageChange}\r\n                    fileName={selectedCoverFileName}\r\n                    accept=\".jpg, .jpeg, .png\"\r\n                    label={`Upload Cover Image (Max size: ${maxSizeInMB}MB)`}\r\n                />\r\n                {coverPreviewUrl && (\r\n                    <img src={coverPreviewUrl} alt=\"Cover Preview\" className=\"mt-4 w-full h-auto\" />\r\n                )}\r\n            </div>\r\n\r\n            {/* Submit Button */}\r\n            <div className=\"flex justify-center\">\r\n                <SubmitButton buttonText=\"Upload\" />\r\n            </div>\r\n        </form>\r\n\r\n        {isSuccessDialogOpen && (\r\n            <SuccessDialog\r\n                isOpen={isSuccessDialogOpen}\r\n                onClose={() => setIsSuccessDialogOpen(false)}\r\n                points={5}\r\n                message=\"Well done! You're a real YeePlatform author.\"\r\n            />\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DWrite;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material';\r\n\r\nimport { auth } from '../firebase';\r\nimport Swal from 'sweetalert2'; \r\n\r\n\r\n\r\nconst MyAudios = () => {\r\n  const [audiobooks, setAudiobooks] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [editedText, setEditedText] = useState('');\r\n  const [selectedDocId, setSelectedDocId] = useState('');\r\n\r\n  const fetchAudiobooks = async () => {\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/getauthoraudios?userId=${auth.currentUser.uid}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setAudiobooks(data);\r\n      } else {\r\n        throw new Error(`Error fetching audiobooks: ${response.statusText}`);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching audiobooks:\", err);\r\n    } finally{\r\n      Swal.close();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAudiobooks();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleClickOpen = (description, docId) => {\r\n    setEditedText(description);\r\n    setSelectedDocId(docId);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      Swal.showLoading();\r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/updateABD`, { \r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n              bookId: selectedDocId,\r\n              description: editedText\r\n          })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const updatedAudiobook = await response.json();\r\n        setAudiobooks(prevBooks => prevBooks.map(ab => ab._id === selectedDocId ? updatedAudiobook : ab));\r\n        setOpen(false);\r\n        fetchAudiobooks();\r\n      } else {\r\n        throw new Error(`Failed to update the description: ${response.statusText}`);\r\n      }\r\n    } catch(err) {\r\n      Swal.fire('Oops...', 'Something went wrong while updating the description!', 'error');\r\n    } finally {\r\n      Swal.close();\r\n        handleClose();\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (docId) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"This will permanently delete the audiobook.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          Swal.showLoading();\r\n          const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/deleteAudiobook/${docId}`, { method: 'DELETE' });\r\n          if (response.ok) {\r\n            setAudiobooks(prevBooks => prevBooks.filter(book => book._id !== docId));\r\n            Swal.fire('Deleted!', 'The audiobook has been deleted.', 'success');\r\n            fetchAudiobooks(); \r\n          } else {\r\n            throw new Error(`Failed to delete the book: ${response.statusText}`);\r\n          }\r\n        } catch(err) {\r\n          Swal.fire('Oops...', 'Something went wrong while deleting the book!', 'error');\r\n        } finally {\r\n          Swal.close();\r\n          \r\n          handleClose();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" component=\"h2\">\r\n        My Audio books\r\n      </Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Title</TableCell>\r\n              <TableCell>Published On</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Duration</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {audiobooks.map((audiobook) => (\r\n              <TableRow key={audiobook._id}>\r\n                <TableCell>{audiobook.title}</TableCell>\r\n                <TableCell>{audiobook.publishedDate}</TableCell>\r\n                <TableCell>{audiobook.description}</TableCell>\r\n                <TableCell>{audiobook.duration}</TableCell>\r\n                <TableCell>\r\n                  <Button onClick={() => handleClickOpen(audiobook.description, audiobook._id)}>Edit</Button>\r\n                  <Button onClick={() => handleDelete(audiobook._id)}>Delete</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        {audiobooks.length === 0 && (\r\n          <Typography variant=\"h6\" style={{ textAlign: 'center', padding: '20px', color: 'grey' }}>\r\n            No data available.\r\n          </Typography>\r\n        )}\r\n\r\n      </TableContainer>\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Edit Audiobook Description</DialogTitle>\r\n<DialogContent>\r\n<DialogContentText>\r\nPlease edit the description of the selected audiobook.\r\n</DialogContentText>\r\n<TextField\r\nautoFocus\r\nmargin=\"dense\"\r\nid=\"description\"\r\nlabel=\"Description\"\r\ntype=\"text\"\r\nfullWidth\r\nvalue={editedText}\r\nonChange={(e) => setEditedText(e.target.value)}\r\n/>\r\n</DialogContent>\r\n<DialogActions>\r\n<Button onClick={handleClose}>Cancel</Button>\r\n<Button onClick={handleSave}>Save</Button>\r\n</DialogActions>\r\n</Dialog>\r\n</div>\r\n);\r\n};\r\n\r\nexport default MyAudios;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { auth } from '../firebase';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nconst MyChapters = () => {\r\n  const [chapters, setChapters] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [audioChapters, setAudioChapters] = useState([]); // New state for audio chapters\r\n  const [editedChapter, setEditedChapter] = useState(null);\r\n  const [editedAudioChapter, setEditedAudioChapter] = useState(null);\r\n  const [selectedDocId, setSelectedDocId] = useState('');\r\n  const [openAudioEdit, setOpenAudioEdit] = useState(false);\r\n  const [selectedAudioDocId, setSelectedAudioDocId] = useState('');\r\n\r\n  const fetchChapters = async () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      try {\r\n        const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/getauthorchapter/${user.uid}`);\r\n        if (!response.ok) {\r\n          \r\n          const errorData = await response.json();\r\n          throw new Error(errorData.message || 'An error occurred while fetching the chapters.');\r\n        }\r\n        const data = await response.json();\r\n        setChapters(data);\r\n        setError(\"\"); // Reset the error message if successful\r\n      } catch (error) {\r\n        console.error(\"Error fetching text chapters:\", error);\r\n        setError(error.toString());\r\n        setChapters([]); // Keep chapters empty if there's an error\r\n      }\r\n    } else {\r\n      setError(\"No user found in auth.\");\r\n    }\r\n  };\r\n  \r\n\r\n  const fetchAudioChapters = async () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      try {\r\n        const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/getAudioChapters/${user.uid}`);\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          throw new Error(errorData.message || 'An error occurred while fetching the audio chapters.');\r\n        }\r\n        const data = await response.json();\r\n        setAudioChapters(data);\r\n        setError(\"\"); // Reset the error message if successful\r\n      } catch (error) {\r\n        console.error(\"Error fetching audio chapters:\", error);\r\n        setError(error.toString());\r\n        setAudioChapters([]); // Keep audio chapters empty if there's an error\r\n      }\r\n    } else {\r\n      setError(\"No user found in auth.\");\r\n    }\r\n  };\r\n  \r\n\r\n  const refreshChapters = () => {\r\n    fetchChapters();\r\n    fetchAudioChapters();\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    // Call both functions to fetch data on component mount\r\n    fetchChapters();\r\n    fetchAudioChapters();\r\n  }, []);\r\n\r\n  const handleClickOpen = (chapter, docId) => {\r\n    console.log(\"Opening chapter for edit:\", chapter);\r\n    setEditedChapter(chapter);\r\n    setSelectedDocId(docId);\r\n    setOpen(true);\r\n  };\r\n  \r\n\r\n\r\n  \r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    // Start loading, e.g. with a loading spinner or similar\r\n    try {\r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/updatechapter/${selectedDocId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(editedChapter),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        // Update the local state to reflect the changes\r\n        setChapters(chapters.map((chapter) => (chapter.id === selectedDocId ? { ...editedChapter } : chapter)));\r\n        // Close the dialog and stop loading\r\n        setOpen(false);\r\n      } else {\r\n        throw new Error('Failed to update the chapter.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating chapter:', error);\r\n      // Handle the error state, stop loading, alert the user, etc.\r\n    }\r\n  };\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    setEditedChapter({ ...editedChapter, description: e.target.value });\r\n  };\r\n  \r\n\r\n  \r\n\r\n  const handleAudioInputChange = (e, field) => {\r\n    setEditedAudioChapter({ ...editedAudioChapter, [field]: e.target.value });\r\n  };\r\n\r\n \r\n\r\n  \r\n\r\n\r\n  // Function to open the edit dialog for audio chapters\r\n  const handleClickOpenAudio = (audioChapter, docId) => {\r\n    setEditedAudioChapter(audioChapter);\r\n    setSelectedAudioDocId(docId);\r\n    setOpenAudioEdit(true);\r\n  };\r\n\r\nconst handleAudioChapterSave = async () => {\r\n  \r\n}\r\n\r\nconst handleTextChapterSave = async () => {\r\n  Swal.fire({\r\n    title: 'Saving chapter...',\r\n    onBeforeOpen: () => {\r\n      Swal.showLoading();\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading(),\r\n  });\r\n\r\n  try {\r\n    const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/updatechapter/${selectedDocId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(editedChapter),\r\n    });\r\n\r\n    if (response.ok) {\r\n      setOpen(false);\r\n      Swal.fire('Success', 'Chapter updated successfully', 'success');\r\n      refreshChapters(); // Reload chapters after successful update\r\n    } else {\r\n      throw new Error('Failed to update the chapter.');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error updating chapter:', error);\r\n    Swal.fire('Error', 'There was a problem saving the chapter', 'error');\r\n  }\r\n};\r\n\r\n\r\nconst handleDelete = async (docId, isAudio = false) => {\r\n  Swal.fire({\r\n    title: 'Are you sure?',\r\n    text: \"You won't be able to revert this!\",\r\n    icon: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#3085d6',\r\n    cancelButtonColor: '#d33',\r\n    confirmButtonText: 'Yes, delete it!'\r\n  }).then(async (result) => {\r\n    if (result.isConfirmed) {\r\n      // Start loading\r\n      Swal.showLoading();\r\n      \r\n      try {\r\n        // Here we'll call the backend API to delete the chapter or audio chapter\r\n        // Let's assume the endpoint to delete a chapter is /deleteChapter/:id for text chapters\r\n        // and /deleteAudioChapter/:id for audio chapters\r\n        const deleteEndpoint = isAudio ? `https://yeeplatformbackend.azurewebsites.net/deleteaudiochapter/${docId}` : `https://yeeplatformbackend.azurewebsites.net/deletechapter/${docId}`;\r\n        const response = await fetch(deleteEndpoint, { method: 'DELETE' });\r\n        \r\n        if (response.ok) {\r\n          refreshChapters();\r\n          // On successful deletion, filter out the deleted chapter from the list\r\n          if (isAudio) {\r\n            setAudioChapters(audioChapters.filter((chapter) => chapter.id !== docId));\r\n          } else {\r\n            setChapters(chapters.filter((chapter) => chapter.id !== docId));\r\n          }\r\n          // Stop loading and show success message\r\n          Swal.hideLoading();\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your file has been deleted.',\r\n            'success'\r\n          )\r\n        } else {\r\n          throw new Error('Failed to delete the chapter.');\r\n        }\r\n      } catch (error) {\r\n        // If there's an error, stop loading and show error message\r\n        Swal.hideLoading();\r\n        Swal.fire(\r\n          'Error!',\r\n          'There was an issue deleting your chapter.',\r\n          'error'\r\n        );\r\n        console.error('Error deleting chapter:', error);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst handleAudioSave = async () => {\r\n  Swal.fire({\r\n    title: 'Saving Audio Chapter...',\r\n    didOpen: () => {\r\n      Swal.showLoading();\r\n    }\r\n  });\r\n\r\n  try {\r\n    const audioChapterData = {\r\n      description: editedAudioChapter.description // send only the required fields\r\n    };\r\n\r\n    const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/updateAudioChapter/${selectedAudioDocId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(audioChapterData),\r\n    });\r\n\r\n    if (response.ok) {\r\n      setOpenAudioEdit(false);\r\n      Swal.fire('Success!', 'Audio chapter updated successfully.', 'success');\r\n      refreshChapters(); // Reload chapters after successful update\r\n    } else {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Failed to update the audio chapter.');\r\n    }\r\n  } catch (error) {\r\n    Swal.fire('Error!', `There was an issue saving your audio chapter: ${error.message}`, 'error');\r\n    console.error('Error updating audio chapter:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" component=\"h2\">\r\n        My Chapters\r\n      </Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Book Title</TableCell>\r\n             \r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {chapters.map((chapter) => (\r\n              <TableRow key={chapter._id}>\r\n                <TableCell>{chapter.title}</TableCell>\r\n\r\n<TableCell>{chapter.description}</TableCell>\r\n<TableCell>\r\n<Button onClick={() => handleClickOpen(chapter, chapter._id)}>Edit</Button>\r\n<Button onClick={() => handleDelete(chapter._id)}>Delete</Button>\r\n</TableCell>\r\n</TableRow>\r\n))}\r\n</TableBody>\r\n\r\n{chapters.length === 0 && (\r\n          <Typography variant=\"h6\" style={{ textAlign: 'center', padding: '20px', color: 'grey' }}>\r\n            No data available.\r\n          </Typography>\r\n        )}\r\n</Table>\r\n</TableContainer>\r\n\r\n\r\n<Typography variant=\"h4\" component=\"h2\" style={{marginTop: '20px'}}>\r\n        My Audio Chapters\r\n      </Typography>\r\n      {/* New Audio Chapters Table */}\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Book Title</TableCell>\r\n              <TableCell>Duration</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Audio File</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {audioChapters.map((chapter) => (\r\n              <TableRow key={chapter._id}>\r\n                <TableCell>{chapter.title}</TableCell>\r\n                <TableCell>{chapter.duration}</TableCell>\r\n                <TableCell>{chapter.description}</TableCell>\r\n                <TableCell>\r\n                <audio controls onError={(e) => console.log('Error playing audio:', e)}>\r\n  <source src={chapter.content} type=\"audio/mpeg\" />\r\n  Your browser does not support the audio element.\r\n</audio>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {/* Sample buttons for Edit and Delete. Adjust as necessary */}\r\n                  <Button onClick={() => handleClickOpenAudio(chapter, chapter._id)}>Edit</Button>\r\n            <Button onClick={() => handleDelete(chapter._id, true)}>Delete</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        {audioChapters.length === 0 && (\r\n          <Typography variant=\"h6\" style={{ textAlign: 'center', padding: '20px', color: 'grey' }}>\r\n            No audio data available.\r\n          </Typography>\r\n        )}\r\n      </TableContainer>\r\n\r\n<Dialog open={open} onClose={handleClose}>\r\n    <DialogTitle>Edit Chapter</DialogTitle>\r\n    <DialogContent>\r\n      <DialogContentText>\r\n        Please edit the chapter information.\r\n      </DialogContentText>\r\n    \r\n      <TextField\r\n       margin=\"dense\"\r\n       id=\"description\"\r\n       label=\"Description\"\r\n       type=\"text\"\r\n       fullWidth\r\n       multiline\r\n       rows={10}\r\n       value={editedChapter?.description || ''}\r\n       onChange={handleInputChange}\r\n      />\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={handleClose}>Cancel</Button>\r\n      <Button onClick={handleTextChapterSave}>Save</Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n\r\n\r\n  {/* New Dialog for editing audio chapters */}\r\n  <Dialog open={openAudioEdit} onClose={() => setOpenAudioEdit(false)}>\r\n    <DialogTitle>Edit Audio Chapter</DialogTitle>\r\n    <DialogContent>\r\n      {/* ... input fields for editing audio chapters */}\r\n      <TextField\r\n        margin=\"dense\"\r\n        id=\"description\"\r\n        label=\"Description\"\r\n        multiline\r\n            rows={4}\r\n        type=\"text\"\r\n        fullWidth\r\n        value={editedAudioChapter?.description || ''}\r\n        onChange={(e) => handleAudioInputChange(e, 'description')}\r\n      />\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={() => setOpenAudioEdit(false)}>Cancel</Button>\r\n      <Button onClick={handleAudioSave}>Save</Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n\r\n</div>\r\n);\r\n};\r\n\r\nexport default MyChapters;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material';\r\nimport Swal from 'sweetalert2'; \r\nimport { auth } from '../firebase';\r\n\r\n\r\n\r\nconst Mybooks = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [editedText, setEditedText] = useState('');\r\n  const [selectedDocId, setSelectedDocId] = useState('');\r\n\r\n  \r\n  const fetchBooks = async () => {\r\n    try {\r\n      Swal.showLoading();  // Show the loading indicator\r\n  \r\n      const authorId = auth.currentUser.uid;\r\n      console.log(\"here is the author id\"+authorId)\r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/getAllBooks/${authorId}`);\r\n      const data = await response.json();\r\n      setBooks(data);\r\n  \r\n      Swal.close();  // Close the loading indicator once data is fetched\r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Something went wrong while fetching books!',\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n  \r\n\r\n    fetchBooks();\r\n}, []);\r\n\r\n\r\nconst handleDeleteConfirmation = (book) => {\r\n  Swal.fire({\r\n    title: 'Are you sure?',\r\n    text: \"You won't be able to revert this!\",\r\n    icon: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#3085d6',\r\n    cancelButtonColor: '#d33',\r\n    confirmButtonText: 'Yes, delete it!'\r\n  }).then(async (result) => {\r\n    if (result.isConfirmed) {\r\n      await handleDelete(book._id);\r\n      fetchBooks();\r\n      Swal.fire(\r\n        'Deleted!',\r\n        'Your book has been deleted.',\r\n        'success'\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\n\r\n  const handleClickOpen = (description, docId) => {\r\n    setEditedText(description);\r\n    setSelectedDocId(docId);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  const handleDelete = async (docId) => {\r\n    try {\r\n      Swal.showLoading();  // Show the loading indicator\r\n  \r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/deleteBook/${docId}`, { method: 'DELETE' });\r\n      if(response.status === 200) {\r\n          setBooks(prevBooks => prevBooks.filter(book => book.id !== docId));\r\n      } else {\r\n          throw new Error(\"Failed to delete the book.\");  // Throw an error to be caught below\r\n      }\r\n      Swal.close();  // Close the loading indicator once deletion is complete\r\n  \r\n    } catch(err) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Something went wrong while deleting the book!',\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      Swal.showLoading();  // Show the loading indicator\r\n      console.log(\"Here is book id \"+selectedDocId)\r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/updateDescription`, { \r\n          method: 'PUT',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n              bookId: selectedDocId,\r\n              description: editedText\r\n          })\r\n\r\n         \r\n      });\r\n      if(response.status === 200) {\r\n          setBooks(prevBooks => prevBooks.map(book => book.id === selectedDocId ? {...book, description: editedText} : book));\r\n          setOpen(false);\r\n      } else {\r\n          throw new Error(\"Failed to update the description.\");  // Throw an error to be caught below\r\n      }\r\n      Swal.close();  // Close the loading indicator once update is complete\r\n  \r\n    } catch(err) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Something went wrong while updating the description!',\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" component=\"h2\">\r\n        My Books\r\n      </Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Title</TableCell>\r\n              <TableCell>Subtitle</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Publication Date</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {books.map((book) => (\r\n              <TableRow key={book._id}>\r\n                <TableCell>{book.title}</TableCell>\r\n                <TableCell>{book.subtitle}</TableCell>\r\n                <TableCell>{book.description}</TableCell>\r\n                <TableCell>{book.publishedDate}</TableCell>\r\n                <TableCell>\r\n                  <Button onClick={() => handleClickOpen(book.description, book._id)}>Edit</Button>\r\n                  <Button onClick={() => handleDeleteConfirmation(book)}>Delete</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        {books.length === 0 && (\r\n          <Typography variant=\"h6\" style={{ textAlign: 'center', padding: '20px', color: 'grey' }}>\r\n            No data available.\r\n          </Typography>\r\n        )}\r\n      </TableContainer>\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Edit Book Description</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please edit the description of the selected book.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={editedText}\r\n            onChange={(e) => setEditedText(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mybooks;\r\n\r\n\r\n\r\n","export const countries = [\r\n    \"Algeria\", \"Angola\", \"Benin\", \"Botswana\", \"Burkina Faso\", \"Burundi\", \r\n    \"Cabo Verde\", \"Cameroon\", \"Central African Republic\", \"Chad\", \"Comoros\", \r\n    \"Democratic Republic of the Congo\", \"Republic of the Congo\", \"Cote d'Ivoire\", \r\n    \"Djibouti\", \"Egypt\", \"Equatorial Guinea\", \"Eritrea\", \"Eswatini\", \"Ethiopia\", \r\n    \"Gabon\", \"Gambia\", \"Ghana\", \"Guinea\", \"Guinea-Bissau\", \"Kenya\", \"Lesotho\", \r\n    \"Liberia\", \"Libya\", \"Madagascar\", \"Malawi\", \"Mali\", \"Mauritania\", \"Mauritius\", \r\n    \"Morocco\", \"Mozambique\", \"Namibia\", \"Niger\", \"Nigeria\", \"Rwanda\", \r\n    \"Sao Tome and Principe\", \"Senegal\", \"Seychelles\", \"Sierra Leone\", \"Somalia\", \r\n    \"South Africa\", \"South Sudan\", \"Sudan\", \"Tanzania\", \"Togo\", \"Tunisia\", \r\n    \"Uganda\", \"Zambia\", \"Zimbabwe\"\r\n  ];\r\n\r\n\r\n","import React, { useState, useEffect, createContext, useCallback } from \"react\";\r\nimport { debounce } from 'lodash'; \r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return React.useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [isAuthor, setIsAuthor] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isVerified, setIsVerified] = useState(\r\n    () => JSON.parse(localStorage.getItem('isVerified')) || false\r\n  );\r\n\r\n  // Memoized functions\r\n  const checkAuthorStatus = useCallback(debounce(async (currentUser) => {\r\n    if (!currentUser || !currentUser.uid) return;\r\n\r\n    try {\r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/isAuthor/${currentUser.uid}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setIsAuthor(data.isAuthor);\r\n      } else {\r\n        //console.error(\"AuthContext: Failed to check author status. Response status:\", response.status);\r\n      }\r\n    } catch (error) {\r\n      //console.error(\"AuthContext: Error checking author status:\", error);\r\n    }\r\n  }, 15000), []);\r\n\r\n  const login = useCallback(async (email, password) => {\r\n    const { auth, signInWithEmailAndPassword } = await import(\"../firebase\");\r\n    try {\r\n      const result = await signInWithEmailAndPassword(auth, email, password);\r\n      setUser(result.user);\r\n      const verified = result.user?.emailVerified || false;\r\n      setIsVerified(verified);\r\n      localStorage.setItem('isVerified', verified.toString());\r\n    } catch (error) {\r\n      //console.error(\"Error logging in:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const loginWithGoogle = useCallback(async () => {\r\n    const { auth, signInWithPopup, GoogleAuthProvider } = await import(\"../firebase\");\r\n    const provider = new GoogleAuthProvider();\r\n\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      setUser(result.user);\r\n      const verified = result.user?.emailVerified || false;\r\n      setIsVerified(verified);\r\n      localStorage.setItem('isVerified', verified.toString());\r\n    } catch (error) {\r\n      //console.error(\"Error signing in with Google:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const logout = useCallback(async () => {\r\n    const { auth, signOut } = await import(\"../firebase\");\r\n    try {\r\n      await signOut(auth);\r\n      setUser(null);\r\n      setIsAuthor(false);\r\n    } catch (error) {\r\n      //console.error(\"Error logging out:\", error);\r\n    }\r\n  }, []);\r\n\r\n  // Effect to manage authentication state\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const { auth, onAuthStateChanged } = await import(\"../firebase\");\r\n      const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\r\n        setUser(currentUser);\r\n        setLoading(false);\r\n\r\n        if (currentUser) {\r\n          setIsVerified(currentUser.emailVerified);\r\n          localStorage.setItem('isVerified', currentUser.emailVerified.toString());\r\n        }\r\n      });\r\n\r\n      return () => unsubscribe();\r\n    }\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  // Effect to check author status after initial render\r\n  useEffect(() => {\r\n    if (user) {\r\n      checkAuthorStatus(user);\r\n    }\r\n  }, [user, checkAuthorStatus]);\r\n\r\n  // Value provided by context\r\n  const contextValue = {\r\n    user,\r\n    isAuthor,\r\n    loading,\r\n    isVerified,\r\n    login,\r\n    logout,\r\n    loginWithGoogle\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthProvider;","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\r\nimport Popper from '@mui/material/Popper';\r\nimport Paper from '@mui/material/Paper';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport Dbarlist from './Dbarlist.js';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function Dbar(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        sx={{\r\n          width: { md: `calc(100% - ${props.drawerWidth}px)` },\r\n          ml: { md: `${props.drawerWidth}px` },\r\n          bgcolor: 'success.main',\r\n        }}\r\n      >\r\n        <Toolbar sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={props.handleDrawerToggle}\r\n            sx={{ mr: 2, display: { md: 'none' } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          {props.width < 830 ? (\r\n            <IconButton\r\n              class=\" ml-12 \"\r\n              size=\"large\"\r\n              color=\"inherit\"\r\n              ref={anchorRef}\r\n              id=\"composition-button\"\r\n              aria-controls={open ? 'composition-menu' : undefined}\r\n              aria-expanded={open ? 'true' : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleToggle}\r\n            >\r\n              <FormatAlignRightIcon sx={{ fontSize: 30 }} />\r\n            </IconButton>\r\n          ) : (\r\n            <Dbarlist />\r\n          )}\r\n\r\n          <div>\r\n            <Popper\r\n              open={open}\r\n              anchorEl={anchorRef.current}\r\n              role={undefined}\r\n              placement=\"bottom-start\"\r\n              transition\r\n              disablePortal\r\n            >\r\n              {({ TransitionProps, placement }) => (\r\n                <Grow\r\n                  {...TransitionProps}\r\n                  style={{\r\n                    transformOrigin:\r\n                      placement === 'bottom-start' ? 'left top' : 'left bottom',\r\n                  }}\r\n                >\r\n                  <Paper>\r\n                    <ClickAwayListener onClickAway={handleClose}>\r\n                      <MenuList\r\n                        autoFocusItem={open}\r\n                        id=\"composition-menu\"\r\n                        aria-labelledby=\"composition-button\"\r\n                        onKeyDown={handleClose}\r\n                      >\r\n                        <MenuItem onClick={handleClose}>Home</MenuItem>\r\n                        <MenuItem onClick={handleClose}>Premium</MenuItem>\r\n                        <MenuItem onClick={handleClose}>Support</MenuItem>\r\n                        <MenuItem onClick={handleClose}>Download</MenuItem>\r\n                      </MenuList>\r\n                    </ClickAwayListener>\r\n                  </Paper>\r\n                  </Grow>\r\n              )}\r\n            </Popper>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n\r\n","import * as React from 'react';\r\n\r\nimport List from '@mui/material/List';\r\nimport AudiotrackIcon from '@mui/icons-material/Audiotrack';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport LibraryBooksIcon from '@mui/icons-material/LibraryBooks';\r\nimport { Link } from \"react-router-dom\";\r\nimport BookIcon from '@mui/icons-material/Book';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport CurrencyBitcoinIcon from '@mui/icons-material/CurrencyBitcoin';\r\nimport NewspaperIcon from '@mui/icons-material/Newspaper';\r\nimport UploadIcon from '@mui/icons-material/Upload';\r\nimport AlternateEmailIcon from '@mui/icons-material/AlternateEmail';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SpatialAudioIcon from '@mui/icons-material/SpatialAudio';\r\nimport VolumeMuteIcon from '@mui/icons-material/VolumeMute';\r\n\r\nexport default function MList() {\r\n    return (\r\n        <div>\r\n            <Avatar\r\n  src=\"https://assets-hfbubwfaacbch3e0.z02.azurefd.net/assets/images/Y.webp\"\r\n  sx={{ width: 50,\r\n     height: 50 , \r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    mx: 'auto',\r\n   mt: -5\r\n          }}\r\n/>\r\n      <List>\r\n        {[\r\n          {\r\n        name:'Upload Ebook',\r\n        path:'/dashboard/Upload',\r\n        \r\n       icon: <UploadIcon  />\r\n        },\r\n        {\r\n        name:'Upload Audio',\r\n        path:'/dashboard/Audio',\r\n        \r\n        icon: <AudiotrackIcon  />\r\n        },\r\n        \r\n        {\r\n          name:'Upload Audio Chapter',\r\n          path:'/dashboard/AudioChapter',\r\n          \r\n          icon: <SpatialAudioIcon  />\r\n          },\r\n\r\n        {\r\n          name:'Write Chapter',\r\n          path:'/dashboard/Write',\r\n          \r\n          icon: <EditIcon  />\r\n          }, \r\n        \r\n        {\r\n        name:'My Audios',\r\n        path:'/dashboard/MyAudios',\r\n        \r\n        icon: <VolumeMuteIcon  />\r\n        },\r\n       \r\n        {\r\n  name: 'My Books',\r\n  path: '/dashboard/MyBooks',\r\n  icon: <LibraryBooksIcon />,\r\n},\r\n{\r\n  name: 'My Chapters',\r\n  path: '/dashboard/MyChapters',\r\n  icon: <BookIcon />,\r\n},\r\n{\r\n        name:'Statistics',\r\n        path:'/dashboard/Statistics',\r\n       \r\n        icon: <BarChartIcon   />\r\n        },\r\n       \r\n       \r\n    ].map((text, index) => (\r\n          <ListItem key={text.name} disablePadding>\r\n            <Link to = {text.path}>\r\n            <ListItemButton>\r\n              <ListItemIcon>\r\n              {text.icon}\r\n              </ListItemIcon>\r\n             \r\n              <ListItemText primary={text.name} />\r\n            \r\n            </ListItemButton>\r\n            </Link>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      \r\n\r\n      <Divider />\r\n      <List>\r\n        {[\r\n              {\r\n        name:'Profile',\r\n        path:'/dashboard/Profile',\r\n        value:\"3\",\r\n        icon: <PersonIcon  />\r\n        }, \r\n              {\r\n        name: 'News',\r\n        path:'/dashboard/News',\r\n        icon: <NewspaperIcon  />\r\n        },\r\n            {\r\n        name:'NFTs',\r\n        path:'/dashboard/Nfts',\r\n        icon: <CurrencyBitcoinIcon  />\r\n        },\r\n        {\r\nname: \"Support\",\r\npath:'/dashboard/AuthorSupport',\r\nicon: <AlternateEmailIcon />\r\n        },\r\n        \r\n            ].map((text, index) => (\r\n          <ListItem key={text.name} disablePadding>\r\n             <Link to = {text.path}>\r\n            <ListItemButton>\r\n              <ListItemIcon>\r\n             {text.icon}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text.name} />\r\n            </ListItemButton>\r\n            </Link>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n        </div>\r\n    )\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport PropTypes from 'prop-types'\r\nimport DNews from \"../components/DNews\";\r\nimport Upload from \"../components/DUpload\";\r\nimport DSupport from \"../components/DSupport\";\r\nimport DStats from \"../components/DStats\";\r\nimport DWrite from \"../components/DWrite\";\r\nimport DAudioChapter from \"../components/DAudioChapter\";\r\nimport DNft from \"../components/DNft\";\r\nimport DProfile from \"../components/DProfile\";\r\nimport DAudio from \"../components/DAudio\";\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport Dbar from \"../subcomponents/Dbar.js\"\r\nimport Mybooks from \"../components/Mybooks\"\r\nimport MyChapters from \"../components/MyChapters\"\r\nimport MyAudios from \"../components/MyAudios\"\r\nimport Dlist from \"../subcomponents/Dlist.js\"\r\nimport { useWindowWidth } from '@react-hook/window-size'\r\nimport {\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      paper: '#fff',\r\n    },\r\n    text: {\r\n      primary: '#173A5E',\r\n      secondary: '#46505A',\r\n    },\r\n    action: {\r\n      active: '#001E3C',\r\n    },\r\n    success: {\r\n      main: '#ffde59',\r\n    },\r\n    outline:{\r\n      main: '#fff'\r\n    }\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\n function Dashboard(props) {\r\n\r\n  \r\n  \r\n\r\n  const swidth = useWindowWidth();\r\n  \r\n\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n\r\n  \r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    } else if (event.key === 'Escape') {\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n  const drawer = (\r\n    <div>\r\n      <Toolbar />\r\n      <Dlist/>\r\n    </div>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n\r\n\r\n\r\n      <Box sx={{ display: 'flex' }}>\r\n   \r\n      <Dbar \r\n     handleDrawerToggle ={handleDrawerToggle}\r\n    width = {swidth}\r\n    drawerWidth={drawerWidth}\r\n//the menu popup\r\nhandleClose = {handleClose} \r\nhandleListKeyDown= {handleListKeyDown}\r\nanchorRef={anchorRef.current}\r\nhandleToggle={handleToggle}\r\nanchorRef1={anchorRef}\r\n      />\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{ width: { md: drawerWidth }, flexShrink: { sm: 0 } }}\r\n        aria-label=\"mailbox folders\"\r\n      >\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: 'block', md: 'none' },\r\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          sx={{\r\n            display: { xs: 'none', md: 'block' },\r\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n          }}\r\n          open\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, p: 3, width: { sm: `calc(100% - ${drawerWidth}px)` } }}\r\n      >\r\n        <Toolbar />\r\n     \r\n\r\n        <Routes>\r\n        <Route path=\"/\" index element = {<DNews />} />\r\n        <Route path=\"Upload\"  element = {<Upload />} />\r\n        <Route path=\"Write\" element={<DWrite />} />\r\n        <Route path=\"Profile\" element={<DProfile />} />\r\n        <Route path=\"News\" index element = {<DNews />} />\r\n        <Route path=\"Audio\" index element = {<DAudio />} />\r\n        <Route path=\"AudioChapter\"  element = {<DAudioChapter />} />\r\n        <Route path=\"Nfts\" index element = {<DNft />} />\r\n        <Route path=\"AuthorSupport\" index element = {<DSupport />} />\r\n        <Route path=\"Statistics\" index element = {<DStats />} />\r\n        <Route path=\"Mybooks\" index element = {<Mybooks />} />\r\n        <Route path=\"MyAudios\" index element = {<MyAudios />} />\r\n        <Route path=\"MyChapters\" index element = {<MyChapters />} />\r\n        </Routes>\r\n\r\n      </Box>\r\n    </Box>\r\n </ThemeProvider>\r\n    );\r\n  }\r\n  Dashboard.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n  };\r\n  \r\nexport default Dashboard\r\n","import React from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Dbarlist() {\r\n  return (\r\n    <Stack\r\n      spacing={5}\r\n      direction=\"row\"\r\n      className=\"hidden lg:flex\" // Hide on smaller screens\r\n      sx={{\r\n        marginLeft: 'auto',\r\n      }}\r\n    >\r\n      <Link to=\"/\" className=\"no-underline text-black hover:text-yellow-300\">\r\n        <Typography variant=\"body2\">Home</Typography>\r\n      </Link>\r\n      <Link to=\"/Permium\" className=\"no-underline text-black hover:text-yellow-300\">\r\n        <Typography variant=\"body2\">Permium</Typography>\r\n      </Link>\r\n      <Link to=\"/Support\" className=\"no-underline text-black hover:text-yellow-300\">\r\n        <Typography variant=\"body2\">Support</Typography>\r\n      </Link>\r\n      <Link to=\"/Download\" className=\"no-underline text-black hover:text-yellow-300\">\r\n        <Typography variant=\"body2\">Download</Typography>\r\n      </Link>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default Dbarlist;\r\n"],"names":["maxDescriptionLength","audiobookFile","setAudiobookFile","useState","coverFile","setCoverFile","title","setTitle","description","setDescription","genres","setGenres","language","setLanguage","isbn","setIsbn","publicationDate","setPublicationDate","successDialogOpen","setSuccessDialogOpen","selectedCoverFileName","setSelectedCoverFileName","selectedAudioFileName","setSelectedAudioFileName","Duration","setDuration","monetization","setMonetization","imagePreviewUrl","setImagePreviewUrl","dialogOpen","setDialogOpen","isSuccessDialogOpen","setIsSuccessDialogOpen","firebaseId","auth","currentUser","uid","useEffect","handlePageUnload","window","addEventListener","removeEventListener","_jsxs","className","children","_jsx","Typography","variant","onSubmit","async","e","preventDefault","isMonetized","length","Swal","concat","size","maxAudiobookFileSizeMB","today","Date","html","allowEscapeKey","allowOutsideClick","showCancelButton","showConfirmButton","onBeforeOpen","onOpen","container","progress","document","createElement","setAttribute","appendChild","audioUrl","coverUrl","thumbnailUrl","resizedImageBlob","resizeImage","uploadToAzure","console","log","Error","data","join","categories","ebookUrl","author_platform_id","response","axios","post","status","error","encType","TextField","fullWidth","value","onChange","target","required","multiline","rows","helperText","UploadButton","label","file","files","isFileSizeValid","icon","text","then","dimensionsValid","Promise","resolve","img","Image","onload","width","height","src","URL","createObjectURL","isImageDimensionsValid","timer","name","fileName","accept","alt","style","maxWidth","maxHeight","Autocomplete","multiple","options","event","newValue","renderInput","params","code","map","option","type","_e$target$files$","audioFile","objectURL","audio","Audio","onloadedmetadata","Math","floor","duration","revokeObjectURL","getAudioDuration","SubmitButton","buttonText","SuccessDialog","isOpen","onClose","handleCloseSuccessDialog","points","message","setFile","coverPreviewUrl","setCoverPreviewUrl","selectedFileName","setSelectedFileName","showSuccessDialog","setShowSuccessDialog","successDialogPoints","setSuccessDialogPoints","successDialogMessage","setSuccessDialogMessage","audioDetails","setAudioDetails","url","coverImage","setCoverImage","thumbnail","setThumbnail","chapterDetails","setChapterDetails","content","coverimage","gutterBottom","maxAudioFileSizeMB","isAudioFileSizeValid","coverImageURL","thumbnailURL","blobURL","user","imageFile","thumbnailBlob","Box","component","sx","marginTop","placeholder","id","getOptionLabel","filterSelectedOptions","NewsCard","styled","Card","NewsImage","CardMedia","open","setOpen","handleClose","_Fragment","onClick","handleClickOpen","CardActionArea","image","CardContent","color","Dialog","scroll","DialogTitle","DialogContent","dividers","DialogContentText","tabIndex","DialogActions","Button","FileInput","display","Form","_ref","theme","spacing","_ref2","margin","_errors$shares","_errors$sharePrice","_errors$title","_errors$subtitle","_errors$description","_errors$publicationDa","_errors$isbn","register","handleSubmit","control","formState","errors","useForm","Grid","item","xs","shares","sharePrice","subtitle","renderTags","getTagProps","index","Chip","disabled","_errors$categories","rules","_errors$targetAudienc","targetAudiences","InputLabelProps","shrink","htmlFor","startIcon","ImageIcon","mt","backImage","ebookPdf","DProfile","_userData$socialLinks","_userData$socialLinks2","_userData$socialLinks3","useContext","AuthContext","userData","setUserData","isGoogleUser","setIsGoogleUser","providerData","providerId","get","catch","profileImage","didOpen","formData","FormData","append","_response$data","imageUrl","prev","username","age","bio","country","countries","c","email","readOnly","phone","socialLinks","twitter","instagram","facebook","put","success","handleChangeEmail","dataReadersListeners","dataMonthlyEarnings","Container","sm","ResponsiveContainer","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","activeDot","r","BarChart","Bar","fill","fontWeight","fontSize","DSupport","WhatsAppIcon","onWhatsAppClick","EmailIcon","onEmailClick","location","href","ml","DWrite","_auth$currentUser","setContent","setCategories","getAuth","fetch","method","body","responseBody","ok","JSON","parse","isFileSizeWithinRange","MyAudios","audiobooks","setAudiobooks","editedText","setEditedText","selectedDocId","setSelectedDocId","fetchAudiobooks","statusText","json","err","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","audiobook","publishedDate","docId","_id","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","prevBooks","filter","book","handleDelete","textAlign","padding","autoFocus","headers","stringify","bookId","updatedAudiobook","ab","MyChapters","chapters","setChapters","setError","audioChapters","setAudioChapters","editedChapter","setEditedChapter","editedAudioChapter","setEditedAudioChapter","openAudioEdit","setOpenAudioEdit","selectedAudioDocId","setSelectedAudioDocId","fetchChapters","errorData","toString","fetchAudioChapters","refreshChapters","isAudio","arguments","undefined","deleteEndpoint","chapter","controls","onError","handleClickOpenAudio","audioChapter","handleAudioInputChange","field","audioChapterData","Mybooks","books","setBooks","fetchBooks","authorId","handleDeleteConfirmation","createContext","useAuth","React","AuthProvider","isAuthor","setIsAuthor","setUser","loading","setLoading","isVerified","setIsVerified","localStorage","getItem","checkAuthorStatus","useCallback","debounce","login","password","signInWithEmailAndPassword","_result$user","verified","emailVerified","setItem","loginWithGoogle","signInWithPopup","GoogleAuthProvider","provider","_result$user2","logout","signOut","onAuthStateChanged","unsubscribe","initializeAuth","contextValue","Provider","Dbar","props","anchorRef","current","contains","CssBaseline","AppBar","position","md","drawerWidth","bgcolor","Toolbar","justifyContent","IconButton","edge","handleDrawerToggle","mr","MenuIcon","flexGrow","class","ref","handleToggle","prevOpen","FormatAlignRightIcon","Dbarlist","Popper","anchorEl","role","placement","transition","disablePortal","TransitionProps","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","MList","Avatar","mx","List","path","UploadIcon","AudiotrackIcon","SpatialAudioIcon","EditIcon","VolumeMuteIcon","LibraryBooksIcon","BookIcon","BarChartIcon","ListItem","disablePadding","Link","to","ListItemButton","ListItemIcon","ListItemText","primary","Divider","PersonIcon","NewspaperIcon","CurrencyBitcoinIcon","AlternateEmailIcon","createTheme","palette","background","paper","secondary","action","active","main","outline","swidth","useWindowWidth","mobileOpen","setMobileOpen","focus","drawer","Dlist","ThemeProvider","handleListKeyDown","key","anchorRef1","flexShrink","Drawer","ModalProps","keepMounted","boxSizing","p","Routes","Route","element","DNews","Upload","DAudio","DAudioChapter","DNft","DStats","Stack","direction","marginLeft"],"sourceRoot":""}