{"version":3,"file":"static/js/381.f2f047e7.chunk.js","mappings":"qWAsBA,MA2YA,EA3YmBA,KACjB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAMC,IAAWF,EAAAA,EAAAA,WAAS,IAC1BG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,KAC5CO,EAAeC,IAAoBR,EAAAA,EAAAA,UAAS,OAC5CS,EAAoBC,IAAyBV,EAAAA,EAAAA,UAAS,OACtDW,EAAeC,IAAoBZ,EAAAA,EAAAA,UAAS,KAC5Ca,EAAeC,IAAoBd,EAAAA,EAAAA,WAAS,IAC5Ce,EAAoBC,IAAyBhB,EAAAA,EAAAA,UAAS,IAEvDiB,EAAgBC,UACpB,MAAMC,EAAOC,EAAAA,GAAKC,YAClB,GAAIF,EACF,IACE,MAAMG,QAAiBC,MAAM,iEAADC,OAAkEL,EAAKM,MACnG,IAAKH,EAASI,GAAI,CAEhB,MAAMC,QAAkBL,EAASM,OACjC,MAAM,IAAIC,MAAMF,EAAUG,SAAW,iDACvC,CACA,MAAMC,QAAaT,EAASM,OAC5B7B,EAAYgC,GACZ3B,EAAS,GACX,CAAE,MAAOD,GACP6B,QAAQ7B,MAAM,gCAAiCA,GAC/CC,EAASD,EAAM8B,YACflC,EAAY,GACd,MAEAK,EAAS,yBACX,EAII8B,EAAqBhB,UACzB,MAAMC,EAAOC,EAAAA,GAAKC,YAClB,GAAIF,EACF,IACE,MAAMG,QAAiBC,MAAM,iEAADC,OAAkEL,EAAKM,MACnG,IAAKH,EAASI,GAAI,CAChB,MAAMC,QAAkBL,EAASM,OACjC,MAAM,IAAIC,MAAMF,EAAUG,SAAW,uDACvC,CACA,MAAMC,QAAaT,EAASM,OAC5BtB,EAAiByB,GACjB3B,EAAS,GACX,CAAE,MAAOD,GACP6B,QAAQ7B,MAAM,iCAAkCA,GAChDC,EAASD,EAAM8B,YACf3B,EAAiB,GACnB,MAEAF,EAAS,yBACX,EAII+B,EAAkBA,KACtBlB,IACAiB,GAAoB,GAItBE,EAAAA,EAAAA,YAAU,KAERnB,IACAiB,GAAoB,GACnB,IAEH,MAUMG,EAAcA,KAClBnC,GAAQ,EAAM,EAwFZoC,EAAepB,eAAOqB,GAA4B,IAArBC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACxCG,IAAAA,KAAU,CACRC,MAAO,gBACPC,KAAM,oCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBC,MAAKlC,UACN,GAAImC,EAAOC,YAAa,CAEtBV,IAAAA,cAEA,IAIE,MAAMW,EAAiBf,EAAO,mEAAAhB,OAAsEe,GAAK,8DAAAf,OAAmEe,GAG5K,WAFuBhB,MAAMgC,EAAgB,CAAEC,OAAQ,YAE1C9B,GAgBX,MAAM,IAAIG,MAAM,iCAfhBM,IAEIK,EACFlC,EAAiBD,EAAcoD,QAAQC,GAAYA,EAAQC,KAAOpB,KAElExC,EAAYD,EAAS2D,QAAQC,GAAYA,EAAQC,KAAOpB,KAG1DK,IAAAA,cACAA,IAAAA,KACE,WACA,8BACA,UAKN,CAAE,MAAOzC,GAEPyC,IAAAA,cACAA,IAAAA,KACE,SACA,4CACA,SAEFZ,QAAQ7B,MAAM,0BAA2BA,EAC3C,CACF,IAEJ,EAwCE,OACEyD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAIJ,SAAC,iBAGxCC,EAAAA,EAAAA,KAACI,EAAAA,EAAc,CAACD,UAAWE,EAAAA,EAAMN,UAC/BD,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAAAP,SAAA,EACJC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,UACRD,EAAAA,EAAAA,MAACU,EAAAA,EAAQ,CAAAT,SAAA,EACPC,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,SAAC,gBAEXC,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,SAAC,iBACXC,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,SAAC,kBAGfC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CAAAX,SACP/D,EAAS2E,KAAKf,IACbE,EAAAA,EAAAA,MAACU,EAAAA,EAAQ,CAAAT,SAAA,EACPC,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,SAAEH,EAAQb,SAEpCiB,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,SAAEH,EAAQgB,eACpBd,EAAAA,EAAAA,MAACW,EAAAA,EAAS,CAAAV,SAAA,EACVC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAASA,IApNSC,EAACnB,EAASnB,KAChCP,QAAQ8C,IAAI,4BAA6BpB,GACzClD,EAAiBkD,GACjB9C,EAAiB2B,GACjBrC,GAAQ,EAAK,EAgNM2E,CAAgBnB,EAASA,EAAQqB,KAAKlB,SAAC,UAC9DC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAASA,IAAMtC,EAAaoB,EAAQqB,KAAKlB,SAAC,gBANrBH,EAAQqB,SAYhB,IAApBjF,EAAS4C,SACAoB,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKgB,MAAO,CAAEC,UAAW,SAAUC,QAAS,OAAQC,MAAO,QAAStB,SAAC,6BAQnGC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKe,MAAO,CAACI,UAAW,QAAQvB,SAAC,uBAI9DD,EAAAA,EAAAA,MAACM,EAAAA,EAAc,CAACD,UAAWE,EAAAA,EAAMN,SAAA,EAC/BD,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAAAP,SAAA,EACJC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,UACRD,EAAAA,EAAAA,MAACU,EAAAA,EAAQ,CAAAT,SAAA,EACPC,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,SAAC,gBACXC,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,SAAC,cACXC,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,SAAC,iBACXC,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,SAAC,gBACXC,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,SAAC,kBAGfC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CAAAX,SACPxD,EAAcoE,KAAKf,IAClBE,EAAAA,EAAAA,MAACU,EAAAA,EAAQ,CAAAT,SAAA,EACPC,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,SAAEH,EAAQb,SACpBiB,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,SAAEH,EAAQ2B,YACpBvB,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,SAAEH,EAAQgB,eACpBZ,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,UACVD,EAAAA,EAAAA,MAAA,SAAO0B,UAAQ,EAACC,QAAUC,GAAMxD,QAAQ8C,IAAI,uBAAwBU,GAAG3B,SAAA,EACrFC,EAAAA,EAAAA,KAAA,UAAQ2B,IAAK/B,EAAQgC,QAASC,KAAK,eAAe,yDAIpC/B,EAAAA,EAAAA,MAACW,EAAAA,EAAS,CAAAV,SAAA,EAERC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAASA,KAAMgB,OAxMTC,EAwM8BnC,EAxMhBnB,EAwMyBmB,EAAQqB,IAvM3ErE,EAAsBmF,GACtB7E,EAAsBuB,QACtBzB,GAAiB,GAHU8E,IAACC,EAActD,CAwMsC,EAAAsB,SAAC,UACzEC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAASA,IAAMtC,EAAaoB,EAAQqB,KAAK,GAAMlB,SAAC,gBAbvCH,EAAQqB,YAoBH,IAAzB1E,EAAcqC,SACboB,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKgB,MAAO,CAAEC,UAAW,SAAUC,QAAS,OAAQC,MAAO,QAAStB,SAAC,iCAMnGD,EAAAA,EAAAA,MAACkC,EAAAA,EAAM,CAAC7F,KAAMA,EAAM8F,QAAS1D,EAAYwB,SAAA,EACrCC,EAAAA,EAAAA,KAACkC,EAAAA,EAAW,CAAAnC,SAAC,kBACbD,EAAAA,EAAAA,MAACqC,EAAAA,EAAa,CAAApC,SAAA,EACZC,EAAAA,EAAAA,KAACoC,EAAAA,EAAiB,CAAArC,SAAC,0CAInBC,EAAAA,EAAAA,KAACqC,EAAAA,EAAS,CACTC,OAAO,QACPzC,GAAG,cACH0C,MAAM,cACNV,KAAK,OACLW,WAAS,EACTC,WAAS,EACTC,KAAM,GACNC,OAAoB,OAAblG,QAAa,IAAbA,OAAa,EAAbA,EAAemE,cAAe,GACrCgC,SAxPsBlB,IACzBhF,EAAiB,IAAKD,EAAemE,YAAac,EAAEmB,OAAOF,OAAQ,QA0PnE7C,EAAAA,EAAAA,MAACgD,EAAAA,EAAa,CAAA/C,SAAA,EACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAASvC,EAAYwB,SAAC,YAC9BC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAlOgB1D,UAC5B0B,IAAAA,KAAU,CACRC,MAAO,oBACPgE,aAAcA,KACZjE,IAAAA,aAAkB,EAEpBkE,kBAAmBA,KAAOlE,IAAAA,cAG5B,IASE,WARuBrB,MAAM,8DAADC,OAA+Db,GAAiB,CAC1G6C,OAAQ,MACRuD,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU3G,MAGVmB,GAKX,MAAM,IAAIG,MAAM,iCAJhB3B,GAAQ,GACR0C,IAAAA,KAAU,UAAW,+BAAgC,WACrDT,GAIJ,CAAE,MAAOhC,GACP6B,QAAQ7B,MAAM,0BAA2BA,GACzCyC,IAAAA,KAAU,QAAS,yCAA0C,QAC/D,GAsM2CiB,SAAC,gBAM5CD,EAAAA,EAAAA,MAACkC,EAAAA,EAAM,CAAC7F,KAAMY,EAAekF,QAASA,IAAMjF,GAAiB,GAAO+C,SAAA,EAClEC,EAAAA,EAAAA,KAACkC,EAAAA,EAAW,CAAAnC,SAAC,wBACbC,EAAAA,EAAAA,KAACmC,EAAAA,EAAa,CAAApC,UAEZC,EAAAA,EAAAA,KAACqC,EAAAA,EAAS,CACRC,OAAO,QACPzC,GAAG,cACH0C,MAAM,cACNE,WAAS,EACLC,KAAM,EACVb,KAAK,OACLW,WAAS,EACTG,OAAyB,OAAlBhG,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBiE,cAAe,GAC1CgC,SAAWlB,GAzQc2B,EAAC3B,EAAG4B,KACjC1G,EAAsB,IAAKD,EAAoB,CAAC2G,GAAQ5B,EAAEmB,OAAOF,OAAQ,EAwQpDU,CAAuB3B,EAAG,oBAG/C5B,EAAAA,EAAAA,MAACgD,EAAAA,EAAa,CAAA/C,SAAA,EACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAASA,IAAM9D,GAAiB,GAAO+C,SAAC,YAChDC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QApKU1D,UACtB0B,IAAAA,KAAU,CACRC,MAAO,0BACPwE,QAASA,KACPzE,IAAAA,aAAkB,IAItB,IACE,MAAM0E,EAAmB,CACvB5C,YAAajE,EAAmBiE,aAG5BpD,QAAiBC,MAAM,mEAADC,OAAoET,GAAsB,CACpHyC,OAAQ,MACRuD,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUI,KAGvB,IAAIhG,EAASI,GAIN,CACL,MAAMC,QAAkBL,EAASM,OACjC,MAAM,IAAIC,MAAMF,EAAUG,SAAW,sCACvC,CANEhB,GAAiB,GACjB8B,IAAAA,KAAU,WAAY,sCAAuC,WAC7DT,GAKJ,CAAE,MAAOhC,GACPyC,IAAAA,KAAU,SAAS,iDAADpB,OAAmDrB,EAAM2B,SAAW,SACtFE,QAAQ7B,MAAM,gCAAiCA,EACjD,GAoIqC0D,SAAC,iBAIlC,C","sources":["components/MyChapters.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { auth } from '../firebase';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nconst MyChapters = () => {\r\n  const [chapters, setChapters] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [audioChapters, setAudioChapters] = useState([]); // New state for audio chapters\r\n  const [editedChapter, setEditedChapter] = useState(null);\r\n  const [editedAudioChapter, setEditedAudioChapter] = useState(null);\r\n  const [selectedDocId, setSelectedDocId] = useState('');\r\n  const [openAudioEdit, setOpenAudioEdit] = useState(false);\r\n  const [selectedAudioDocId, setSelectedAudioDocId] = useState('');\r\n\r\n  const fetchChapters = async () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      try {\r\n        const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/getauthorchapter/${user.uid}`);\r\n        if (!response.ok) {\r\n          \r\n          const errorData = await response.json();\r\n          throw new Error(errorData.message || 'An error occurred while fetching the chapters.');\r\n        }\r\n        const data = await response.json();\r\n        setChapters(data);\r\n        setError(\"\"); // Reset the error message if successful\r\n      } catch (error) {\r\n        console.error(\"Error fetching text chapters:\", error);\r\n        setError(error.toString());\r\n        setChapters([]); // Keep chapters empty if there's an error\r\n      }\r\n    } else {\r\n      setError(\"No user found in auth.\");\r\n    }\r\n  };\r\n  \r\n\r\n  const fetchAudioChapters = async () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      try {\r\n        const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/getAudioChapters/${user.uid}`);\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          throw new Error(errorData.message || 'An error occurred while fetching the audio chapters.');\r\n        }\r\n        const data = await response.json();\r\n        setAudioChapters(data);\r\n        setError(\"\"); // Reset the error message if successful\r\n      } catch (error) {\r\n        console.error(\"Error fetching audio chapters:\", error);\r\n        setError(error.toString());\r\n        setAudioChapters([]); // Keep audio chapters empty if there's an error\r\n      }\r\n    } else {\r\n      setError(\"No user found in auth.\");\r\n    }\r\n  };\r\n  \r\n\r\n  const refreshChapters = () => {\r\n    fetchChapters();\r\n    fetchAudioChapters();\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    // Call both functions to fetch data on component mount\r\n    fetchChapters();\r\n    fetchAudioChapters();\r\n  }, []);\r\n\r\n  const handleClickOpen = (chapter, docId) => {\r\n    console.log(\"Opening chapter for edit:\", chapter);\r\n    setEditedChapter(chapter);\r\n    setSelectedDocId(docId);\r\n    setOpen(true);\r\n  };\r\n  \r\n\r\n\r\n  \r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    // Start loading, e.g. with a loading spinner or similar\r\n    try {\r\n      const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/updatechapter/${selectedDocId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(editedChapter),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        // Update the local state to reflect the changes\r\n        setChapters(chapters.map((chapter) => (chapter.id === selectedDocId ? { ...editedChapter } : chapter)));\r\n        // Close the dialog and stop loading\r\n        setOpen(false);\r\n      } else {\r\n        throw new Error('Failed to update the chapter.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating chapter:', error);\r\n      // Handle the error state, stop loading, alert the user, etc.\r\n    }\r\n  };\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    setEditedChapter({ ...editedChapter, description: e.target.value });\r\n  };\r\n  \r\n\r\n  \r\n\r\n  const handleAudioInputChange = (e, field) => {\r\n    setEditedAudioChapter({ ...editedAudioChapter, [field]: e.target.value });\r\n  };\r\n\r\n \r\n\r\n  \r\n\r\n\r\n  // Function to open the edit dialog for audio chapters\r\n  const handleClickOpenAudio = (audioChapter, docId) => {\r\n    setEditedAudioChapter(audioChapter);\r\n    setSelectedAudioDocId(docId);\r\n    setOpenAudioEdit(true);\r\n  };\r\n\r\nconst handleAudioChapterSave = async () => {\r\n  \r\n}\r\n\r\nconst handleTextChapterSave = async () => {\r\n  Swal.fire({\r\n    title: 'Saving chapter...',\r\n    onBeforeOpen: () => {\r\n      Swal.showLoading();\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading(),\r\n  });\r\n\r\n  try {\r\n    const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/updatechapter/${selectedDocId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(editedChapter),\r\n    });\r\n\r\n    if (response.ok) {\r\n      setOpen(false);\r\n      Swal.fire('Success', 'Chapter updated successfully', 'success');\r\n      refreshChapters(); // Reload chapters after successful update\r\n    } else {\r\n      throw new Error('Failed to update the chapter.');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error updating chapter:', error);\r\n    Swal.fire('Error', 'There was a problem saving the chapter', 'error');\r\n  }\r\n};\r\n\r\n\r\nconst handleDelete = async (docId, isAudio = false) => {\r\n  Swal.fire({\r\n    title: 'Are you sure?',\r\n    text: \"You won't be able to revert this!\",\r\n    icon: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#3085d6',\r\n    cancelButtonColor: '#d33',\r\n    confirmButtonText: 'Yes, delete it!'\r\n  }).then(async (result) => {\r\n    if (result.isConfirmed) {\r\n      // Start loading\r\n      Swal.showLoading();\r\n      \r\n      try {\r\n        // Here we'll call the backend API to delete the chapter or audio chapter\r\n        // Let's assume the endpoint to delete a chapter is /deleteChapter/:id for text chapters\r\n        // and /deleteAudioChapter/:id for audio chapters\r\n        const deleteEndpoint = isAudio ? `https://yeeplatformbackend.azurewebsites.net/deleteaudiochapter/${docId}` : `https://yeeplatformbackend.azurewebsites.net/deletechapter/${docId}`;\r\n        const response = await fetch(deleteEndpoint, { method: 'DELETE' });\r\n        \r\n        if (response.ok) {\r\n          refreshChapters();\r\n          // On successful deletion, filter out the deleted chapter from the list\r\n          if (isAudio) {\r\n            setAudioChapters(audioChapters.filter((chapter) => chapter.id !== docId));\r\n          } else {\r\n            setChapters(chapters.filter((chapter) => chapter.id !== docId));\r\n          }\r\n          // Stop loading and show success message\r\n          Swal.hideLoading();\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your file has been deleted.',\r\n            'success'\r\n          )\r\n        } else {\r\n          throw new Error('Failed to delete the chapter.');\r\n        }\r\n      } catch (error) {\r\n        // If there's an error, stop loading and show error message\r\n        Swal.hideLoading();\r\n        Swal.fire(\r\n          'Error!',\r\n          'There was an issue deleting your chapter.',\r\n          'error'\r\n        );\r\n        console.error('Error deleting chapter:', error);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst handleAudioSave = async () => {\r\n  Swal.fire({\r\n    title: 'Saving Audio Chapter...',\r\n    didOpen: () => {\r\n      Swal.showLoading();\r\n    }\r\n  });\r\n\r\n  try {\r\n    const audioChapterData = {\r\n      description: editedAudioChapter.description // send only the required fields\r\n    };\r\n\r\n    const response = await fetch(`https://yeeplatformbackend.azurewebsites.net/updateAudioChapter/${selectedAudioDocId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(audioChapterData),\r\n    });\r\n\r\n    if (response.ok) {\r\n      setOpenAudioEdit(false);\r\n      Swal.fire('Success!', 'Audio chapter updated successfully.', 'success');\r\n      refreshChapters(); // Reload chapters after successful update\r\n    } else {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Failed to update the audio chapter.');\r\n    }\r\n  } catch (error) {\r\n    Swal.fire('Error!', `There was an issue saving your audio chapter: ${error.message}`, 'error');\r\n    console.error('Error updating audio chapter:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" component=\"h2\">\r\n        My Chapters\r\n      </Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Book Title</TableCell>\r\n             \r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {chapters.map((chapter) => (\r\n              <TableRow key={chapter._id}>\r\n                <TableCell>{chapter.title}</TableCell>\r\n\r\n<TableCell>{chapter.description}</TableCell>\r\n<TableCell>\r\n<Button onClick={() => handleClickOpen(chapter, chapter._id)}>Edit</Button>\r\n<Button onClick={() => handleDelete(chapter._id)}>Delete</Button>\r\n</TableCell>\r\n</TableRow>\r\n))}\r\n</TableBody>\r\n\r\n{chapters.length === 0 && (\r\n          <Typography variant=\"h6\" style={{ textAlign: 'center', padding: '20px', color: 'grey' }}>\r\n            No data available.\r\n          </Typography>\r\n        )}\r\n</Table>\r\n</TableContainer>\r\n\r\n\r\n<Typography variant=\"h4\" component=\"h2\" style={{marginTop: '20px'}}>\r\n        My Audio Chapters\r\n      </Typography>\r\n      {/* New Audio Chapters Table */}\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Book Title</TableCell>\r\n              <TableCell>Duration</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Audio File</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {audioChapters.map((chapter) => (\r\n              <TableRow key={chapter._id}>\r\n                <TableCell>{chapter.title}</TableCell>\r\n                <TableCell>{chapter.duration}</TableCell>\r\n                <TableCell>{chapter.description}</TableCell>\r\n                <TableCell>\r\n                <audio controls onError={(e) => console.log('Error playing audio:', e)}>\r\n  <source src={chapter.content} type=\"audio/mpeg\" />\r\n  Your browser does not support the audio element.\r\n</audio>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {/* Sample buttons for Edit and Delete. Adjust as necessary */}\r\n                  <Button onClick={() => handleClickOpenAudio(chapter, chapter._id)}>Edit</Button>\r\n            <Button onClick={() => handleDelete(chapter._id, true)}>Delete</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        {audioChapters.length === 0 && (\r\n          <Typography variant=\"h6\" style={{ textAlign: 'center', padding: '20px', color: 'grey' }}>\r\n            No audio data available.\r\n          </Typography>\r\n        )}\r\n      </TableContainer>\r\n\r\n<Dialog open={open} onClose={handleClose}>\r\n    <DialogTitle>Edit Chapter</DialogTitle>\r\n    <DialogContent>\r\n      <DialogContentText>\r\n        Please edit the chapter information.\r\n      </DialogContentText>\r\n    \r\n      <TextField\r\n       margin=\"dense\"\r\n       id=\"description\"\r\n       label=\"Description\"\r\n       type=\"text\"\r\n       fullWidth\r\n       multiline\r\n       rows={10}\r\n       value={editedChapter?.description || ''}\r\n       onChange={handleInputChange}\r\n      />\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={handleClose}>Cancel</Button>\r\n      <Button onClick={handleTextChapterSave}>Save</Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n\r\n\r\n  {/* New Dialog for editing audio chapters */}\r\n  <Dialog open={openAudioEdit} onClose={() => setOpenAudioEdit(false)}>\r\n    <DialogTitle>Edit Audio Chapter</DialogTitle>\r\n    <DialogContent>\r\n      {/* ... input fields for editing audio chapters */}\r\n      <TextField\r\n        margin=\"dense\"\r\n        id=\"description\"\r\n        label=\"Description\"\r\n        multiline\r\n            rows={4}\r\n        type=\"text\"\r\n        fullWidth\r\n        value={editedAudioChapter?.description || ''}\r\n        onChange={(e) => handleAudioInputChange(e, 'description')}\r\n      />\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={() => setOpenAudioEdit(false)}>Cancel</Button>\r\n      <Button onClick={handleAudioSave}>Save</Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n\r\n</div>\r\n);\r\n};\r\n\r\nexport default MyChapters;\r\n"],"names":["MyChapters","chapters","setChapters","useState","open","setOpen","error","setError","audioChapters","setAudioChapters","editedChapter","setEditedChapter","editedAudioChapter","setEditedAudioChapter","selectedDocId","setSelectedDocId","openAudioEdit","setOpenAudioEdit","selectedAudioDocId","setSelectedAudioDocId","fetchChapters","async","user","auth","currentUser","response","fetch","concat","uid","ok","errorData","json","Error","message","data","console","toString","fetchAudioChapters","refreshChapters","useEffect","handleClose","handleDelete","docId","isAudio","arguments","length","undefined","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteEndpoint","method","filter","chapter","id","_jsxs","children","_jsx","Typography","variant","component","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","description","Button","onClick","handleClickOpen","log","_id","style","textAlign","padding","color","marginTop","duration","controls","onError","e","src","content","type","handleClickOpenAudio","audioChapter","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","margin","label","fullWidth","multiline","rows","value","onChange","target","DialogActions","onBeforeOpen","allowOutsideClick","headers","body","JSON","stringify","handleAudioInputChange","field","didOpen","audioChapterData"],"sourceRoot":""}