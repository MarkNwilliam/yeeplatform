{"version":3,"file":"static/js/9770.0ef99a63.chunk.js","mappings":"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","sources":["pages/Audiochapterlisten.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/player.css';\r\nimport AudioPlayer from 'react-modern-audio-player';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { analytics, logEvent } from '../firebase.js';\r\nimport { Helmet } from 'react-helmet';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport {\r\n  FaPlay,\r\n  FaPause,\r\n  FaArrowLeft,\r\n  FaMoon,\r\n  FaSun,\r\n} from 'react-icons/fa';\r\n\r\n// Tailwind CSS\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Button,\r\n  Image,\r\n  useColorMode,\r\n} from '@chakra-ui/react';\r\n\r\n// MUI\r\n\r\nconst AudioChapterListen = () => {\r\n  const [audiobook, setAudiobook] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [volume, setVolume] = useState(1.0);\r\n  const [seek, setSeek] = useState(0);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const PROGRESS_STORAGE_KEY = 'audioChapterProgress';\r\n\r\n  const defaultCoverImage = \"/yeeplatform_book_cover.png\";\r\n\r\n  useEffect(() => {\r\n    logEvent(analytics, 'audiochapter_listen_page_visited');\r\n    \r\n\r\n    const fetchAudiobookData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://yeeplatformbackend.azurewebsites.net/getAudioChapter/${id}`\r\n        );\r\n        setAudiobook(response.data);\r\n        console.log(\"my data\");\r\n        console.log(response.data);\r\n        logEvent(analytics, audiobook?.title + '_listen_visited');\r\n        // Fetch saved progress for this chapter\r\n        const savedProgress = localStorage.getItem(\r\n          PROGRESS_STORAGE_KEY + `_${id}`\r\n        );\r\n        if (savedProgress) {\r\n          setSeek(parseFloat(savedProgress));\r\n        }\r\n      } catch (e) {\r\n        setError(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAudiobookData();\r\n  }, [id]);\r\n\r\n  const handlePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n    if (isPlaying) {\r\n      localStorage.setItem(PROGRESS_STORAGE_KEY + `_${id}`, seek);\r\n    }\r\n  };\r\n\r\n  const handleVolumeChange = (e) => {\r\n    setVolume(parseFloat(e.target.value));\r\n  };\r\n\r\n  const handleSeekChange = (e) => {\r\n    setSeek(parseFloat(e.target.value));\r\n    localStorage.setItem(PROGRESS_STORAGE_KEY + `_${id}`, seek);\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    navigate(-1); // Navigate to the previous page\r\n  };\r\n\r\n  const handleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  const onEnd = () => {\r\n    console.log('Audio ended');\r\n    if (seek >= audiobook?.content.duration * 0.95) {\r\n      // Mark chapter as completed (logic based on your requirements)\r\n    }\r\n    localStorage.removeItem(PROGRESS_STORAGE_KEY + `_${id}`); // No need to store progress anymore\r\n  };\r\n\r\n  const renderPlayer = () => {\r\n    if (!audiobook || !audiobook.audio_file) {\r\n      return <p>No audio files available for this book.</p>;\r\n    }\r\n\r\n    const audioFile = audiobook.audio_file;\r\n\r\n    return (\r\n      <Box>\r\n        <Helmet>\r\n  <title>{audiobook.title} - Yee FM</title>\r\n  <meta name=\"description\" content={audiobook.description} />\r\n  <meta name=\"keywords\" content={`${audiobook.title}, audio chapter, listen, audio, literature, Yee FM`} />\r\n  <link rel=\"icon\" href={audiobook.coverimage || defaultCoverImage|| defaultCoverImage} />\r\n  <meta property=\"og:title\" content={`${audiobook.title} - Yee FM`} />\r\n  <meta property=\"og:description\" content={audiobook.description} />\r\n  <meta property=\"og:image\" content={audiobook.coverimage || defaultCoverImage} />\r\n  <meta property=\"og:url\" content={`https://www.yeefm.com/audiochapters/${id}/listen`} />\r\n  <meta property=\"og:type\" content=\"website\" />\r\n</Helmet>\r\n\r\n         <AudioPlayer\r\n          playList={[\r\n            {\r\n              name: audiobook.title,\r\n              writer: audiobook.author,\r\n              img: audiobook.coverimage && audiobook.coverimage.endsWith(\"undefined\") ? defaultCoverImage : audiobook.coverimage || defaultCoverImage,\r\n              src: audiobook.audio_file,\r\n              id: 1,\r\n            },\r\n          ]}\r\n          audioInitialState={{\r\n            isPlaying,\r\n            volume,\r\n            curPlayId: 1,\r\n          }}\r\n          activeUI={{\r\n            all: true,\r\n            progress: 'waveform',\r\n          }}\r\n          customIcons={{\r\n            play: <FaPlay />,\r\n            pause: <FaPause />,\r\n            // Add custom icons as needed\r\n          }}\r\n          placement={{\r\n            interface: {\r\n              templateArea: {\r\n                trackTimeDuration: 'row2-5',\r\n                progress: 'row3-4',\r\n                playButton: 'row2-6',\r\n                repeatType: 'row2-7',\r\n                volume: 'row2-8',\r\n              },\r\n            },\r\n            player: 'bottom-left',\r\n          }}\r\n          onPlay={() => console.log('Audio started playing')}\r\n          onPause={() => console.log('Audio paused')}\r\n          onEnd={() => console.log('Audio ended')}\r\n        />\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error loading audiobook: {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      className={isDarkMode ? 'bg-black text-white' : 'bg-yellow-200'}\r\n      h=\"100vh\"\r\n    >\r\n      <Flex\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"start\"\r\n        h=\"100%\"\r\n      >\r\n        <Flex alignItems=\"center\" mt={2}>\r\n          <Button\r\n            onClick={handleGoBack}\r\n            className=\"text-2xl text-yellow-800 mr-2\"\r\n          >\r\n            <FaArrowLeft />\r\n          </Button>\r\n          <h1 className=\"text-3xl font-bold text-yellow-800 mt-2 mb-2\">\r\n            {audiobook ? audiobook.title : 'No title available'}\r\n          </h1>\r\n        </Flex>\r\n\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" mt={4}>\r\n          <Button\r\n            onClick={handleDarkMode}\r\n            className={\r\n              isDarkMode\r\n                ? 'bg-yellow-800 text-white p-2 rounded-full mr-2'\r\n                : 'bg-yellow-800 text-white p-2 rounded-full mr-2'\r\n            }\r\n          >\r\n            {isDarkMode ? <FaSun /> : <FaMoon />}\r\n          </Button>\r\n        </Flex>\r\n\r\n        <Image\r\n  src={audiobook.coverimage && audiobook.coverimage.endsWith(\"undefined\") ? defaultCoverImage : audiobook.coverimage || defaultCoverImage}\r\n  alt=\"Cover\"\r\n  w={200}\r\n  h={300}\r\n  objectFit=\"cover\"\r\n  borderRadius=\"md\"\r\n  className=\"rounded-lg shadow-lg transition-transform hover:shadow-xl transform hover:scale-105 mt-3\"\r\n/>\r\n\r\n\r\n\r\n        {renderPlayer()}\r\n\r\n        {/* Add more audiobook details and player controls as needed */}\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\nexport default AudioChapterListen;\r\n"],"names":["AudioChapterListen","audiobook","setAudiobook","useState","loading","setLoading","error","setError","isPlaying","setIsPlaying","volume","setVolume","seek","setSeek","isDarkMode","setIsDarkMode","id","useParams","navigate","useNavigate","PROGRESS_STORAGE_KEY","defaultCoverImage","useEffect","logEvent","analytics","async","response","axios","get","concat","data","console","log","title","savedProgress","localStorage","getItem","parseFloat","e","fetchAudiobookData","colorMode","toggleColorMode","useColorMode","_jsx","children","_jsxs","message","Box","className","h","Flex","flexDirection","alignItems","justifyContent","mt","Button","onClick","handleGoBack","FaArrowLeft","handleDarkMode","FaSun","FaMoon","Image","src","coverimage","endsWith","alt","w","objectFit","borderRadius","renderPlayer","audio_file","Helmet","name","content","description","rel","href","property","AudioPlayer","playList","writer","author","img","audioInitialState","curPlayId","activeUI","all","progress","customIcons","play","FaPlay","pause","FaPause","placement","interface","templateArea","trackTimeDuration","playButton","repeatType","player","onPlay","onPause","onEnd"],"sourceRoot":""}