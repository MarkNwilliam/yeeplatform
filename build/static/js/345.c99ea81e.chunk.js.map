{"version":3,"file":"static/js/345.c99ea81e.chunk.js","mappings":"+2gBA8GA,QAtGA,WACE,MAAOA,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAkBC,IAAuBF,EAAAA,EAAAA,WAAS,IAClDG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAC7BK,GAAWC,EAAAA,EAAAA,MACXC,EAAOC,EAAAA,GAAKC,YA+ClB,OA7CAC,EAAAA,EAAAA,YAAU,KACJH,GAAQA,EAAKI,eACfN,EAAS,IACX,GACC,CAACE,EAAMF,KAEVK,EAAAA,EAAAA,YAAU,KACR,IAAIE,EASJ,OARIX,GAAoBE,EAAQ,EAC9BS,EAAUC,aAAY,KACpBT,GAAUU,GAASA,EAAO,GAAE,GAC3B,KACgB,IAAVX,IACTD,GAAoB,GACpBE,EAAS,KAEJ,IAAMW,cAAcH,EAAQ,GAClC,CAACX,EAAkBE,KA6BpBa,EAAAA,EAAAA,MAAA,OACEC,UAAU,yDACVC,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,QAASC,SAAA,EAEpDC,EAAAA,EAAAA,KAAA,UACEL,UAAU,uKACVM,QAASA,IAAMlB,GAAU,GACzBa,MAAO,CAAEM,aAAc,QAASH,UAEhCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,UAAUQ,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAYC,MAAM,6BAA4BP,UAC/GC,EAAAA,EAAAA,KAAA,QAAMO,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,yBAGzEhB,EAAAA,EAAAA,MAAA,OACEC,UAAU,uCACVC,MAAO,CAAEC,gBAAiB,UAAWc,SAAU,QAASC,MAAO,QAASb,SAAA,EAExEC,EAAAA,EAAAA,KAAA,MACEL,UAAU,0BACVC,MAAO,CAAEiB,MAAO,WAAYd,SAC7B,uBAGDC,EAAAA,EAAAA,KAACc,IAAM,CAACC,cAAeC,EAAgBpB,MAAO,CAAEqB,OAAQ,IAAKf,aAAc,WAC3EF,EAAAA,EAAAA,KAAA,KACEL,UAAU,OACVC,MAAO,CAAEiB,MAAO,WAAYd,SAC7B,2HAIDC,EAAAA,EAAAA,KAAA,UACEL,UAAU,kFACVC,MAAO,CACLC,gBAAiBrB,EAAU,UAAY,UACvCqC,MAAO,QAETK,SAAUvC,EACVsB,QAjEwBkB,UAC9B,IACE1C,GAAW,GACXG,GAAoB,SAEdwC,EAAAA,EAAAA,IAAsBnC,GACzBoC,MAAK,SAGR5C,GAAW,GACX6C,IAAAA,KAAU,CACRC,KAAM,UACNC,MAAO,aACPC,KAAM,8FAEV,CAAE,MAAOC,GACPjD,GAAW,GACXkD,QAAQD,MAAM,oCAAqCA,GACnDJ,IAAAA,KAAU,CACRC,KAAM,QACNC,MAAO,QACPC,KAAMC,EAAME,SAEhB,GA0CuC7B,SAEhCvB,EAAU,aAAe,8BAG3BG,IAAoBe,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CAAG,qBAAmBlB,EAAM,YAIzD,C","sources":["pages/VerifyEmail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { auth } from '../firebase';\r\nimport Swal from 'sweetalert2';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Lottie from 'lottie-react';\r\nimport emailAnimation from '../animations/emailsent.json';\r\nimport { sendEmailVerification } from \"firebase/auth\";\r\n\r\nfunction VerifyEmail() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [timer, setTimer] = useState(60);\r\n  const navigate = useNavigate();\r\n  const user = auth.currentUser;\r\n\r\n  useEffect(() => {\r\n    if (user && user.emailVerified) {\r\n      navigate('/');\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  useEffect(() => {\r\n    let timerId;\r\n    if (isButtonDisabled && timer > 0) {\r\n      timerId = setInterval(() => {\r\n        setTimer((prev) => prev - 1);\r\n      }, 1000);\r\n    } else if (timer === 0) {\r\n      setIsButtonDisabled(false);\r\n      setTimer(60); // Reset the timer back to 60 seconds after it hits 0\r\n    }\r\n    return () => clearInterval(timerId);\r\n  }, [isButtonDisabled, timer]);\r\n\r\n  const resendVerificationEmail = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setIsButtonDisabled(true);\r\n\r\n      await sendEmailVerification(user)\r\n        .then(() => {\r\n          // Email verification sent!\r\n        });\r\n      setLoading(false);\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Email Sent',\r\n        text: 'A verification email has been sent. Please check your inbox and verify your email address.',\r\n      });\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error('Error sending verification email:', error);\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"min-h-screen flex flex-col items-center justify-center\" \r\n      style={{ backgroundColor: '#fff', padding: '20px' }}\r\n    >\r\n      <button \r\n        className=\"self-start mb-4 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded-full\"\r\n        onClick={() => navigate(-1)}\r\n        style={{ marginBottom: '1rem' }}\r\n      >\r\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n        </svg>\r\n      </button>\r\n      <div \r\n        className=\"p-4 rounded-lg shadow-md text-center\" \r\n        style={{ backgroundColor: '#ffde59', maxWidth: '400px', width: '100%' }}\r\n      >\r\n        <h1 \r\n          className=\"text-2xl font-bold mb-6\"\r\n          style={{ color: '#173A5E' }}\r\n        >\r\n          Verify Your Email\r\n        </h1>\r\n        <Lottie animationData={emailAnimation} style={{ height: 150, marginBottom: '1rem' }} /> \r\n        <p \r\n          className=\"mb-4\"\r\n          style={{ color: '#46505A' }}\r\n        >\r\n          A verification email has been sent to your email address. Please check\r\n          your email and click on the verification link.\r\n        </p>\r\n        <button\r\n          className=\"w-full py-2 px-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-1\"\r\n          style={{\r\n            backgroundColor: loading ? '#001E3C' : '#173A5E',\r\n            color: '#fff'\r\n          }}\r\n          disabled={isButtonDisabled}\r\n          onClick={resendVerificationEmail}\r\n        >\r\n          {loading ? 'Sending...' : 'Resend Verification Email'}\r\n        </button>\r\n        {/* Timer Text */}\r\n        {isButtonDisabled && <p>You can resend in {timer}s</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VerifyEmail;\r\n"],"names":["loading","setLoading","useState","isButtonDisabled","setIsButtonDisabled","timer","setTimer","navigate","useNavigate","user","auth","currentUser","useEffect","emailVerified","timerId","setInterval","prev","clearInterval","_jsxs","className","style","backgroundColor","padding","children","_jsx","onClick","marginBottom","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","maxWidth","width","color","Lottie","animationData","emailAnimation","height","disabled","async","sendEmailVerification","then","Swal","icon","title","text","error","console","message"],"sourceRoot":""}